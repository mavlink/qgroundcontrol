<?xml version='1.0'?>
<mavlink>
     <version>3</version>
     <enums>
          <enum name="MAV_AUTOPILOT">
               <description>Micro air vehicle / autopilot classes. This identifies the individual model.</description>
               <entry value="0" name="MAV_AUTOPILOT_GENERIC">
                    <description>Generic autopilot, full support for everything</description>
               </entry>
               <entry value="1" name="MAV_AUTOPILOT_PIXHAWK">
                    <description>PIXHAWK autopilot, http://pixhawk.ethz.ch</description>
               </entry>
               <entry value="2" name="MAV_AUTOPILOT_SLUGS">
                    <description>SLUGS autopilot, http://slugsuav.soe.ucsc.edu</description>
               </entry>
               <entry value="3" name="MAV_AUTOPILOT_ARDUPILOTMEGA">
                    <description>ArduPilotMega / ArduCopter, http://diydrones.com</description>
               </entry>
               <entry value="4" name="MAV_AUTOPILOT_OPENPILOT">
                    <description>OpenPilot, http://openpilot.org</description>
               </entry>
               <entry value="5" name="MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY">
                    <description>Generic autopilot only supporting simple waypoints</description>
               </entry>
               <entry value="6" name="MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY">
                    <description>Generic autopilot supporting waypoints and other simple navigation commands</description>
               </entry>
               <entry value="7" name="MAV_AUTOPILOT_GENERIC_MISSION_FULL">
                    <description>Generic autopilot supporting the full mission command set</description>
               </entry>
               <entry value="8" name="MAV_AUTOPILOT_INVALID">
                    <description>No valid autopilot, e.g. a GCS or other MAVLink component</description>
               </entry>
               <entry value="9" name="MAV_AUTOPILOT_PPZ">
                    <description>PPZ UAV - http://nongnu.org/paparazzi</description>
               </entry>
               <entry value="10" name="MAV_AUTOPILOT_UDB">
                    <description>UAV Dev Board</description>
               </entry>
               <entry value="11" name="MAV_AUTOPILOT_FP">
                    <description>FlexiPilot</description>
               </entry>
          </enum>
          <!-- WARNING: MAV_ACTION Enum is no longer supported - has been removed. Please use MAV_CMD -->
          <enum name="MAV_MODE_FLAG">
               <description>These flags encode the MAV mode.</description>
               <entry value="128" name="MAV_MODE_FLAG_SAFETY_ARMED">
                    <description>0b10000000 MAV safety set to armed. Motors are enabled / running / can start. Ready to fly.</description>
               </entry>
               <entry value="64" name="MAV_MODE_FLAG_MANUAL_INPUT_ENABLED">
                    <description>0b01000000 remote control input is enabled.</description>
               </entry>
               <entry value="32" name="MAV_MODE_FLAG_HIL_ENABLED">
                    <description>0b00100000 hardware in the loop simulation. All motors / actuators are blocked, but internal software is full operational.</description>
               </entry>
               <entry value="16" name="MAV_MODE_FLAG_STABILIZE_ENABLED">
                    <description>0b00010000 system stabilizes electronically its attitude (and optionally position). It needs however further control inputs to move around.</description>
               </entry>
               <entry value="8" name="MAV_MODE_FLAG_GUIDED_ENABLED">
                    <description>0b00001000 guided mode enabled, system flies MISSIONs / mission items.</description>
               </entry>
               <entry value="4" name="MAV_MODE_FLAG_AUTO_ENABLED">
                    <description>0b00000100 autonomous mode enabled, system finds its own goal positions. Guided flag can be set or not, depends on the actual implementation.</description>
               </entry>
               <entry value="2" name="MAV_MODE_FLAG_TEST_ENABLED">
                    <description>0b00000010 system has a test mode enabled. This flag is intended for temporary system tests and should not be used for stable implementations.</description>
               </entry>
               <entry value="1" name="MAV_MODE_FLAG_CUSTOM_MODE_ENABLED">
                    <description>0b00000001 Reserved for future use.</description>
               </entry>
          </enum>
          <enum name="MAV_MODE_FLAG_DECODE_POSITION">
               <description>These values encode the bit positions of the decode position. These values can be used to read the value of a flag bit by combining the base_mode variable with AND with the flag position value. The result will be either 0 or 1, depending on if the flag is set or not.</description>
               <entry value="128" name="MAV_MODE_FLAG_DECODE_POSITION_SAFETY">
                    <description>First bit:  10000000</description>
               </entry>
               <entry value="64" name="MAV_MODE_FLAG_DECODE_POSITION_MANUAL">
                    <description>Second bit: 01000000</description>
               </entry>
               <entry value="32" name="MAV_MODE_FLAG_DECODE_POSITION_HIL">
                    <description>Third bit:  00100000</description>
               </entry>
               <entry value="16" name="MAV_MODE_FLAG_DECODE_POSITION_STABILIZE">
                    <description>Fourth bit: 00010000</description>
               </entry>
               <entry value="8" name="MAV_MODE_FLAG_DECODE_POSITION_GUIDED">
                    <description>Fifth bit:  00001000</description>
               </entry>
               <entry value="4" name="MAV_MODE_FLAG_DECODE_POSITION_AUTO">
                    <description>Sixt bit:   00000100</description>
               </entry>
               <entry value="2" name="MAV_MODE_FLAG_DECODE_POSITION_TEST">
                    <description>Seventh bit: 00000010</description>
               </entry>
               <entry value="1" name="MAV_MODE_FLAG_DECODE_POSITION_CUSTOM_MODE">
                    <description>Eighth bit: 00000001</description>
               </entry>
          </enum>
          <enum name="MAV_GOTO">
               <description>Override command, pauses current mission execution and moves immediately to a position</description>
               <entry value="0" name="MAV_GOTO_DO_HOLD">
                    <description>Hold at the current position.</description>
               </entry>
               <entry value="1" name="MAV_GOTO_DO_CONTINUE">
                    <description>Continue with the next item in mission execution.</description>
               </entry>
               <entry value="2" name="MAV_GOTO_HOLD_AT_CURRENT_POSITION">
                    <description>Hold at the current position of the system</description>
               </entry>
               <entry value="3" name="MAV_GOTO_HOLD_AT_SPECIFIED_POSITION">
                    <description>Hold at the position specified in the parameters of the DO_HOLD action</description>
               </entry>
          </enum>
          <enum name="MAV_MODE">
               <description>These defines are predefined OR-combined mode flags. There is no need to use values from this enum, but it
               simplifies the use of the mode flags. Note that manual input is enabled in all modes as a safety override.</description>
               <entry value="0" name="MAV_MODE_PREFLIGHT">
                    <description>System is not ready to fly, booting, calibrating, etc. No flag is set.</description>
               </entry>
               <entry value="80" name="MAV_MODE_STABILIZE_DISARMED">
                    <description>System is allowed to be active, under assisted RC control.</description>
               </entry>
               <entry value="208" name="MAV_MODE_STABILIZE_ARMED">
                    <description>System is allowed to be active, under assisted RC control.</description>
               </entry>
               <entry value="64" name="MAV_MODE_MANUAL_DISARMED">
                    <description>System is allowed to be active, under manual (RC) control, no stabilization</description>
               </entry>
               <entry value="192" name="MAV_MODE_MANUAL_ARMED">
                    <description>System is allowed to be active, under manual (RC) control, no stabilization</description>
               </entry>
               <entry value="88" name="MAV_MODE_GUIDED_DISARMED">
                    <description>System is allowed to be active, under autonomous control, manual setpoint</description>
               </entry>
               <entry value="216" name="MAV_MODE_GUIDED_ARMED">
                    <description>System is allowed to be active, under autonomous control, manual setpoint</description>
               </entry>
               <entry value="92" name="MAV_MODE_AUTO_DISARMED">
                    <description>System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by MISSIONs)</description>
               </entry>
               <entry value="220" name="MAV_MODE_AUTO_ARMED">
                    <description>System is allowed to be active, under autonomous control and navigation (the trajectory is decided onboard and not pre-programmed by MISSIONs)</description>
               </entry>
               <entry value="66" name="MAV_MODE_TEST_DISARMED">
                    <description>UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only.</description>
               </entry>
               <entry value="194" name="MAV_MODE_TEST_ARMED">
                    <description>UNDEFINED mode. This solely depends on the autopilot - use with caution, intended for developers only.</description>
               </entry>
          </enum>
          <enum name="MAV_STATE">
               <entry value="0" name="MAV_STATE_UNINIT">
                    <description>Uninitialized system, state is unknown.</description>
               </entry>
               <entry name="MAV_STATE_BOOT">
                    <description>System is booting up.</description>
               </entry>
               <entry name="MAV_STATE_CALIBRATING">
                    <description>System is calibrating and not flight-ready.</description>
               </entry>
               <entry name="MAV_STATE_STANDBY">
                    <description>System is grounded and on standby. It can be launched any time.</description>
               </entry>
               <entry name="MAV_STATE_ACTIVE">
                    <description>System is active and might be already airborne. Motors are engaged.</description>
               </entry>
               <entry name="MAV_STATE_CRITICAL">
                    <description>System is in a non-normal flight mode. It can however still navigate.</description>
               </entry>
               <entry name="MAV_STATE_EMERGENCY">
                    <description>System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down.</description>
               </entry>
               <entry name="MAV_STATE_POWEROFF">
                    <description>System just initialized its power-down sequence, will shut down now.</description>
               </entry>
          </enum>
          <enum name="MAV_TYPE">
               <entry value="0" name="MAV_TYPE_GENERIC">
                    <description>Generic micro air vehicle.</description>
               </entry>
               <entry value="1" name="MAV_TYPE_FIXED_WING">
                    <description>Fixed wing aircraft.</description>
               </entry>
               <entry value="2" name="MAV_TYPE_QUADROTOR">
                    <description>Quadrotor</description>
               </entry>
               <entry value="3" name="MAV_TYPE_COAXIAL">
                    <description>Coaxial helicopter</description>
               </entry>
               <entry value="4" name="MAV_TYPE_HELICOPTER">
                    <description>Normal helicopter with tail rotor.</description>
               </entry>
               <entry value="5" name="MAV_TYPE_ANTENNA_TRACKER">
                    <description>Ground installation</description>
               </entry>
               <entry value="6" name="MAV_TYPE_GCS">
                    <description>Operator control unit / ground control station</description>
               </entry>
               <entry value="7" name="MAV_TYPE_AIRSHIP">
                    <description>Airship, controlled</description>
               </entry>
               <entry value="8" name="MAV_TYPE_FREE_BALLOON">
                    <description>Free balloon, uncontrolled</description>
               </entry>
               <entry value="9" name="MAV_TYPE_ROCKET">
                    <description>Rocket</description>
               </entry>
               <entry value="10" name="MAV_TYPE_GROUND_ROVER">
                    <description>Ground rover</description>
               </entry>
               <entry value="11" name="MAV_TYPE_SURFACE_BOAT">
                    <description>Surface vessel, boat, ship</description>
               </entry>
               <entry value="12" name="MAV_TYPE_SUBMARINE">
                    <description>Submarine</description>
               </entry>
               <entry value="13" name="MAV_TYPE_HEXAROTOR">
                    <description>Hexarotor</description>
               </entry>
               <entry value="14" name="MAV_TYPE_OCTOROTOR">
                    <description>Octorotor</description>
               </entry>
               <entry value="15" name="MAV_TYPE_TRICOPTER">
                    <description>Octorotor</description>
               </entry>
               <entry value="16" name="MAV_TYPE_FLAPPING_WING">
                    <description>Flapping wing</description>
               </entry>
          </enum>
          <enum name="MAV_COMPONENT">
               <entry value="0" name="MAV_COMP_ID_ALL">
                    <description/>
               </entry>
               <entry value="220" name="MAV_COMP_ID_GPS">
                    <description/>
               </entry>
               <entry value="190" name="MAV_COMP_ID_MISSIONPLANNER">
                    <description/>
               </entry>
               <entry value="195" name="MAV_COMP_ID_PATHPLANNER">
                    <description/>
               </entry>
               <entry value="180" name="MAV_COMP_ID_MAPPER">
                    <description/>
               </entry>
               <entry value="100" name="MAV_COMP_ID_CAMERA">
                    <description/>
               </entry>
               <entry value="200" name="MAV_COMP_ID_IMU">
                    <description/>
               </entry>
               <entry value="201" name="MAV_COMP_ID_IMU_2">
                    <description/>
               </entry>
               <entry value="202" name="MAV_COMP_ID_IMU_3">
                    <description/>
               </entry>
               <entry value="240" name="MAV_COMP_ID_UDP_BRIDGE">
                    <description/>
               </entry>
               <entry value="241" name="MAV_COMP_ID_UART_BRIDGE">
                    <description/>
               </entry>
               <entry value="250" name="MAV_COMP_ID_SYSTEM_CONTROL">
                    <description/>
               </entry>
               <entry value="140" name="MAV_COMP_ID_SERVO1">
                    <description/>
               </entry>
               <entry value="141" name="MAV_COMP_ID_SERVO2">
                    <description/>
               </entry>
               <entry value="142" name="MAV_COMP_ID_SERVO3">
                    <description/>
               </entry>
               <entry value="143" name="MAV_COMP_ID_SERVO4">
                    <description/>
               </entry>
               <entry value="144" name="MAV_COMP_ID_SERVO5">
                    <description/>
               </entry>
               <entry value="145" name="MAV_COMP_ID_SERVO6">
                    <description/>
               </entry>
               <entry value="146" name="MAV_COMP_ID_SERVO7">
                    <description/>
               </entry>
               <entry value="147" name="MAV_COMP_ID_SERVO8">
                    <description/>
               </entry>
               <entry value="148" name="MAV_COMP_ID_SERVO9">
                    <description/>
               </entry>
               <entry value="149" name="MAV_COMP_ID_SERVO10">
                    <description/>
               </entry>
               <entry value="150" name="MAV_COMP_ID_SERVO11">
                    <description/>
               </entry>
               <entry value="151" name="MAV_COMP_ID_SERVO12">
                    <description/>
               </entry>
               <entry value="152" name="MAV_COMP_ID_SERVO13">
                    <description/>
               </entry>
               <entry value="153" name="MAV_COMP_ID_SERVO14">
                    <description/>
               </entry>
          </enum>
          <enum name="MAV_FRAME">
               <entry value="0" name="MAV_FRAME_GLOBAL">
                    <description>Global coordinate frame, WGS84 coordinate system. First value / x: latitude, second value / y: longitude, third value / z: positive altitude over mean sea level (MSL)</description>
               </entry>
               <entry value="1" name="MAV_FRAME_LOCAL_NED">
                    <description>Local coordinate frame, Z-up (x: north, y: east, z: down).</description>
               </entry>
               <entry value="2" name="MAV_FRAME_MISSION">
                    <description>NOT a coordinate frame, indicates a mission command.</description>
               </entry>
               <entry value="3" name="MAV_FRAME_GLOBAL_RELATIVE_ALT">
                    <description>Global coordinate frame, WGS84 coordinate system, relative altitude over ground with respect to the home position. First value / x: latitude, second value / y: longitude, third value / z: positive altitude with 0 being at the altitude of the home location.</description>
               </entry>
               <entry value="4" name="MAV_FRAME_LOCAL_ENU">
                    <description>Local coordinate frame, Z-down (x: east, y: north, z: up)</description>
               </entry>
          </enum>
          <enum name="MAVLINK_DATA_STREAM_TYPE">
               <entry name="MAVLINK_DATA_STREAM_IMG_JPEG">
                    <description/>
               </entry>
               <entry name="MAVLINK_DATA_STREAM_IMG_BMP">
                    <description/>
               </entry>
               <entry name="MAVLINK_DATA_STREAM_IMG_RAW8U">
                    <description/>
               </entry>
               <entry name="MAVLINK_DATA_STREAM_IMG_RAW32U">
                    <description/>
               </entry>
               <entry name="MAVLINK_DATA_STREAM_IMG_PGM">
                    <description/>
               </entry>
               <entry name="MAVLINK_DATA_STREAM_IMG_PNG">
                    <description/>
               </entry>
          </enum>
          <enum name="MAV_CMD">
               <description>Commands to be executed by the MAV. They can be executed on user request,
      or as part of a mission script. If the action is used in a mission, the parameter mapping
      to the waypoint/mission message is as follows:
      Param 1, Param 2, Param 3, Param 4, X: Param 5, Y:Param 6, Z:Param 7. This command list is similar what
      ARINC 424 is for commercial aircraft: A data format how to interpret waypoint/mission data.</description>
               <entry value="16" name="MAV_CMD_NAV_WAYPOINT">
                    <description>Navigate to MISSION.</description>
                    <param index="1">Hold time in decimal seconds. (ignored by fixed wing, time to stay at MISSION for rotary wing)</param>
                    <param index="2">Acceptance radius in meters (if the sphere with this radius is hit, the MISSION counts as reached)</param>
                    <param index="3">0 to pass through the WP, if > 0 radius in meters to pass by WP. Positive value for clockwise orbit, negative value for counter-clockwise orbit. Allows trajectory control.</param>
                    <param index="4">Desired yaw angle at MISSION (rotary wing)</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="17" name="MAV_CMD_NAV_LOITER_UNLIM">
                    <description>Loiter around this MISSION an unlimited amount of time</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise</param>
                    <param index="4">Desired yaw angle.</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="18" name="MAV_CMD_NAV_LOITER_TURNS">
                    <description>Loiter around this MISSION for X turns</description>
                    <param index="1">Turns</param>
                    <param index="2">Empty</param>
                    <param index="3">Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise</param>
                    <param index="4">Desired yaw angle.</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="19" name="MAV_CMD_NAV_LOITER_TIME">
                    <description>Loiter around this MISSION for X seconds</description>
                    <param index="1">Seconds (decimal)</param>
                    <param index="2">Empty</param>
                    <param index="3">Radius around MISSION, in meters. If positive loiter clockwise, else counter-clockwise</param>
                    <param index="4">Desired yaw angle.</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="20" name="MAV_CMD_NAV_RETURN_TO_LAUNCH">
                    <description>Return to launch location</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="21" name="MAV_CMD_NAV_LAND">
                    <description>Land at location</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Desired yaw angle.</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="22" name="MAV_CMD_NAV_TAKEOFF">
                    <description>Takeoff from ground / hand</description>
                    <param index="1">Minimum pitch (if airspeed sensor present), desired pitch without sensor</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Yaw angle (if magnetometer present), ignored without magnetometer</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="80" name="MAV_CMD_NAV_ROI">
                    <description>Sets the region of interest (ROI) for a sensor set or the
            vehicle itself. This can then be used by the vehicles control
            system to control the vehicle attitude and the attitude of various
            sensors such as cameras.</description>
                    <param index="1">Region of intereset mode. (see MAV_ROI enum)</param>
                    <param index="2">MISSION index/ target ID. (see MAV_ROI enum)</param>
                    <param index="3">ROI index (allows a vehicle to manage multiple ROI's)</param>
                    <param index="4">Empty</param>
                    <param index="5">x the location of the fixed ROI (see MAV_FRAME)</param>
                    <param index="6">y</param>
                    <param index="7">z</param>
               </entry>
               <entry value="81" name="MAV_CMD_NAV_PATHPLANNING">
                    <description>Control autonomous path planning on the MAV.</description>
                    <param index="1">0: Disable local obstacle avoidance / local path planning (without resetting map), 1: Enable local path planning, 2: Enable and reset local path planning</param>
                    <param index="2">0: Disable full path planning (without resetting map), 1: Enable, 2: Enable and reset map/occupancy grid, 3: Enable and reset planned route, but not occupancy grid</param>
                    <param index="3">Empty</param>
                    <param index="4">Yaw angle at goal, in compass degrees, [0..360]</param>
                    <param index="5">Latitude/X of goal</param>
                    <param index="6">Longitude/Y of goal</param>
                    <param index="7">Altitude/Z of goal</param>
               </entry>
               <entry value="95" name="MAV_CMD_NAV_LAST">
                    <description>NOP - This command is only used to mark the upper limit of the NAV/ACTION commands in the enumeration</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="112" name="MAV_CMD_CONDITION_DELAY">
                    <description>Delay mission state machine.</description>
                    <param index="1">Delay in seconds (decimal)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="113" name="MAV_CMD_CONDITION_CHANGE_ALT">
                    <description>Ascend/descend at rate.  Delay mission state machine until desired altitude reached.</description>
                    <param index="1">Descent / Ascend rate (m/s)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Finish Altitude</param>
               </entry>
               <entry value="114" name="MAV_CMD_CONDITION_DISTANCE">
                    <description>Delay mission state machine until within desired distance of next NAV point.</description>
                    <param index="1">Distance (meters)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="115" name="MAV_CMD_CONDITION_YAW">
                    <description>Reach a certain target angle.</description>
                    <param index="1">target angle: [0-360], 0 is north</param>
                    <param index="2">speed during yaw change:[deg per second]</param>
                    <param index="3">direction: negative: counter clockwise, positive: clockwise [-1,1]</param>
                    <param index="4">relative offset or absolute angle: [ 1,0]</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="159" name="MAV_CMD_CONDITION_LAST">
                    <description>NOP - This command is only used to mark the upper limit of the CONDITION commands in the enumeration</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="176" name="MAV_CMD_DO_SET_MODE">
                    <description>Set system mode.</description>
                    <param index="1">Mode, as defined by ENUM MAV_MODE</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="177" name="MAV_CMD_DO_JUMP">
                    <description>Jump to the desired command in the mission list.  Repeat this action only the specified number of times</description>
                    <param index="1">Sequence number</param>
                    <param index="2">Repeat count</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="178" name="MAV_CMD_DO_CHANGE_SPEED">
                    <description>Change speed and/or throttle set points.</description>
                    <param index="1">Speed type (0=Airspeed, 1=Ground Speed)</param>
                    <param index="2">Speed  (m/s, -1 indicates no change)</param>
                    <param index="3">Throttle  ( Percent, -1 indicates no change)</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="179" name="MAV_CMD_DO_SET_HOME">
                    <description>Changes the home location either to the current location or a specified location.</description>
                    <param index="1">Use current (1=use current location, 0=use specified location)</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Latitude</param>
                    <param index="6">Longitude</param>
                    <param index="7">Altitude</param>
               </entry>
               <entry value="180" name="MAV_CMD_DO_SET_PARAMETER">
                    <description>Set a system parameter.  Caution!  Use of this command requires knowledge of the numeric enumeration value of the parameter.</description>
                    <param index="1">Parameter number</param>
                    <param index="2">Parameter value</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="181" name="MAV_CMD_DO_SET_RELAY">
                    <description>Set a relay to a condition.</description>
                    <param index="1">Relay number</param>
                    <param index="2">Setting (1=on, 0=off, others possible depending on system hardware)</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="182" name="MAV_CMD_DO_REPEAT_RELAY">
                    <description>Cycle a relay on and off for a desired number of cyles with a desired period.</description>
                    <param index="1">Relay number</param>
                    <param index="2">Cycle count</param>
                    <param index="3">Cycle time (seconds, decimal)</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="183" name="MAV_CMD_DO_SET_SERVO">
                    <description>Set a servo to a desired PWM value.</description>
                    <param index="1">Servo number</param>
                    <param index="2">PWM (microseconds, 1000 to 2000 typical)</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="184" name="MAV_CMD_DO_REPEAT_SERVO">
                    <description>Cycle a between its nominal setting and a desired PWM for a desired number of cycles with a desired period.</description>
                    <param index="1">Servo number</param>
                    <param index="2">PWM (microseconds, 1000 to 2000 typical)</param>
                    <param index="3">Cycle count</param>
                    <param index="4">Cycle time (seconds)</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="200" name="MAV_CMD_DO_CONTROL_VIDEO">
                    <description>Control onboard camera system.</description>
                    <param index="1">Camera ID (-1 for all)</param>
                    <param index="2">Transmission: 0: disabled, 1: enabled compressed, 2: enabled raw</param>
                    <param index="3">Transmission mode: 0: video stream, >0: single images every n seconds (decimal)</param>
                    <param index="4">Recording: 0: disabled, 1: enabled compressed, 2: enabled raw</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="240" name="MAV_CMD_DO_LAST">
                    <description>NOP - This command is only used to mark the upper limit of the DO commands in the enumeration</description>
                    <param index="1">Empty</param>
                    <param index="2">Empty</param>
                    <param index="3">Empty</param>
                    <param index="4">Empty</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="241" name="MAV_CMD_PREFLIGHT_CALIBRATION">
                    <description>Trigger calibration. This command will be only accepted if in pre-flight mode.</description>
                    <param index="1">Gyro calibration: 0: no, 1: yes</param>
                    <param index="2">Magnetometer calibration: 0: no, 1: yes</param>
                    <param index="3">Ground pressure: 0: no, 1: yes</param>
                    <param index="4">Radio calibration: 0: no, 1: yes</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="242" name="MAV_CMD_PREFLIGHT_SET_SENSOR_OFFSETS">
                    <description>Set sensor offsets. This command will be only accepted if in pre-flight mode.</description>
                    <param index="1">Sensor to adjust the offsets for: 0: gyros, 1: accelerometer, 2: magnetometer, 3: barometer, 4: optical flow</param>
                    <param index="2">X axis offset (or generic dimension 1), in the sensor's raw units</param>
                    <param index="3">Y axis offset (or generic dimension 2), in the sensor's raw units</param>
                    <param index="4">Z axis offset (or generic dimension 3), in the sensor's raw units</param>
                    <param index="5">Generic dimension 4, in the sensor's raw units</param>
                    <param index="6">Generic dimension 5, in the sensor's raw units</param>
                    <param index="7">Generic dimension 6, in the sensor's raw units</param>
               </entry>
               <entry value="245" name="MAV_CMD_PREFLIGHT_STORAGE">
                    <description>Request storage of different parameter values and logs. This command will be only accepted if in pre-flight mode.</description>
                    <param index="1">Parameter storage: 0: READ FROM FLASH/EEPROM, 1: WRITE CURRENT TO FLASH/EEPROM</param>
                    <param index="2">Mission storage: 0: READ FROM FLASH/EEPROM, 1: WRITE CURRENT TO FLASH/EEPROM</param>
                    <param index="3">Reserved</param>
                    <param index="4">Reserved</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="246" name="MAV_CMD_PREFLIGHT_REBOOT_SHUTDOWN">
                    <description>Request the reboot or shutdown of system components.</description>
                    <param index="1">0: Do nothing for autopilot, 1: Reboot autopilot, 2: Shutdown autopilot.</param>
                    <param index="2">0: Do nothing for onboard computer, 1: Reboot onboard computer, 2: Shutdown onboard computer.</param>
                    <param index="3">Reserved</param>
                    <param index="4">Reserved</param>
                    <param index="5">Empty</param>
                    <param index="6">Empty</param>
                    <param index="7">Empty</param>
               </entry>
               <entry value="252" name="MAV_CMD_OVERRIDE_GOTO">
                    <description>Hold / continue the current action</description>
                    <param index="1">MAV_GOTO_DO_HOLD: hold MAV_GOTO_DO_CONTINUE: continue with next item in mission plan</param>
                    <param index="2">MAV_GOTO_HOLD_AT_CURRENT_POSITION: Hold at current position MAV_GOTO_HOLD_AT_SPECIFIED_POSITION: hold at specified position</param>
                    <param index="3">MAV_FRAME coordinate frame of hold point</param>
                    <param index="4">Desired yaw angle in degrees</param>
                    <param index="5">Latitude / X position</param>
                    <param index="6">Longitude / Y position</param>
                    <param index="7">Altitude / Z position</param>
               </entry>
               <entry value="300" name="MAV_CMD_MISSION_START">
                    <description>start running a mission</description>
                    <param index="1">first_item: the first mission item to run</param>
                    <param index="2">last_item:  the last mission item to run (after this item is run, the mission ends)</param>
               </entry>
          </enum>
          <enum name="MAV_DATA_STREAM">
               <description>Data stream IDs. A data stream is not a fixed set of messages, but rather a
     recommendation to the autopilot software. Individual autopilots may or may not obey
     the recommended messages.
     </description>
               <entry value="0" name="MAV_DATA_STREAM_ALL">
                    <description>Enable all data streams</description>
               </entry>
               <entry value="1" name="MAV_DATA_STREAM_RAW_SENSORS">
                    <description>Enable IMU_RAW, GPS_RAW, GPS_STATUS packets.</description>
               </entry>
               <entry value="2" name="MAV_DATA_STREAM_EXTENDED_STATUS">
                    <description>Enable GPS_STATUS, CONTROL_STATUS, AUX_STATUS</description>
               </entry>
               <entry value="3" name="MAV_DATA_STREAM_RC_CHANNELS">
                    <description>Enable RC_CHANNELS_SCALED, RC_CHANNELS_RAW, SERVO_OUTPUT_RAW</description>
               </entry>
               <entry value="4" name="MAV_DATA_STREAM_RAW_CONTROLLER">
                    <description>Enable ATTITUDE_CONTROLLER_OUTPUT, POSITION_CONTROLLER_OUTPUT, NAV_CONTROLLER_OUTPUT.</description>
               </entry>
               <entry value="6" name="MAV_DATA_STREAM_POSITION">
                    <description>Enable LOCAL_POSITION, GLOBAL_POSITION/GLOBAL_POSITION_INT messages.</description>
               </entry>
               <entry value="10" name="MAV_DATA_STREAM_EXTRA1">
                    <description>Dependent on the autopilot</description>
               </entry>
               <entry value="11" name="MAV_DATA_STREAM_EXTRA2">
                    <description>Dependent on the autopilot</description>
               </entry>
               <entry value="12" name="MAV_DATA_STREAM_EXTRA3">
                    <description>Dependent on the autopilot</description>
               </entry>
          </enum>
          <enum name="MAV_ROI">
               <description> The ROI (region of interest) for the vehicle. This can be
                be used by the vehicle for camera/vehicle attitude alignment (see
                MAV_CMD_NAV_ROI).
            </description>
               <entry value="0" name="MAV_ROI_NONE">
                    <description>No region of interest.</description>
               </entry>
               <entry value="1" name="MAV_ROI_WPNEXT">
                    <description>Point toward next MISSION.</description>
               </entry>
               <entry value="2" name="MAV_ROI_WPINDEX">
                    <description>Point toward given MISSION.</description>
               </entry>
               <entry value="3" name="MAV_ROI_LOCATION">
                    <description>Point toward fixed location.</description>
               </entry>
               <entry value="4" name="MAV_ROI_TARGET">
                    <description>Point toward of given id.</description>
               </entry>
          </enum>
          <enum name="MAV_CMD_ACK">
               <description>ACK / NACK / ERROR values as a result of MAV_CMDs and for mission item transmission.</description>
               <entry name="MAV_CMD_ACK_OK">
                    <description>Command / mission item is ok.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_FAIL">
                    <description>Generic error message if none of the other reasons fails or if no detailed error reporting is implemented.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_ACCESS_DENIED">
                    <description>The system is refusing to accept this command from this source / communication partner.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_NOT_SUPPORTED">
                    <description>Command or mission item is not supported, other commands would be accepted.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_COORDINATE_FRAME_NOT_SUPPORTED">
                    <description>The coordinate frame of this command / mission item is not supported.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_COORDINATES_OUT_OF_RANGE">
                    <description>The coordinate frame of this command is ok, but he coordinate values exceed the safety limits of this system. This is a generic error, please use the more specific error messages below if possible.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_X_LAT_OUT_OF_RANGE">
                    <description>The X or latitude value is out of range.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_Y_LON_OUT_OF_RANGE">
                    <description>The Y or longitude value is out of range.</description>
               </entry>
               <entry name="MAV_CMD_ACK_ERR_Z_ALT_OUT_OF_RANGE">
                    <description>The Z or altitude value is out of range.</description>
               </entry>
          </enum>
          <enum name="MAV_VAR">
               <description>type of a mavlink parameter</description>
               <entry value="0" name="MAV_VAR_FLOAT">
                    <description>32 bit float</description>
               </entry>
               <entry value="1" name="MAV_VAR_UINT8">
                    <description>8 bit unsigned integer</description>
               </entry>
               <entry value="2" name="MAV_VAR_INT8">
                    <description>8 bit signed integer</description>
               </entry>
               <entry value="3" name="MAV_VAR_UINT16">
                    <description>16 bit unsigned integer</description>
               </entry>
               <entry value="4" name="MAV_VAR_INT16">
                    <description>16 bit signed integer</description>
               </entry>
               <entry value="5" name="MAV_VAR_UINT32">
                    <description>32 bit unsigned integer</description>
               </entry>
               <entry value="6" name="MAV_VAR_INT32">
                    <description>32 bit signed integer</description>
               </entry>
          </enum>
          <enum name="MAV_RESULT">
               <description>result from a mavlink command</description>
               <entry value="0" name="MAV_RESULT_ACCEPTED">
                    <description>Command ACCEPTED and EXECUTED</description>
               </entry>
               <entry value="1" name="MAV_RESULT_TEMPORARILY_REJECTED">
                    <description>Command TEMPORARY REJECTED/DENIED</description>
               </entry>
               <entry value="2" name="MAV_RESULT_DENIED">
                    <description>Command PERMANENTLY DENIED</description>
               </entry>
               <entry value="3" name="MAV_RESULT_UNSUPPORTED">
                    <description>Command UNKNOWN/UNSUPPORTED</description>
               </entry>
               <entry value="4" name="MAV_RESULT_FAILED">
                    <description>Command executed, but failed</description>
               </entry>
          </enum>
          <enum name="MAV_MISSION_RESULT">
               <description>result in a mavlink mission ack</description>
               <entry value="0" name="MAV_MISSION_ACCEPTED">
                    <description>mission accepted OK</description>
               </entry>
               <entry value="1" name="MAV_MISSION_ERROR">
                    <description>generic error / not accepting mission commands at all right now</description>
               </entry>
               <entry value="2" name="MAV_MISSION_UNSUPPORTED_FRAME">
                    <description>coordinate frame is not supported</description>
               </entry>
               <entry value="3" name="MAV_MISSION_UNSUPPORTED">
                    <description>command is not supported</description>
               </entry>
               <entry value="4" name="MAV_MISSION_NO_SPACE">
                    <description>mission item exceeds storage space</description>
               </entry>
               <entry value="5" name="MAV_MISSION_INVALID">
                    <description>one of the parameters has an invalid value</description>
               </entry>
               <entry value="6" name="MAV_MISSION_INVALID_PARAM1">
                    <description>param1 has an invalid value</description>
               </entry>
               <entry value="7" name="MAV_MISSION_INVALID_PARAM2">
                    <description>param2 has an invalid value</description>
               </entry>
               <entry value="8" name="MAV_MISSION_INVALID_PARAM3">
                    <description>param3 has an invalid value</description>
               </entry>
               <entry value="9" name="MAV_MISSION_INVALID_PARAM4">
                    <description>param4 has an invalid value</description>
               </entry>
               <entry value="10" name="MAV_MISSION_INVALID_PARAM5_X">
                    <description>x/param5 has an invalid value</description>
               </entry>
               <entry value="11" name="MAV_MISSION_INVALID_PARAM6_Y">
                    <description>y/param6 has an invalid value</description>
               </entry>
               <entry value="12" name="MAV_MISSION_INVALID_PARAM7">
                    <description>param7 has an invalid value</description>
               </entry>
               <entry value="13" name="MAV_MISSION_INVALID_SEQUENCE">
                    <description>received waypoint out of sequence</description>
               </entry>
               <entry value="14" name="MAV_MISSION_DENIED">
                    <description>not accepting any mission commands from this communication partner</description>
               </entry>
          </enum>
     </enums>
     <messages>
          <message id="0" name="HEARTBEAT">
               <description>The heartbeat message shows that a system is present and responding. The type of the MAV and Autopilot hardware allow the receiving system to treat further messages from this system appropriate (e.g. by laying out the user interface based on the autopilot).</description>
               <field type="uint8_t" name="type">Type of the MAV (quadrotor, helicopter, etc., up to 15 types, defined in MAV_TYPE ENUM)</field>
               <field type="uint8_t" name="autopilot">Autopilot type / class. defined in MAV_CLASS ENUM</field>
               <field type="uint8_t" name="base_mode">System mode bitfield, see MAV_MODE_FLAGS ENUM in mavlink/include/mavlink_types.h</field>
               <field type="uint32_t" name="custom_mode">Navigation mode bitfield, see MAV_AUTOPILOT_CUSTOM_MODE ENUM for some examples. This field is autopilot-specific.</field>
               <field type="uint8_t" name="system_status">System status flag, see MAV_STATUS ENUM</field>
               <field type="uint8_t_mavlink_version" name="mavlink_version">MAVLink version</field>
          </message>
          <message id="1" name="SYS_STATUS">
               <description>The general system state. If the system is following the MAVLink standard, the system state is mainly defined by three orthogonal states/modes: The system mode, which is either LOCKED (motors shut down and locked), MANUAL (system under RC control), GUIDED (system with autonomous position control, position setpoint controlled manually) or AUTO (system guided by path/waypoint planner). The NAV_MODE defined the current flight state: LIFTOFF (often an open-loop maneuver), LANDING, WAYPOINTS or VECTOR. This represents the internal navigation state machine. The system status shows wether the system is currently active or not and if an emergency occured. During the CRITICAL and EMERGENCY states the MAV is still considered to be active, but should start emergency procedures autonomously. After a failure occured it should first move from active to critical to allow manual intervention and then move to emergency after a certain timeout.</description>
               <field print_format="0x%04x" type="uint32_t" name="onboard_control_sensors_present">Bitmask showing which onboard controllers and sensors are present. Value of 0: not present. Value of 1: present. Indices: 0: 3D gyro, 1: 3D acc, 2: 3D mag, 3: absolute pressure, 4: differential pressure, 5: GPS, 6: optical flow, 7: computer vision position, 8: laser based position, 9: external ground-truth (Vicon or Leica). Controllers: 10: 3D angular rate control 11: attitude stabilization, 12: yaw position, 13: z/altitude control, 14: x/y position control, 15: motor outputs / control</field>
               <field print_format="0x%04x" type="uint32_t" name="onboard_control_sensors_enabled">Bitmask showing which onboard controllers and sensors are enabled:  Value of 0: not enabled. Value of 1: enabled. Indices: 0: 3D gyro, 1: 3D acc, 2: 3D mag, 3: absolute pressure, 4: differential pressure, 5: GPS, 6: optical flow, 7: computer vision position, 8: laser based position, 9: external ground-truth (Vicon or Leica). Controllers: 10: 3D angular rate control 11: attitude stabilization, 12: yaw position, 13: z/altitude control, 14: x/y position control, 15: motor outputs / control</field>
               <field print_format="0x%04x" type="uint32_t" name="onboard_control_sensors_health">Bitmask showing which onboard controllers and sensors are operational or have an error:  Value of 0: not enabled. Value of 1: enabled. Indices: 0: 3D gyro, 1: 3D acc, 2: 3D mag, 3: absolute pressure, 4: differential pressure, 5: GPS, 6: optical flow, 7: computer vision position, 8: laser based position, 9: external ground-truth (Vicon or Leica). Controllers: 10: 3D angular rate control 11: attitude stabilization, 12: yaw position, 13: z/altitude control, 14: x/y position control, 15: motor outputs / control</field>
               <field type="uint16_t" name="load">Maximum usage in percent of the mainloop time, (0%: 0, 100%: 1000) should be always below 1000</field>
               <field type="uint16_t" name="voltage_battery">Battery voltage, in millivolts (1 = 1 millivolt)</field>
               <field type="int16_t" name="current_battery">Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current</field>
               <field type="int8_t" name="battery_remaining">Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot estimate the remaining battery</field>
               <field type="uint16_t" name="drop_rate_comm">Communication drops in percent, (0%: 0, 100%: 10'000), (UART, I2C, SPI, CAN), dropped packets on all links (packets that were corrupted on reception on the MAV)</field>
               <field type="uint16_t" name="errors_comm">Communication errors (UART, I2C, SPI, CAN), dropped packets on all links (packets that were corrupted on reception on the MAV)</field>
               <field type="uint16_t" name="errors_count1">Autopilot-specific errors</field>
               <field type="uint16_t" name="errors_count2">Autopilot-specific errors</field>
               <field type="uint16_t" name="errors_count3">Autopilot-specific errors</field>
               <field type="uint16_t" name="errors_count4">Autopilot-specific errors</field>
          </message>
          <message id="2" name="SYSTEM_TIME">
               <description>The system time is the time of the master clock, typically the computer clock of the main onboard computer.</description>
               <field type="uint64_t" name="time_unix_usec">Timestamp of the master clock in microseconds since UNIX epoch.</field>
               <field type="uint32_t" name="time_boot_ms">Timestamp of the component clock since boot time in milliseconds.</field>
          </message>
          <!-- FIXME to be removed / merged with SYSTEM_TIME -->
          <message id="4" name="PING">
               <description>A ping message either requesting or responding to a ping. This allows to measure the system latencies, including serial port, radio modem and UDP connections.</description>
               <field type="uint64_t" name="time_usec">Unix timestamp in microseconds</field>
               <field type="uint32_t" name="seq">PING sequence</field>
               <field type="uint8_t" name="target_system">0: request ping from all receiving systems, if greater than 0: message is a ping response and number is the system id of the requesting system</field>
               <field type="uint8_t" name="target_component">0: request ping from all receiving components, if greater than 0: message is a ping response and number is the system id of the requesting system</field>
          </message>
          <message id="5" name="CHANGE_OPERATOR_CONTROL">
               <description>Request to control this MAV</description>
               <field type="uint8_t" name="target_system">System the GCS requests control for</field>
               <field type="uint8_t" name="control_request">0: request control of this MAV, 1: Release control of this MAV</field>
               <field type="uint8_t" name="version">0: key as plaintext, 1-255: future, different hashing/encryption variants. The GCS should in general use the safest mode possible initially and then gradually move down the encryption level if it gets a NACK message indicating an encryption mismatch.</field>
               <field type="char[25]" name="passkey">Password / Key, depending on version plaintext or encrypted. 25 or less characters, NULL terminated. The characters may involve A-Z, a-z, 0-9, and "!?,.-"</field>
          </message>
          <message id="6" name="CHANGE_OPERATOR_CONTROL_ACK">
               <description>Accept / deny control of this MAV</description>
               <field type="uint8_t" name="gcs_system_id">ID of the GCS this message </field>
               <field type="uint8_t" name="control_request">0: request control of this MAV, 1: Release control of this MAV</field>
               <field type="uint8_t" name="ack">0: ACK, 1: NACK: Wrong passkey, 2: NACK: Unsupported passkey encryption method, 3: NACK: Already under control</field>
          </message>
          <message id="7" name="AUTH_KEY">
               <description>Emit an encrypted signature / key identifying this system. PLEASE NOTE: This protocol has been kept simple, so transmitting the key requires an encrypted channel for true safety.</description>
               <field type="char[32]" name="key">key</field>
          </message>
          <message id="11" name="SET_MODE">
               <description>Set the system mode, as defined by enum MAV_MODE. There is no target component id as the mode is by definition for the overall aircraft, not only for one component.</description>
               <field type="uint8_t" name="target_system">The system setting the mode</field>
               <field type="uint8_t" name="base_mode">The new base mode</field>
               <field type="uint32_t" name="custom_mode">The new autopilot-specific mode. This field can be ignored by an autopilot.</field>
          </message>
          <message id="20" name="PARAM_REQUEST_READ">
               <description>Request to read the onboard parameter with the param_id string id. Onboard parameters are stored as key[const char*] -> value[float]. This allows to send a parameter to any other component (such as the GCS) without the need of previous knowledge of possible parameter names. Thus the same GCS can store different parameters for different autopilots. See also http://qgroundcontrol.org/parameter_interface for a full documentation of QGroundControl and IMU code.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="char[16]" name="param_id">Onboard parameter id</field>
               <field type="int16_t" name="param_index">Parameter index. Send -1 to use the param ID field as identifier</field>
          </message>
          <message id="21" name="PARAM_REQUEST_LIST">
               <description>Request all parameters of this component. After his request, all parameters are emitted.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
          </message>
          <message id="22" name="PARAM_VALUE">
               <description>Emit the value of a onboard parameter. The inclusion of param_count and param_index in the message allows the recipient to keep track of received parameters and allows him to re-request missing parameters after a loss or timeout.</description>
               <field type="char[16]" name="param_id">Onboard parameter id</field>
               <field type="float" name="param_value">Onboard parameter value</field>
               <field type="uint8_t" name="param_type">Onboard parameter type: see MAV_VAR enum</field>
               <field type="uint16_t" name="param_count">Total number of onboard parameters</field>
               <field type="uint16_t" name="param_index">Index of this onboard parameter</field>
          </message>
          <message id="23" name="PARAM_SET">
               <description>Set a parameter value TEMPORARILY to RAM. It will be reset to default on system reboot. Send the ACTION MAV_ACTION_STORAGE_WRITE to PERMANENTLY write the RAM contents to EEPROM. IMPORTANT: The receiving component should acknowledge the new parameter value by sending a param_value message to all communication partners. This will also ensure that multiple GCS all have an up-to-date list of all parameters. If the sending GCS did not receive a PARAM_VALUE message within its timeout time, it should re-send the PARAM_SET message.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="char[16]" name="param_id">Onboard parameter id</field>
               <field type="float" name="param_value">Onboard parameter value</field>
               <field type="uint8_t" name="param_type">Onboard parameter type: see MAV_VAR enum</field>
          </message>
          <message id="24" name="GPS_RAW_INT">
               <description>The global position, as returned by the Global Positioning System (GPS). This is
                NOT the global position estimate of the sytem, but rather a RAW sensor value. See message GLOBAL_POSITION for the global position estimate. Coordinate frame is right-handed, Z-axis up (GPS frame)
            </description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="uint8_t" name="fix_type">0-1: no fix, 2: 2D fix, 3: 3D fix. Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.</field>
               <field type="int32_t" name="lat">Latitude in 1E7 degrees</field>
               <field type="int32_t" name="lon">Longitude in 1E7 degrees</field>
               <field type="int32_t" name="alt">Altitude in 1E3 meters (millimeters) above MSL</field>
               <field type="uint16_t" name="eph">GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: 65535</field>
               <field type="uint16_t" name="epv">GPS VDOP horizontal dilution of position in cm (m*100). If unknown, set to: 65535</field>
               <field type="uint16_t" name="vel">GPS ground speed (m/s * 100). If unknown, set to: 65535</field>
               <field type="uint16_t" name="cog">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: 65535</field>
               <field type="uint8_t" name="satellites_visible">Number of satellites visible. If unknown, set to 255</field>
          </message>
          <message id="25" name="GPS_STATUS">
               <description>The positioning status, as reported by GPS. This message is intended to display status information about each satellite visible to the receiver. See message GLOBAL_POSITION for the global position estimate. This message can contain information for up to 20 satellites.</description>
               <field type="uint8_t" name="satellites_visible">Number of satellites visible</field>
               <field type="uint8_t[20]" name="satellite_prn">Global satellite ID</field>
               <field type="uint8_t[20]" name="satellite_used">0: Satellite not used, 1: used for localization</field>
               <field type="uint8_t[20]" name="satellite_elevation">Elevation (0: right on top of receiver, 90: on the horizon) of satellite</field>
               <field type="uint8_t[20]" name="satellite_azimuth">Direction of satellite, 0: 0 deg, 255: 360 deg.</field>
               <field type="uint8_t[20]" name="satellite_snr">Signal to noise ratio of satellite</field>
          </message>
          <message id="26" name="SCALED_IMU">
               <description>The RAW IMU readings for the usual 9DOF sensor setup. This message should contain the scaled values to the described units</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="int16_t" name="xacc">X acceleration (mg)</field>
               <field type="int16_t" name="yacc">Y acceleration (mg)</field>
               <field type="int16_t" name="zacc">Z acceleration (mg)</field>
               <field type="int16_t" name="xgyro">Angular speed around X axis (millirad /sec)</field>
               <field type="int16_t" name="ygyro">Angular speed around Y axis (millirad /sec)</field>
               <field type="int16_t" name="zgyro">Angular speed around Z axis (millirad /sec)</field>
               <field type="int16_t" name="xmag">X Magnetic field (milli tesla)</field>
               <field type="int16_t" name="ymag">Y Magnetic field (milli tesla)</field>
               <field type="int16_t" name="zmag">Z Magnetic field (milli tesla)</field>
          </message>
          <message id="27" name="RAW_IMU">
               <description>The RAW IMU readings for the usual 9DOF sensor setup. This message should always contain the true raw values without any scaling to allow data capture and system debugging.</description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="int16_t" name="xacc">X acceleration (raw)</field>
               <field type="int16_t" name="yacc">Y acceleration (raw)</field>
               <field type="int16_t" name="zacc">Z acceleration (raw)</field>
               <field type="int16_t" name="xgyro">Angular speed around X axis (raw)</field>
               <field type="int16_t" name="ygyro">Angular speed around Y axis (raw)</field>
               <field type="int16_t" name="zgyro">Angular speed around Z axis (raw)</field>
               <field type="int16_t" name="xmag">X Magnetic field (raw)</field>
               <field type="int16_t" name="ymag">Y Magnetic field (raw)</field>
               <field type="int16_t" name="zmag">Z Magnetic field (raw)</field>
          </message>
          <message id="28" name="RAW_PRESSURE">
               <description>The RAW pressure readings for the typical setup of one absolute pressure and one differential pressure sensor. The sensor values should be the raw, UNSCALED ADC values.</description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="int16_t" name="press_abs">Absolute pressure (raw)</field>
               <field type="int16_t" name="press_diff1">Differential pressure 1 (raw)</field>
               <field type="int16_t" name="press_diff2">Differential pressure 2 (raw)</field>
               <field type="int16_t" name="temperature">Raw Temperature measurement (raw)</field>
          </message>
          <message id="29" name="SCALED_PRESSURE">
               <description>The pressure readings for the typical setup of one absolute and differential pressure sensor. The units are as specified in each field.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="float" name="press_abs">Absolute pressure (hectopascal)</field>
               <field type="float" name="press_diff">Differential pressure 1 (hectopascal)</field>
               <field type="int16_t" name="temperature">Temperature measurement (0.01 degrees celsius)</field>
          </message>
          <message id="30" name="ATTITUDE">
               <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right).</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="float" name="roll">Roll angle (rad)</field>
               <field type="float" name="pitch">Pitch angle (rad)</field>
               <field type="float" name="yaw">Yaw angle (rad)</field>
               <field type="float" name="rollspeed">Roll angular speed (rad/s)</field>
               <field type="float" name="pitchspeed">Pitch angular speed (rad/s)</field>
               <field type="float" name="yawspeed">Yaw angular speed (rad/s)</field>
          </message>
          <message id="31" name="ATTITUDE_QUATERNION">
               <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right), expressed as quaternion.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="float" name="q1">Quaternion component 1</field>
               <field type="float" name="q2">Quaternion component 2</field>
               <field type="float" name="q3">Quaternion component 3</field>
               <field type="float" name="q4">Quaternion component 4</field>
               <field type="float" name="rollspeed">Roll angular speed (rad/s)</field>
               <field type="float" name="pitchspeed">Pitch angular speed (rad/s)</field>
               <field type="float" name="yawspeed">Yaw angular speed (rad/s)</field>
          </message>
          <message id="32" name="LOCAL_POSITION_NED">
               <description>The filtered local position (e.g. fused computer vision and accelerometers). Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="float" name="x">X Position</field>
               <field type="float" name="y">Y Position</field>
               <field type="float" name="z">Z Position</field>
               <field type="float" name="vx">X Speed</field>
               <field type="float" name="vy">Y Speed</field>
               <field type="float" name="vz">Z Speed</field>
          </message>
          <message id="33" name="GLOBAL_POSITION_INT">
               <description>The filtered global position (e.g. fused GPS and accelerometers). The position is in GPS-frame (right-handed, Z-up). It
               is designed as scaled integer message since the resolution of float is not sufficient.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="int32_t" name="lat">Latitude, expressed as * 1E7</field>
               <field type="int32_t" name="lon">Longitude, expressed as * 1E7</field>
               <field type="int32_t" name="alt">Altitude in meters, expressed as * 1000 (millimeters), above MSL</field>
               <field type="int32_t" name="relative_alt">Altitude above ground in meters, expressed as * 1000 (millimeters)</field>
               <field type="int16_t" name="vx">Ground X Speed (Latitude), expressed as m/s * 100</field>
               <field type="int16_t" name="vy">Ground Y Speed (Longitude), expressed as m/s * 100</field>
               <field type="int16_t" name="vz">Ground Z Speed (Altitude), expressed as m/s * 100</field>
               <field type="uint16_t" name="hdg">Compass heading in degrees * 100, 0.0..359.99 degrees. If unknown, set to: 65535</field>
          </message>
          <message id="34" name="RC_CHANNELS_SCALED">
               <description>The scaled values of the RC channels received. (-100%) -10000, (0%) 0, (100%) 10000</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows to encode more than 8 servos.</field>
               <field type="int16_t" name="chan1_scaled">RC channel 1 value scaled, (-100%) -10000, (0%) 0, (100%) 10000</field>
               <field type="int16_t" name="chan2_scaled">RC channel 2 value scaled, (-100%) -10000, (0%) 0, (100%) 10000</field>
               <field type="int16_t" name="chan3_scaled">RC channel 3 value scaled, (-100%) -10000, (0%) 0, (100%) 10000</field>
               <field type="int16_t" name="chan4_scaled">RC channel 4 value scaled, (-100%) -10000, (0%) 0, (100%) 10000</field>
               <field type="int16_t" name="chan5_scaled">RC channel 5 value scaled, (-100%) -10000, (0%) 0, (100%) 10000</field>
               <field type="int16_t" name="chan6_scaled">RC channel 6 value scaled, (-100%) -10000, (0%) 0, (100%) 10000</field>
               <field type="int16_t" name="chan7_scaled">RC channel 7 value scaled, (-100%) -10000, (0%) 0, (100%) 10000</field>
               <field type="int16_t" name="chan8_scaled">RC channel 8 value scaled, (-100%) -10000, (0%) 0, (100%) 10000</field>
               <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 255: 100%</field>
          </message>
          <message id="35" name="RC_CHANNELS_RAW">
               <description>The RAW values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows to encode more than 8 servos.</field>
               <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds</field>
               <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds</field>
               <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds</field>
               <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds</field>
               <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds</field>
               <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds</field>
               <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds</field>
               <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds</field>
               <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 255: 100%</field>
          </message>
          <message id="36" name="SERVO_OUTPUT_RAW">
               <description>The RAW values of the servo outputs (for RC input from the remote, use the RC_CHANNELS messages). The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%.</description>
               <field type="uint32_t" name="time_usec">Timestamp (since UNIX epoch or microseconds since system boot)</field>
               <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows to encode more than 8 servos.</field>
               <field type="uint16_t" name="servo1_raw">Servo output 1 value, in microseconds</field>
               <field type="uint16_t" name="servo2_raw">Servo output 2 value, in microseconds</field>
               <field type="uint16_t" name="servo3_raw">Servo output 3 value, in microseconds</field>
               <field type="uint16_t" name="servo4_raw">Servo output 4 value, in microseconds</field>
               <field type="uint16_t" name="servo5_raw">Servo output 5 value, in microseconds</field>
               <field type="uint16_t" name="servo6_raw">Servo output 6 value, in microseconds</field>
               <field type="uint16_t" name="servo7_raw">Servo output 7 value, in microseconds</field>
               <field type="uint16_t" name="servo8_raw">Servo output 8 value, in microseconds</field>
          </message>
          <message id="37" name="MISSION_REQUEST_PARTIAL_LIST">
               <description>Request the overall list of MISSIONs from the system/component. http://qgroundcontrol.org/mavlink/waypoint_protocol</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="int16_t" name="start_index">Start index, 0 by default</field>
               <field type="int16_t" name="end_index">End index, -1 by default (-1: send list to end). Else a valid index of the list</field>
          </message>
          <message id="38" name="MISSION_WRITE_PARTIAL_LIST">
               <description>This message is sent to the MAV to write a partial list. If start index == end index, only one item will be transmitted / updated. If the start index is NOT 0 and above the current list size, this request should be REJECTED!</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="int16_t" name="start_index">Start index, 0 by default and smaller / equal to the largest index of the current onboard list.</field>
               <field type="int16_t" name="end_index">End index, equal or greater than start index.</field>
          </message>
          <message id="39" name="MISSION_ITEM">
               <description>Message encoding a mission item. This message is emitted to announce
                the presence of a mission item and to set a mission item on the system. The mission item can be either in x, y, z meters (type: LOCAL) or x:lat, y:lon, z:altitude. Local frame is Z-down, right handed (NED), global frame is Z-up, right handed (ENU). http://qgroundcontrol.org/mavlink/waypoint_protocol
            </description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="seq">Sequence</field>
               <field type="uint8_t" name="frame">The coordinate system of the MISSION. see MAV_FRAME in mavlink_types.h</field>
               <field type="uint16_t" name="command">The scheduled action for the MISSION. see MAV_CMD in common.xml MAVLink specs</field>
               <field type="uint8_t" name="current">false:0, true:1</field>
               <field type="uint8_t" name="autocontinue">autocontinue to next wp</field>
               <field type="float" name="param1">PARAM1 / For NAV command MISSIONs: Radius in which the MISSION is accepted as reached, in meters</field>
               <field type="float" name="param2">PARAM2 / For NAV command MISSIONs: Time that the MAV should stay inside the PARAM1 radius before advancing, in milliseconds</field>
               <field type="float" name="param3">PARAM3 / For LOITER command MISSIONs: Orbit to circle around the MISSION, in meters. If positive the orbit direction should be clockwise, if negative the orbit direction should be counter-clockwise.</field>
               <field type="float" name="param4">PARAM4 / For NAV and LOITER command MISSIONs: Yaw orientation in degrees, [0..360] 0 = NORTH</field>
               <field type="float" name="x">PARAM5 / local: x position, global: latitude</field>
               <field type="float" name="y">PARAM6 / y position: global: longitude</field>
               <field type="float" name="z">PARAM7 / z position: global: altitude</field>
          </message>
          <message id="40" name="MISSION_REQUEST">
               <description>Request the information of the mission item with the sequence number seq. The response of the system to this message should be a MISSION_ITEM message. http://qgroundcontrol.org/mavlink/waypoint_protocol</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="seq">Sequence</field>
          </message>
          <message id="41" name="MISSION_SET_CURRENT">
               <description>Set the mission item with sequence number seq as current item. This means that the MAV will continue to this mission item on the shortest path (not following the mission items in-between).</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="seq">Sequence</field>
          </message>
          <message id="42" name="MISSION_CURRENT">
               <description>Message that announces the sequence number of the current active mission item. The MAV will fly towards this mission item.</description>
               <field type="uint16_t" name="seq">Sequence</field>
          </message>
          <message id="43" name="MISSION_REQUEST_LIST">
               <description>Request the overall list of mission items from the system/component.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
          </message>
          <message id="44" name="MISSION_COUNT">
               <description>This message is emitted as response to MISSION_REQUEST_LIST by the MAV and to initiate a write transaction. The GCS can then request the individual mission item based on the knowledge of the total number of MISSIONs.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="count">Number of mission items in the sequence</field>
          </message>
          <message id="45" name="MISSION_CLEAR_ALL">
               <description>Delete all mission items at once.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
          </message>
          <message id="46" name="MISSION_ITEM_REACHED">
               <description>A certain mission item has been reached. The system will either hold this position (or circle on the orbit) or (if the autocontinue on the WP was set) continue to the next MISSION.</description>
               <field type="uint16_t" name="seq">Sequence</field>
          </message>
          <message id="47" name="MISSION_ACK">
               <description>Ack message during MISSION handling. The type field states if this message is a positive ack (type=0) or if an error happened (type=non-zero).</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint8_t" name="type">See MAV_MISSION_RESULT enum</field>
          </message>
          <message id="48" name="SET_GPS_GLOBAL_ORIGIN">
               <description>As local MISSIONs exist, the global MISSION reference allows to transform between the local coordinate frame and the global (GPS) coordinate frame. This can be necessary when e.g. in- and outdoor settings are connected and the MAV should move from in- to outdoor.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="int32_t" name="latitude">global position * 1E7</field>
               <field type="int32_t" name="longitude">global position * 1E7</field>
               <field type="int32_t" name="altitude">global position * 1000</field>
          </message>
          <message id="49" name="GPS_GLOBAL_ORIGIN">
               <description>Once the MAV sets a new GPS-Local correspondence, this message announces the origin (0,0,0) position</description>
               <field type="int32_t" name="latitude">Latitude (WGS84), expressed as * 1E7</field>
               <field type="int32_t" name="longitude">Longitude (WGS84), expressed as * 1E7</field>
               <field type="int32_t" name="altitude">Altitude(WGS84), expressed as * 1000</field>
          </message>
          <message id="50" name="SET_LOCAL_POSITION_SETPOINT">
               <description>Set the setpoint for a local position controller. This is the position in local coordinates the MAV should fly to. This message is sent by the path/MISSION planner to the onboard position controller. As some MAVs have a degree of freedom in yaw (e.g. all helicopters/quadrotors), the desired yaw angle is part of the message.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint8_t" name="coordinate_frame">Coordinate frame - valid values are only MAV_FRAME_LOCAL_NED or MAV_FRAME_LOCAL_ENU</field>
               <field type="float" name="x">x position</field>
               <field type="float" name="y">y position</field>
               <field type="float" name="z">z position</field>
               <field type="float" name="yaw">Desired yaw angle</field>
          </message>
          <message id="51" name="LOCAL_POSITION_SETPOINT">
               <description>Transmit the current local setpoint of the controller to other MAVs (collision avoidance) and to the GCS.</description>
               <field type="uint8_t" name="coordinate_frame">Coordinate frame - valid values are only MAV_FRAME_LOCAL_NED or MAV_FRAME_LOCAL_ENU</field>
               <field type="float" name="x">x position</field>
               <field type="float" name="y">y position</field>
               <field type="float" name="z">z position</field>
               <field type="float" name="yaw">Desired yaw angle</field>
          </message>
          <message id="52" name="GLOBAL_POSITION_SETPOINT_INT">
               <description>Transmit the current local setpoint of the controller to other MAVs (collision avoidance) and to the GCS.</description>
               <field type="uint8_t" name="coordinate_frame">Coordinate frame - valid values are only MAV_FRAME_GLOBAL or MAV_FRAME_GLOBAL_RELATIVE_ALT</field>
               <field type="int32_t" name="latitude">WGS84 Latitude position in degrees * 1E7</field>
               <field type="int32_t" name="longitude">WGS84 Longitude position in degrees * 1E7</field>
               <field type="int32_t" name="altitude">WGS84 Altitude in meters * 1000 (positive for up)</field>
               <field type="int16_t" name="yaw">Desired yaw angle in degrees * 100</field>
          </message>
          <message id="53" name="SET_GLOBAL_POSITION_SETPOINT_INT">
               <description>Set the current global position setpoint.</description>
               <field type="uint8_t" name="coordinate_frame">Coordinate frame - valid values are only MAV_FRAME_GLOBAL or MAV_FRAME_GLOBAL_RELATIVE_ALT</field>
               <field type="int32_t" name="latitude">WGS84 Latitude position in degrees * 1E7</field>
               <field type="int32_t" name="longitude">WGS84 Longitude position in degrees * 1E7</field>
               <field type="int32_t" name="altitude">WGS84 Altitude in meters * 1000 (positive for up)</field>
               <field type="int16_t" name="yaw">Desired yaw angle in degrees * 100</field>
          </message>
          <message id="54" name="SAFETY_SET_ALLOWED_AREA">
               <description>Set a safety zone (volume), which is defined by two corners of a cube. This message can be used to tell the MAV which setpoints/MISSIONs to accept and which to reject. Safety areas are often enforced by national or competition regulations.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint8_t" name="frame">Coordinate frame, as defined by MAV_FRAME enum in mavlink_types.h. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.</field>
               <field type="float" name="p1x">x position 1 / Latitude 1</field>
               <field type="float" name="p1y">y position 1 / Longitude 1</field>
               <field type="float" name="p1z">z position 1 / Altitude 1</field>
               <field type="float" name="p2x">x position 2 / Latitude 2</field>
               <field type="float" name="p2y">y position 2 / Longitude 2</field>
               <field type="float" name="p2z">z position 2 / Altitude 2</field>
          </message>
          <message id="55" name="SAFETY_ALLOWED_AREA">
               <description>Read out the safety zone the MAV currently assumes.</description>
               <field type="uint8_t" name="frame">Coordinate frame, as defined by MAV_FRAME enum in mavlink_types.h. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.</field>
               <field type="float" name="p1x">x position 1 / Latitude 1</field>
               <field type="float" name="p1y">y position 1 / Longitude 1</field>
               <field type="float" name="p1z">z position 1 / Altitude 1</field>
               <field type="float" name="p2x">x position 2 / Latitude 2</field>
               <field type="float" name="p2y">y position 2 / Longitude 2</field>
               <field type="float" name="p2z">z position 2 / Altitude 2</field>
          </message>
          <message id="56" name="SET_ROLL_PITCH_YAW_THRUST">
               <description>Set roll, pitch and yaw.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="float" name="roll">Desired roll angle in radians</field>
               <field type="float" name="pitch">Desired pitch angle in radians</field>
               <field type="float" name="yaw">Desired yaw angle in radians</field>
               <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1</field>
          </message>
          <message id="57" name="SET_ROLL_PITCH_YAW_SPEED_THRUST">
               <description>Set roll, pitch and yaw.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="float" name="roll_speed">Desired roll angular speed in rad/s</field>
               <field type="float" name="pitch_speed">Desired pitch angular speed in rad/s</field>
               <field type="float" name="yaw_speed">Desired yaw angular speed in rad/s</field>
               <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1</field>
          </message>
          <message id="58" name="ROLL_PITCH_YAW_THRUST_SETPOINT">
               <description>Setpoint in roll, pitch, yaw currently active on the system.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
               <field type="float" name="roll">Desired roll angle in radians</field>
               <field type="float" name="pitch">Desired pitch angle in radians</field>
               <field type="float" name="yaw">Desired yaw angle in radians</field>
               <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1</field>
          </message>
          <message id="59" name="ROLL_PITCH_YAW_SPEED_THRUST_SETPOINT">
               <description>Setpoint in rollspeed, pitchspeed, yawspeed currently active on the system.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
               <field type="float" name="roll_speed">Desired roll angular speed in rad/s</field>
               <field type="float" name="pitch_speed">Desired pitch angular speed in rad/s</field>
               <field type="float" name="yaw_speed">Desired yaw angular speed in rad/s</field>
               <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1</field>
          </message>
          <message id="60" name="SET_QUAD_MOTORS_SETPOINT">
               <description>Setpoint in the four motor speeds</description>
               <field type="uint8_t" name="target_system">System ID of the system that should set these motor commands</field>
               <field type="uint16_t" name="motor_front_nw">Front motor in + configuration, front left motor in x configuration</field>
               <field type="uint16_t" name="motor_right_ne">Right motor in + configuration, front right motor in x configuration</field>
               <field type="uint16_t" name="motor_back_se">Back motor in + configuration, back right motor in x configuration</field>
               <field type="uint16_t" name="motor_left_sw">Left motor in + configuration, back left motor in x configuration</field>
          </message>
          <message id="61" name="SET_QUAD_SWARM_ROLL_PITCH_YAW_THRUST">
               <description></description>
               <field type="uint8_t[6]" name="target_systems">System IDs for 6 quadrotors: 0..5, the ID's are the MAVLink IDs</field>
               <field type="int16_t[6]" name="roll">Desired roll angle in radians, scaled to int16 for 6 quadrotors: 0..5</field>
               <field type="int16_t[6]" name="pitch">Desired pitch angle in radians, scaled to int16 for 6 quadrotors: 0..5</field>
               <field type="int16_t[6]" name="yaw">Desired yaw angle in radians, scaled to int16 for 6 quadrotors: 0..5</field>
               <field type="uint16_t[6]" name="thrust">Collective thrust, scaled to uint16 for 6 quadrotors: 0..5</field>
          </message>
          <message id="62" name="NAV_CONTROLLER_OUTPUT">
               <description>Outputs of the APM navigation controller. The primary use of this message is to check the response and signs
                of the controller before actual flight and to assist with tuning controller parameters 
            </description>
               <field type="float" name="nav_roll">Current desired roll in degrees</field>
               <field type="float" name="nav_pitch">Current desired pitch in degrees</field>
               <field type="int16_t" name="nav_bearing">Current desired heading in degrees</field>
               <field type="int16_t" name="target_bearing">Bearing to current MISSION/target in degrees</field>
               <field type="uint16_t" name="wp_dist">Distance to active MISSION in meters</field>
               <field type="float" name="alt_error">Current altitude error in meters</field>
               <field type="float" name="aspd_error">Current airspeed error in meters/second</field>
               <field type="float" name="xtrack_error">Current crosstrack error on x-y plane in meters</field>
          </message>
          <message id="64" name="STATE_CORRECTION">
               <description>Corrects the systems state by adding an error correction term to the position and velocity, and by rotating the attitude by a correction angle.</description>
               <field type="float" name="xErr">x position error</field>
               <field type="float" name="yErr">y position error</field>
               <field type="float" name="zErr">z position error</field>
               <field type="float" name="rollErr">roll error (radians)</field>
               <field type="float" name="pitchErr">pitch error (radians)</field>
               <field type="float" name="yawErr">yaw error (radians)</field>
               <field type="float" name="vxErr">x velocity</field>
               <field type="float" name="vyErr">y velocity</field>
               <field type="float" name="vzErr">z velocity</field>
          </message>
          <message id="66" name="REQUEST_DATA_STREAM">
               <field type="uint8_t" name="target_system">The target requested to send the message stream.</field>
               <field type="uint8_t" name="target_component">The target requested to send the message stream.</field>
               <field type="uint8_t" name="req_stream_id">The ID of the requested data stream</field>
               <field type="uint16_t" name="req_message_rate">The requested interval between two messages of this type</field>
               <field type="uint8_t" name="start_stop">1 to start sending, 0 to stop sending.</field>
          </message>
          <message id="67" name="DATA_STREAM">
               <field type="uint8_t" name="stream_id">The ID of the requested data stream</field>
               <field type="uint16_t" name="message_rate">The requested interval between two messages of this type</field>
               <field type="uint8_t" name="on_off">1 stream is enabled, 0 stream is stopped.</field>
          </message>
          <message id="69" name="MANUAL_CONTROL">
               <field type="uint8_t" name="target">The system to be controlled</field>
               <field type="float" name="roll">roll</field>
               <field type="float" name="pitch">pitch</field>
               <field type="float" name="yaw">yaw</field>
               <field type="float" name="thrust">thrust</field>
               <field type="uint8_t" name="roll_manual">roll control enabled auto:0, manual:1</field>
               <field type="uint8_t" name="pitch_manual">pitch auto:0, manual:1</field>
               <field type="uint8_t" name="yaw_manual">yaw auto:0, manual:1</field>
               <field type="uint8_t" name="thrust_manual">thrust auto:0, manual:1</field>
          </message>
          <message id="70" name="RC_CHANNELS_OVERRIDE">
               <description>The RAW values of the RC channels sent to the MAV to override info received from the RC radio. A value of -1 means no change to that channel. A value of 0 means control of that channel should be released back to the RC radio. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
               <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds</field>
               <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds</field>
               <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds</field>
               <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds</field>
               <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds</field>
               <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds</field>
               <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds</field>
               <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds</field>
          </message>
          <message id="74" name="VFR_HUD">
               <description>Metrics typically displayed on a HUD for fixed wing aircraft</description>
               <field type="float" name="airspeed">Current airspeed in m/s</field>
               <field type="float" name="groundspeed">Current ground speed in m/s</field>
               <field type="int16_t" name="heading">Current heading in degrees, in compass units (0..360, 0=north)</field>
               <field type="uint16_t" name="throttle">Current throttle setting in integer percent, 0 to 100</field>
               <field type="float" name="alt">Current altitude (MSL), in meters</field>
               <field type="float" name="climb">Current climb rate in meters/second</field>
          </message>
          <message id="76" name="COMMAND_LONG">
               <description>Send a command with up to four parameters to the MAV</description>
               <field type="uint8_t" name="target_system">System which should execute the command</field>
               <field type="uint8_t" name="target_component">Component which should execute the command, 0 for all components</field>
               <field type="uint16_t" name="command">Command ID, as defined by MAV_CMD enum.</field>
               <field type="uint8_t" name="confirmation">0: First transmission of this command. 1-255: Confirmation transmissions (e.g. for kill command)</field>
               <field type="float" name="param1">Parameter 1, as defined by MAV_CMD enum.</field>
               <field type="float" name="param2">Parameter 2, as defined by MAV_CMD enum.</field>
               <field type="float" name="param3">Parameter 3, as defined by MAV_CMD enum.</field>
               <field type="float" name="param4">Parameter 4, as defined by MAV_CMD enum.</field>
               <field type="float" name="param5">Parameter 5, as defined by MAV_CMD enum.</field>
               <field type="float" name="param6">Parameter 6, as defined by MAV_CMD enum.</field>
               <field type="float" name="param7">Parameter 7, as defined by MAV_CMD enum.</field>
          </message>
          <message id="77" name="COMMAND_ACK">
               <description>Report status of a command. Includes feedback wether the command was executed</description>
               <field type="uint16_t" name="command">Command ID, as defined by MAV_CMD enum.</field>
               <field type="uint8_t" name="result">See MAV_RESULT enum</field>
          </message>
          <!--
          <message id="80" name="MISSION_ITEM">
          	   <description>One mission element following the MAV_CMD enumeration</description>
          	   <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint16_t" name="id">ID</field>
               <field type="uint16_t" name="id">Total count (size of total mission)</field>
               <field type="uint8_t" name="frame">The coordinate system of the MISSION. see MAV_FRAME in mavlink_types.h</field>
               <field type="uint8_t" name="command">The scheduled action for the MISSION. see MAV_COMMAND in common.xml MAVLink specs</field>
               <field type="uint8_t" name="current">false:0, true:1</field>
               <field type="uint8_t" name="autocontinue">autocontinue to next wp</field>
               <field type="float" name="param1">PARAM1 / For NAV command MISSIONs: Radius in which the MISSION is accepted as reached, in meters</field>
               <field type="float" name="param2">PARAM2 / For NAV command MISSIONs: Time that the MAV should stay inside the PARAM1 radius before advancing, in milliseconds</field>
               <field type="float" name="param3">PARAM3 / For LOITER command MISSIONs: Orbit to circle around the MISSION, in meters. If positive the orbit direction should be clockwise, if negative the orbit direction should be counter-clockwise.</field>
               <field type="float" name="param4">PARAM4 / For NAV and LOITER command MISSIONs: Yaw orientation in degrees, [0..360] 0 = NORTH</field>
               <field type="float" name="x">PARAM5 / local: x position, global: latitude</field>
               <field type="float" name="y">PARAM6 / y position: global: longitude</field>
               <field type="float" name="z">PARAM7 / z position: global: altitude</field>
          </message>
          <message id="81" name="MISSION_ACK">
               <description>ACK / NACK for one mission element or a whole mission</description>
          	   <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint8_t" name="mission_status"></field>
               <field type="uint16_t" name="begin_item"></field>
               <field type="uint16_t" name="end_item"></field>
               <field type="uint8_t" name="packet_seq"></field>
          </message>
          <message id="82" name="MISSION_REQUEST">
               <description>One mission element following the MAV_CMD enumeration</description>
          	   <field type="uint8_t" name="target_system">System ID</field>
               <field type="uint8_t" name="target_component">Component ID</field>
               <field type="uint8_t" name="mission_command">Command id: 0: read whole mission, 1: read mission from begin to end, 2: write mission items from begin to end, 3: clear mission.</field>
               <field type="uint16_t" name="begin_item"></field>
               <field type="uint16_t" name="end_item"></field>
          </message> -->
          <message id="90" name="HIL_STATE">
               <description>Sent from simulation to autopilot. This packet is useful for high throughput
                applications such as hardware in the loop simulations.
            </description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="float" name="roll">Roll angle (rad)</field>
               <field type="float" name="pitch">Pitch angle (rad)</field>
               <field type="float" name="yaw">Yaw angle (rad)</field>
               <field type="float" name="rollspeed">Roll angular speed (rad/s)</field>
               <field type="float" name="pitchspeed">Pitch angular speed (rad/s)</field>
               <field type="float" name="yawspeed">Yaw angular speed (rad/s)</field>
               <field type="int32_t" name="lat">Latitude, expressed as * 1E7</field>
               <field type="int32_t" name="lon">Longitude, expressed as * 1E7</field>
               <field type="int32_t" name="alt">Altitude in meters, expressed as * 1000 (millimeters)</field>
               <field type="int16_t" name="vx">Ground X Speed (Latitude), expressed as m/s * 100</field>
               <field type="int16_t" name="vy">Ground Y Speed (Longitude), expressed as m/s * 100</field>
               <field type="int16_t" name="vz">Ground Z Speed (Altitude), expressed as m/s * 100</field>
               <field type="int16_t" name="xacc">X acceleration (mg)</field>
               <field type="int16_t" name="yacc">Y acceleration (mg)</field>
               <field type="int16_t" name="zacc">Z acceleration (mg)</field>
          </message>
          <message id="91" name="HIL_CONTROLS">
               <description>Sent from autopilot to simulation. Hardware in the loop control outputs</description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="float" name="roll_ailerons">Control output -1 .. 1</field>
               <field type="float" name="pitch_elevator">Control output -1 .. 1</field>
               <field type="float" name="yaw_rudder">Control output -1 .. 1</field>
               <field type="float" name="throttle">Throttle 0 .. 1</field>
               <field type="float" name="aux1">Aux 1, -1 .. 1</field>
               <field type="float" name="aux2">Aux 2, -1 .. 1</field>
               <field type="float" name="aux3">Aux 3, -1 .. 1</field>
               <field type="float" name="aux4">Aux 4, -1 .. 1</field>
               <field type="uint8_t" name="mode">System mode (MAV_MODE)</field>
               <field type="uint8_t" name="nav_mode">Navigation mode (MAV_NAV_MODE)</field>
          </message>
          <message id="92" name="HIL_RC_INPUTS_RAW">
               <description>Sent from simulation to autopilot. The RAW values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
               <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
               <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds</field>
               <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds</field>
               <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds</field>
               <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds</field>
               <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds</field>
               <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds</field>
               <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds</field>
               <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds</field>
               <field type="uint16_t" name="chan9_raw">RC channel 9 value, in microseconds</field>
               <field type="uint16_t" name="chan10_raw">RC channel 10 value, in microseconds</field>
               <field type="uint16_t" name="chan11_raw">RC channel 11 value, in microseconds</field>
               <field type="uint16_t" name="chan12_raw">RC channel 12 value, in microseconds</field>
               <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 255: 100%</field>
          </message>
          <message id="100" name="OPTICAL_FLOW">
               <description>Optical flow from a flow sensor (e.g. optical mouse sensor)</description>
               <field type="uint64_t" name="time_usec">Timestamp (UNIX)</field>
               <field type="uint8_t" name="sensor_id">Sensor ID</field>
               <field type="float" name="flow_x">Flow in x-sensor direction</field>
               <field type="float" name="flow_y">Flow in y-sensor direction</field>
               <field type="uint8_t" name="quality">Optical flow quality / confidence. 0: bad, 255: maximum quality</field>
               <field type="float" name="ground_distance">Ground distance in meters (-1 for unknown, flow is then in pixel / arbitrary scale)</field>
          </message>
          <message id="101" name="GLOBAL_VISION_POSITION_ESTIMATE">
               <field type="uint64_t" name="usec">Timestamp (milliseconds)</field>
               <field type="float" name="x">Global X position</field>
               <field type="float" name="y">Global Y position</field>
               <field type="float" name="z">Global Z position</field>
               <field type="float" name="roll">Roll angle in rad</field>
               <field type="float" name="pitch">Pitch angle in rad</field>
               <field type="float" name="yaw">Yaw angle in rad</field>
          </message>
          <message id="102" name="VISION_POSITION_ESTIMATE">
               <field type="uint64_t" name="usec">Timestamp (milliseconds)</field>
               <field type="float" name="x">Global X position</field>
               <field type="float" name="y">Global Y position</field>
               <field type="float" name="z">Global Z position</field>
               <field type="float" name="roll">Roll angle in rad</field>
               <field type="float" name="pitch">Pitch angle in rad</field>
               <field type="float" name="yaw">Yaw angle in rad</field>
          </message>
          <message id="103" name="VISION_SPEED_ESTIMATE">
               <field type="uint64_t" name="usec">Timestamp (milliseconds)</field>
               <field type="float" name="x">Global X speed</field>
               <field type="float" name="y">Global Y speed</field>
               <field type="float" name="z">Global Z speed</field>
          </message>
          <message id="104" name="VICON_POSITION_ESTIMATE">
               <field type="uint64_t" name="usec">Timestamp (milliseconds)</field>
               <field type="float" name="x">Global X position</field>
               <field type="float" name="y">Global Y position</field>
               <field type="float" name="z">Global Z position</field>
               <field type="float" name="roll">Roll angle in rad</field>
               <field type="float" name="pitch">Pitch angle in rad</field>
               <field type="float" name="yaw">Yaw angle in rad</field>
          </message>
          <!-- MESSAGE IDs 150 - 240: Space for custom messages in individual projectname_messages.xml files -->
          <message id="249" name="MEMORY_VECT">
               <description>Send raw controller memory. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
               <field type="uint16_t" name="address">Starting address of the debug variables</field>
               <field type="uint8_t" name="ver">Version code of the type variable. 0=unknown, type ignored and assumed int16_t. 1=as below</field>
               <field type="uint8_t" name="type">Type code of the memory variables. for ver = 1: 0=16 x int16_t, 1=16 x uint16_t, 2=16 x Q15, 3=16 x 1Q14</field>
               <field type="int8_t[32]" name="value">Memory contents at specified address</field>
          </message>
          <message id="250" name="DEBUG_VECT">
               <field type="char[10]" name="name">Name</field>
               <field type="uint64_t" name="time_usec">Timestamp</field>
               <field type="float" name="x">x</field>
               <field type="float" name="y">y</field>
               <field type="float" name="z">z</field>
          </message>
          <message id="251" name="NAMED_VALUE_FLOAT">
               <description>Send a key-value pair as float. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="char[10]" name="name">Name of the debug variable</field>
               <field type="float" name="value">Floating point value</field>
          </message>
          <message id="252" name="NAMED_VALUE_INT">
               <description>Send a key-value pair as integer. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="char[10]" name="name">Name of the debug variable</field>
               <field type="int32_t" name="value">Signed integer value</field>
          </message>
          <message id="253" name="STATUSTEXT">
               <description>Status text message. These messages are printed in yellow in the COMM console of QGroundControl. WARNING: They consume quite some bandwidth, so use only for important status and error messages. If implemented wisely, these messages are buffered on the MCU and sent only at a limited rate (e.g. 10 Hz).</description>
               <field type="uint8_t" name="severity">Severity of status, 0 = info message, 255 = critical fault</field>
               <field type="char[50]" name="text">Status text message, without null termination character</field>
          </message>
          <message id="254" name="DEBUG">
               <description>Send a debug value. The index is used to discriminate between values. These values show up in the plot of QGroundControl as DEBUG N.</description>
               <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
               <field type="uint8_t" name="ind">index of debug variable</field>
               <field type="float" name="value">DEBUG value</field>
          </message>
     </messages>
</mavlink>
