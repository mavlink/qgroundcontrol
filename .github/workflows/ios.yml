name: iOS

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13

    strategy:
      matrix:
        BuildType: [Debug, Release]

    defaults:
      run:
        shell: bash

    env:
      ARTIFACT: QGroundControl.app
      QT_VERSION: 6.6.3

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true
          fetch-depth: 0

      - name: Install Qt6 for MacOS
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          aqtversion: ==3.1.*
          host: mac
          target: desktop
          dir: ${{ runner.temp }}
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d qtsensors
          cache: ${{ github.ref == 'refs/heads/master' && github.event_name != 'pull_request' }}

      - name: Install Qt6 for iOS
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          aqtversion: ==3.1.*
          host: mac
          target: ios
          dir: ${{ runner.temp }}
          extra: --autodesktop
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtimageformats qtshadertools qtconnectivity qtquick3d qtsensors
          cache: ${{ github.ref == 'refs/heads/master' && github.event_name != 'pull_request' }}

      - name: Install Dependencies
        run: |
          brew update
          brew install cmake ninja

      - name: Create build directory
        run:  mkdir ${{ runner.temp }}/shadow_build_dir

      - name: Configure
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: ${{ env.QT_ROOT_DIR }}/bin/qt-cmake -S ${{ github.workspace }} -B . -G Ninja
              -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }}
              -DQT_HOST_PATH="${{ env.QT_ROOT_DIR }}/../macos"
              -DQGC_STABLE_BUILD=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'ON' || 'OFF' }}

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: cmake --build . --target all --config ${{ matrix.BuildType }}

      - name: Save APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}/shadow_build_dir/*.app
