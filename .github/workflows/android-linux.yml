name: Android-Linux

on:
  push:
    branches:
      - master
      - 'Stable*'
    tags:
      - 'v*'
  pull_request:
    paths:
      - '.github/workflows/android-linux.yml'
      - 'deploy/android/**'
      - 'src/**'
      - 'android/**'
      - 'CMakeLists.txt'
      - 'cmake/**'

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        BuildType: [Release]

    defaults:
      run:
        shell: bash

    env:
      ARTIFACT: QGroundControl.apk
      PACKAGE: QGroundControl
      QT_VERSION: 6.8.2
      QT_ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/deploy/android/android_release.keystore
      QT_ANDROID_KEYSTORE_ALIAS: QGCAndroidKeyStore
      QT_ANDROID_KEYSTORE_STORE_PASS: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      QT_ANDROID_KEYSTORE_KEY_PASS: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      QT_ANDROID_ABIS: ${{ matrix.BuildType == 'Release' && 'armeabi-v7a;arm64-v8a' || 'arm64-v8a' }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true

      - name: Initial Setup
        uses: ./.github/actions/common

      - name: Install Qt for Android
        uses: ./.github/actions/qt-android
        with:
          host: linux
          arch: linux_gcc_64
          version: ${{ env.QT_VERSION }}
          abis: ${{ env.QT_ANDROID_ABIS }}
          cpm-modules: ${{ runner.temp }}/shadow_build_dir/cpm_modules

      - name: Configure
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: ${{ env.QT_ROOT_DIR }}/bin/qt-cmake -S ${{ github.workspace }} -B . -G Ninja
              -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }}
              -DQT_ANDROID_ABIS="${{ env.QT_ANDROID_ABIS }}"
              -DQT_ANDROID_BUILD_ALL_ABIS=OFF
              -DQT_HOST_PATH="${{ env.QT_ROOT_DIR }}/../gcc_64"
              -DQT_ANDROID_SIGN_APK=${{ github.ref == 'refs/heads/master' && github.event_name != 'pull_request' && 'ON' || 'OFF' }}
              -DQT_DEBUG_FIND_PACKAGE=ON
              -DQGC_STABLE_BUILD=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'ON' || 'OFF' }}

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run: cmake --build . --target all --config ${{ matrix.BuildType }}

      - run: cp ${{ runner.temp }}/shadow_build_dir/android-build/*.apk ${{ runner.temp }}/shadow_build_dir/${{ env.ARTIFACT }}

      - name: Upload Build File
        if: matrix.BuildType == 'Release'
        uses: ./.github/actions/upload
        with:
          artifact_name: ${{ env.ARTIFACT }}
          package_name: ${{ env.PACKAGE }}
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Deploy to Play Store
      #   if: matrix.BuildType == 'Release'
      #   uses: ./.github/actions/playstore
      #   with:
      #     artifact_name: ${{ runner.temp }}/shadow_build_dir/${{ env.ARTIFACT }}
      #     service_account_json: ${{ secrets.SERVICE_ACCOUNT }}
