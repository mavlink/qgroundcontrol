# The 32 and 64 bit version of these actions should be kept in sync
name: Android 32/64-bit Release

on:
  push:
    branches:
      - 'master'
      - 'Stable*'
    tags:
      - 'v*'
  pull_request:
    branches:
    - '*'

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2
  BUILD_TYPE:   ${{ fromJSON('["DailyBuild", "StableBuild"]')[ github.ref_type == 'tag' || contains(github.ref, 'Stable_' ) ] }}

jobs:
  build:
    runs-on:  ubuntu-20.04

    strategy:
      matrix:
       include:
         - architecture: 32bits
           eabi: armeabi-v7a
           ARTIFACT: QGroundControl32.apk
         - architecture: 64bits
           eabi: arm64-v8a
           ARTIFACT: QGroundControl64.apk

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version:      ${{ env.QT_VERSION }}
          host:         linux
          target:       android
          dir:          ${{ runner.temp }}
          modules:      qtcharts
          setup-python: true

      - name: Install ccache
        run:  sudo apt-get install ccache

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path:         ~/.ccache
          key:          ${{ runner.os }}-ccache-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{ runner.os }}-ccache-

      - name: Setup ccache
        run: |
            mkdir -p ~/.ccache
            echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
            echo "compression = true" >> ~/.ccache/ccache.conf
            echo "compression_level = 5" >> ~/.ccache/ccache.conf
            ccache -s
            ccache -z

      - name: Create build directory
        run:  mkdir ${{ runner.temp }}/shadow_build_dir

      - name:               Install gstreamer
        working-directory:  ${{ github.workspace }}
        run: |
            wget --quiet https://gstreamer.freedesktop.org/data/pkg/android/1.18.5/gstreamer-1.0-android-universal-1.18.5.tar.xz
            mkdir gstreamer-1.0-android-universal-1.18.5
            tar xf gstreamer-1.0-android-universal-1.18.5.tar.xz -C gstreamer-1.0-android-universal-1.18.5

      # This will set GIT_BRANCH_NAME environment variable
      - name: Git branch name
        id:   git-branch-name
        uses: EthanSK/git-branch-name-action@v1

      - name: Update android manifest
        run: |
          if [ $GIT_BRANCH_NAME != "Stable*" ]; then
            ${SOURCE_DIR}/tools/update_android_manifest_package.sh ${GIT_BRANCH_NAME}
          fi

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        run:  |
            qmake -r ${SOURCE_DIR}/qgroundcontrol.pro -spec android-clang CONFIG+=${BUILD_TYPE} CONFIG+=installer ANDROID_ABIS="${{ matrix.eabi }}"
            make -j2 apk
            mkdir ${{ runner.temp }}/shadow_build_dir/package
            mv ${{ runner.temp }}/shadow_build_dir/android-build/build/outputs/apk/debug/android-build-debug.apk ${{ runner.temp }}/shadow_build_dir/package/${{ matrix.ARTIFACT }}

      - name: ccache post-run
        run:  ccache -s

      - name: Save artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.ARTIFACT }}
          path: ${{ runner.temp }}/shadow_build_dir/package/${{ matrix.ARTIFACT }}

      - name: Upload build to S3 Bucket
        if:                 github.event_name == 'push'
        working-directory:  ${{ runner.temp }}/shadow_build_dir/package
        run: |
              aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws s3 cp ${{ matrix.ARTIFACT }} s3://qgroundcontrol/builds/${GIT_BRANCH_NAME}/${{ matrix.ARTIFACT }} --region us-west-2 --acl public-read

      - name: Upload tagged stable build to S3 latest Bucket
        if:                 github.event_name == 'push' && github.ref_type == 'tag'
        working-directory:  ${{ runner.temp }}/shadow_build_dir/package
        run: |
              aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws s3 cp ${{ matrix.ARTIFACT }} s3://qgroundcontrol/latest/${{ matrix.ARTIFACT }} --region us-west-2 --acl public-read
