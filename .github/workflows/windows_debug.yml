name: Windows Debug and Tests

on:
  push:
    branches:
      - 'master'
      - 'Stable*'
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
    - '*'
    paths-ignore:
      - 'docs/**'

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.6.*
  ARTIFACT:     QGroundControl-installer.exe
  BUILD_TYPE:   ${{ fromJSON('["DailyBuild", "StableBuild"]')[ github.ref_type == 'tag' || contains(github.ref, 'Stable_' ) ] }}

jobs:
  build:
    runs-on:  windows-2019

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
          key: ${{ runner.os }}-Debug
          restore-keys: ${{ runner.os }}-Debug
          max-size: "2G"
          append-timestamp: false
          variant: "sccache"

      - name: Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f --depth 1

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          aqtversion:   ==3.1.*
          host:         windows
          target:       desktop
          arch:         win64_msvc2019_64
          dir:          ${{ runner.temp }}
          modules:      qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          setup-python: true
          cache:        true

      - name: Download Gstreamer
        uses: suisei-cn/actions-download-file@v1.6.0
        with:
          url:    https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/gstreamer-1.0-msvc-x86_64-1.18.1.msi
          target: ${{ runner.temp }}\

      - name: Download Gstreamer dev
        uses: suisei-cn/actions-download-file@v1.6.0
        with:
          url:    https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/gstreamer-1.0-devel-msvc-x86_64-1.18.1.msi
          target: ${{ runner.temp }}\

      - name: Install Gstreamer
        run:  |
            cmd /c start /wait msiexec /package ${{ runner.temp }}\gstreamer-1.0-msvc-x86_64-1.18.1.msi /passive ADDLOCAL=ALL
            cmd /c start /wait msiexec /package ${{ runner.temp }}\gstreamer-1.0-devel-msvc-x86_64-1.18.1.msi /passive ADDLOCAL=ALL

      - name: Install Dependencies
        run:  |
            python -m pip install ninja

      - name: Set up Visual Studio shell
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Create build directory
        run:  mkdir ${{ runner.temp }}\shadow_build_dir

      - name: Build
        working-directory: ${{ runner.temp }}\shadow_build_dir
        run:  |
              cmake -S ${{ env.SOURCE_DIR }} -B ${{ runner.temp }}\shadow_build_dir -G Ninja -DCMAKE_BUILD_TYPE=Debug
              cmake --build ${{ runner.temp }}\shadow_build_dir --target all --config Debug
              cmake --install ${{ runner.temp }}\shadow_build_dir

      - name: Save PDB artifact
        uses: actions/upload-artifact@master
        with:
          name: qgroundcontrol.pdb
          path: ${{ runner.temp }}\shadow_build_dir\staging\qgroundcontrol.pdb

      # - name: Run unit tests
      #   working-directory: ${{ runner.temp }}\shadow_build_dir
      #   run: ${{ runner.temp }}\shadow_build_dir\staging\bin\QGroundControl.exe --unittest