name: Linux Debug and Test

on:
  push:
    branches:
    - 'master'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
    - '*'
    paths-ignore:
      - 'docs/**'

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.6.*
  BUILD_TYPE:   ${{ fromJSON('["DailyBuild", "StableBuild"]')[ github.ref_type == 'tag' || contains(github.ref, 'Stable_' ) ] }}

jobs:
  build:
    runs-on:  ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - run: sudo apt update

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
          key: ${{ runner.os }}-Debug
          restore-keys: ${{ runner.os }}-Debug
          max-size: "2G"
          append-timestamp: false

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          aqtversion:   ==3.1.*
          host:         linux
          target:       desktop
          dir:          ${{ runner.temp }}
          modules:      qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtquick3d
          setup-python: true
          cache: true

      - name: Install github environment dependencies for unit test running
        run:  sudo apt-get install libxcb-xinerama0

      - name: Install QGC source dependencies
        run:  sudo apt-get install -y libsdl2-dev

      - name: Install source dependencies required to run unit tests in workflow container
        run:  sudo apt-get install -y libxkbcommon-x11-0 libxcb-cursor0

      - name: Install Gstreamer dev packages
        run:  sudo apt-get install -y libgstreamer-plugins-base1.0-dev libgstreamer1.0-0:amd64 libgstreamer1.0-dev

      - name: Install post-link dependencies
        run:  sudo apt-get install -y binutils patchelf

      - name: Create build directory
        run:  mkdir ${{ runner.temp }}/shadow_build_dir

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run:  |
              qmake -r ${SOURCE_DIR}/qgroundcontrol.pro CONFIG+=debug CONFIG+=${BUILD_TYPE}
              make -j2

      - name: Setup for unit tests
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run:  |
              mkdir -p ~/.config/QtProject/
              cp ${SOURCE_DIR}/test/qtlogging.ini ~/.config/QtProject/
              export QT_FATAL_WARNINGS=1

      - name: Run unit tests
        working-directory:  ${{ runner.temp }}/shadow_build_dir
        run:                xvfb-run -a ./staging/qgroundcontrol-start.sh --unittest
