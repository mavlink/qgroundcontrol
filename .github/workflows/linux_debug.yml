name: Linux Debug and Test

on:
  push:
    branches:
    - 'master'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
    - '*'
    paths-ignore:
      - 'docs/**'

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.6.*
  BUILD_TYPE:   ${{ fromJSON('["DailyBuild", "StableBuild"]')[ github.ref_type == 'tag' || contains(github.ref, 'Stable_' ) ] }}

jobs:
  build:
    runs-on:  ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - run: sudo apt update

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
          key: ${{ runner.os }}-Debug
          restore-keys: ${{ runner.os }}-Debug
          max-size: "2G"
          append-timestamp: false
        if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'

      - name: Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f --depth 1

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version:      ${{ env.QT_VERSION }}
          aqtversion:   ==3.1.*
          host:         linux
          target:       desktop
          dir:          ${{ runner.temp }}
          modules:      qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          setup-python: true
          cache: true

      - name: Install Dependencies
        run:  |
              chmod a+x ./tools/setup/ubuntu.sh
              ./tools/setup/ubuntu.sh

      - name: Create build directory
        run:  mkdir ${{ runner.temp }}/shadow_build_dir

      - name: Build
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run:  |
              cmake -S ${{ env.SOURCE_DIR }} -B ${{ runner.temp }}/shadow_build_dir/ -G Ninja -DCMAKE_BUILD_TYPE=Debug
              cmake --build ${{ runner.temp }}/shadow_build_dir/ --target all --config Debug
              cmake --install ${{ runner.temp }}/shadow_build_dir

      - name: Setup for unit tests
        working-directory: ${{ runner.temp }}/shadow_build_dir
        run:  |
              mkdir -p ~/.config/QtProject/
              cp ${SOURCE_DIR}/test/qtlogging.ini ~/.config/QtProject/
              export QT_FATAL_WARNINGS=1

      - name: Run unit tests
        working-directory:  ${{ runner.temp }}/shadow_build_dir
        run:  xvfb-run -a ${{ runner.temp }}/shadow_build_dir/QGroundControl*.AppImage --unittest
