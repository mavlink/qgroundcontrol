<?xml version="1.0" encoding="utf-8"?>
        <!-- Dynamically generated list of documented parameters (generated by param_parse.py) -->    
        <paramfile>
        <vehicles>
        <parameters name="ArduPlane">
<param humanName="USB Console Baud Rate" name="ArduPlane:SERIAL0_BAUD" documentation="The baud rate used on the main uart" user="Standard">
<values>
<value code="1">1200</value>
<value code="2">2400</value>
<value code="4">4800</value>
<value code="9">9600</value>
<value code="19">19200</value>
<value code="38">38400</value>
<value code="57">57600</value>
<value code="111">111100</value>
<value code="115">115200</value>
</values>
</param>
<param humanName="Telemetry Baud Rate" name="ArduPlane:SERIAL3_BAUD" documentation="The baud rate used on the telemetry port" user="Standard">
<values>
<value code="1">1200</value>
<value code="2">2400</value>
<value code="4">4800</value>
<value code="9">9600</value>
<value code="19">19200</value>
<value code="38">38400</value>
<value code="57">57600</value>
<value code="111">111100</value>
<value code="115">115200</value>
</values>
</param>
<param humanName="Telemetry startup delay " name="ArduPlane:TELEM_DELAY" documentation="The amount of time (in seconds) to delay radio telemetry to prevent an Xbee bricking on power up" user="Standard">
<field name="Range">0 10</field>
<field name="Increment">1</field>
<field name="Units">seconds</field>
</param>
<param humanName="Pitch Compensation" name="ArduPlane:KFF_PTCHCOMP" documentation="Adds pitch input to compensate for the loss of lift due to roll control. 0 = 0 %, 1 = 100%" user="Advanced">
<field name="Range">0 1</field>
<field name="Increment">0.01</field>
</param>
<param humanName="Rudder Mix" name="ArduPlane:KFF_RDDRMIX" documentation="The amount of rudder mix to apply during aileron movement 0 = 0 %, 1 = 100%" user="Standard">
<field name="Range">0 1</field>
<field name="Increment">0.01</field>
</param>
<param humanName="Pitch to Throttle Mix" name="ArduPlane:KFF_PTCH2THR" documentation="Pitch to throttle feed-forward gain." user="Advanced">
<field name="Range">0 5</field>
<field name="Increment">0.01</field>
</param>
<param humanName="Throttle to Pitch Mix" name="ArduPlane:KFF_THR2PTCH" documentation="Throttle to pitch feed-forward gain." user="Advanced">
<field name="Range">0 5</field>
<field name="Increment">0.01</field>
</param>
<param humanName="Stick Mixing" name="ArduPlane:STICK_MIXING" documentation='When enabled, this adds user stick input to the control surfaces in auto modes, allowing the user to have some degree of flight control without changing modes.  There are two types of stick mixing available. If you set STICK_MIXING to 1 then it will use "fly by wire" mixing, which controls the roll and pitch in the same way that the FBWA mode does. This is the safest option if you usually fly ArduPlane in FBWA or FBWB mode. If you set STICK_MIXING to 2 then it will enable direct mixing mode, which is what the STABILIZE mode uses. That will allow for much more extreme maneuvers while in AUTO mode.' user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">FBWMixing</value>
<value code="2">DirectMixing</value>
</values>
</param>
<param humanName="Takeoff throttle min speed" name="ArduPlane:TKOFF_THR_MINSPD" documentation="Minimum GPS ground speed in m/s before un-suppressing throttle in auto-takeoff. This is meant to be used for catapult launches where you want the motor to engage only after the plane leaves the catapult. Note that the GPS velocity will lag the real velocity by about 0.5seconds." user="User">
<field name="Range">0 30</field>
<field name="Increment">0.1</field>
<field name="Units">m/s</field>
</param>
<param humanName="Takeoff throttle min acceleration" name="ArduPlane:TKOFF_THR_MINACC" documentation="Minimum forward acceleration in m/s/s before un-suppressing throttle in auto-takeoff. This is meant to be used for hand launches with a tractor style (front engine) plane. If this is set then the auto takeoff will only trigger if the pitch of the plane is between -30 and +45 degrees, and the roll is less than 30 degrees. This makes it less likely it will trigger due to carrying the plane with the nose down." user="User">
<field name="Range">0 30</field>
<field name="Increment">0.1</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Level flight roll limit" name="ArduPlane:LEVEL_ROLL_LIMIT" documentation="This controls the maximum bank angle in degrees during flight modes where level flight is desired, such as in the final stages of landing, and during auto takeoff. This should be a small angle (such as 5 degrees) to prevent a wing hitting the runway during takeoff or landing. Setting this to zero will completely disable heading hold on auto takeoff and final landing approach." user="User">
<field name="Range">0 45</field>
<field name="Increment">1</field>
<field name="Units">degrees</field>
</param>
<param humanName="Landing Pitch" name="ArduPlane:land_pitch_cd" documentation="Used in autoland for planes without airspeed sensors in hundredths of a degree" user="Advanced">
<field name="Units">centi-Degrees</field>
</param>
<param humanName="Landing flare altitude" name="ArduPlane:land_flare_alt" documentation="Altitude in autoland at which to lock heading and flare to the LAND_PITCH_CD pitch" user="Advanced">
<field name="Increment">0.1</field>
<field name="Units">meters</field>
</param>
<param humanName="Landing flare time" name="ArduPlane:land_flare_sec" documentation="Time before landing point at which to lock heading and flare to the LAND_PITCH_CD pitch" user="Advanced">
<field name="Increment">0.1</field>
<field name="Units">seconds</field>
</param>
<param humanName="Navigation controller selection" name="ArduPlane:NAV_CONTROLLER" documentation="Which navigation controller to enable" user="Standard">
<values>
<value code="0">Legacy</value>
<value code="1">L1Controller</value>
</values>
</param>
<param humanName="Attitude controller selection" name="ArduPlane:ATT_CONTROLLER" documentation="Which attitude (roll, pitch, yaw) controller to enable" user="Standard">
<values>
<value code="0">PID</value>
<value code="1">APMControl</value>
</values>
</param>
<param humanName="Gps to Baro Mix" name="ArduPlane:ALT_MIX" documentation="The percent of mixing between gps altitude and baro altitude. 0 = 100% gps, 1 = 100% baro" user="Advanced">
<field name="Range">0 1</field>
<field name="Increment">0.1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Altitude control algorithm" name="ArduPlane:ALT_CTRL_ALG" documentation="This sets what algorithm will be used for altitude control. The default is to select the algorithm based on whether airspeed is enabled. If you set it to 1, then the airspeed based algorithm won't be used for altitude control, but airspeed can be used for other flight control functions" user="Advanced">
<values>
<value code="0">Default Method</value>
<value code="1">non-airspeed</value>
</values>
</param>
<param humanName="Altitude offset" name="ArduPlane:ALT_OFFSET" documentation="This is added to the target altitude in automatic flight. It can be used to add a global altitude offset to a mission, or to adjust for barometric pressure changes" user="Advanced">
<field name="Range">-32767 32767</field>
<field name="Increment">1</field>
<field name="Units">Meters</field>
</param>
<param humanName="Waypoint Radius" name="ArduPlane:WP_RADIUS" documentation="Defines the distance from a waypoint, that when crossed indicates the wp has been hit." user="Standard">
<field name="Range">1 32767</field>
<field name="Increment">1</field>
<field name="Units">Meters</field>
</param>
<param humanName="Waypoint Loiter Radius" name="ArduPlane:WP_LOITER_RAD" documentation="Defines the distance from the waypoint center, the plane will maintain during a loiter. If you set this value to a negative number then the default loiter direction will be counter-clockwise instead of clockwise." user="Standard">
<field name="Range">1 32767</field>
<field name="Increment">1</field>
<field name="Units">Meters</field>
</param>
<param humanName="Action on geofence breach" name="ArduPlane:FENCE_ACTION" documentation="What to do on fence breach" user="Standard">
<values>
<value code="0">None</value>
<value code="1">GuidedMode</value>
<value code="2">ReportOnly</value>
</values>
</param>
<param humanName="Fence Total" name="ArduPlane:FENCE_TOTAL" documentation="Number of geofence points currently loaded" user="Standard">
</param>
<param humanName="Fence Channel" name="ArduPlane:FENCE_CHANNEL" documentation="RC Channel to use to enable geofence. PWM input above 1750 enables the geofence" user="Standard">
</param>
<param humanName="Fence Minimum Altitude" name="ArduPlane:FENCE_MINALT" documentation="Minimum altitude allowed before geofence triggers" user="Standard">
<field name="Range">0 32767</field>
<field name="Increment">1</field>
<field name="Units">meters</field>
</param>
<param humanName="Fence Maximum Altitude" name="ArduPlane:FENCE_MAXALT" documentation="Maximum altitude allowed before geofence triggers" user="Standard">
<field name="Range">0 32767</field>
<field name="Increment">1</field>
<field name="Units">meters</field>
</param>
<param humanName="Fly By Wire Minimum Airspeed" name="ArduPlane:ARSPD_FBW_MIN" documentation="Airspeed corresponding to minimum throttle in Fly By Wire B mode." user="Standard">
<field name="Range">5 50</field>
<field name="Increment">1</field>
<field name="Units">m/s</field>
</param>
<param humanName="Fly By Wire Maximum Airspeed" name="ArduPlane:ARSPD_FBW_MAX" documentation="Airspeed corresponding to maximum throttle in Fly By Wire B mode." user="Standard">
<field name="Range">5 50</field>
<field name="Increment">1</field>
<field name="Units">m/s</field>
</param>
<param humanName="Fly By Wire elevator reverse" name="ArduPlane:FBWB_ELEV_REV" documentation="Reverse sense of elevator in FBWB. When set to 0 up elevator (pulling back on the stick) means to lower altitude. When set to 1, up elevator means to raise altitude." user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Fly By Wire B altitude change rate" name="ArduPlane:FBWB_CLIMB_RATE" documentation="This sets the rate in m/s at which FBWB will change its target altitude for full elevator deflection. Note that the actual climb rate of the aircraft can be lower than this, depending on your airspeed and throttle control settings. If you have this parameter set to the default value of 2.0, then holding the elevator at maximum deflection for 10 seconds would change the target altitude by 20 meters." user="Standard">
<field name="Range">1-10</field>
<field name="Increment">0.1</field>
</param>
<param humanName="Minimum Throttle" name="ArduPlane:THR_MIN" documentation="The minimum throttle setting to which the autopilot will apply." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Maximum Throttle" name="ArduPlane:THR_MAX" documentation="The maximum throttle setting to which the autopilot will apply." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Throttle slew rate" name="ArduPlane:THR_SLEWRATE" documentation="maximum percentage change in throttle per second. A setting of 10 means to not change the throttle by more than 10% of the full throttle range in one second" user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Throttle suppress manual passthru" name="ArduPlane:THR_SUPP_MAN" documentation="When throttle is supressed in auto mode it is normally forced to zero. If you enable this option, then while suppressed it will be manual throttle. This is useful on petrol engines to hold the idle throttle manually while waiting for takeoff" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Throttle passthru in stabilize" name="ArduPlane:THR_PASS_STAB" documentation="If this is set then when in STABILIZE or FBWA mode the throttle is a direct passthru from the transmitter. This means the THR_MIN and THR_MAX settings are not used in these modes. This is useful for petrol engines where you setup a throttle cut switch that suppresses the throttle below the normal minimum." user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Throttle Failsafe Enable" name="ArduPlane:THR_FAILSAFE" documentation="The throttle failsafe allows you to configure a software failsafe activated by a setting on the throttle input channel" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Throttle Failsafe Value" name="ArduPlane:THR_FS_VALUE" documentation="The PWM level on channel 3 below which throttle sailsafe triggers" user="Standard">
</param>
<param humanName="Throttle cruise percentage" name="ArduPlane:TRIM_THROTTLE" documentation="The target percentage of throttle to apply for normal flight" user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Throttle nudge enable" name="ArduPlane:THROTTLE_NUDGE" documentation="When enabled, this uses the throttle input in auto-throttle modes to 'nudge' the throttle to higher or lower values" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Short failsafe action" name="ArduPlane:FS_SHORT_ACTN" documentation="The action to take on a short (1 second) failsafe event" user="Standard">
<values>
<value code="0">None</value>
<value code="1">ReturnToLaunch</value>
</values>
</param>
<param humanName="Long failsafe action" name="ArduPlane:FS_LONG_ACTN" documentation="The action to take on a long (20 second) failsafe event" user="Standard">
<values>
<value code="0">None</value>
<value code="1">ReturnToLaunch</value>
</values>
</param>
<param humanName="Failsafe battery voltage" name="ArduPlane:FS_BATT_VOLTAGE" documentation="Battery voltage to trigger failsafe. Set to 0 to disable battery voltage failsafe. If the battery voltage drops below this voltage then the plane will RTL" user="Standard">
<field name="Units">Volts</field>
</param>
<param humanName="Failsafe battery milliAmpHours" name="ArduPlane:FS_BATT_MAH" documentation="Battery capacity remaining to trigger failsafe. Set to 0 to disable battery remaining failsafe. If the battery remaining drops below this level then the plane will RTL" user="Standard">
<field name="Units">mAh</field>
</param>
<param humanName="GCS failsafe enable" name="ArduPlane:FS_GCS_ENABL" documentation="Enable ground control station telemetry failsafe. Failsafe will trigger after 20 seconds of no MAVLink heartbeat messages. WARNING: Enabling this option opens up the possibility of your plane going into failsafe mode and running the motor on the ground it it loses contact with your ground station. If this option is enabled on an electric plane then either use a separate motor arming switch or remove the propeller in any ground testing." user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Flightmode channel" name="ArduPlane:FLTMODE_CH" documentation="RC Channel to use for flight mode control" user="Advanced">
</param>
<param humanName="FlightMode1" name="ArduPlane:FLTMODE1" documentation="Flight mode for switch position 1 (910 to 1230 and above 2049)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="1">CIRCLE</value>
<value code="2">STABILIZE</value>
<value code="3">TRAINING</value>
<value code="5">FBWA</value>
<value code="6">FBWB</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="12">Loiter</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="FlightMode2" name="ArduPlane:FLTMODE2" documentation="Flight mode for switch position 2 (1231 to 1360)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="1">CIRCLE</value>
<value code="2">STABILIZE</value>
<value code="3">TRAINING</value>
<value code="5">FBWA</value>
<value code="6">FBWB</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="12">Loiter</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="FlightMode3" name="ArduPlane:FLTMODE3" documentation="Flight mode for switch position 3 (1361 to 1490)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="1">CIRCLE</value>
<value code="2">STABILIZE</value>
<value code="3">TRAINING</value>
<value code="5">FBWA</value>
<value code="6">FBWB</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="12">Loiter</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="FlightMode4" name="ArduPlane:FLTMODE4" documentation="Flight mode for switch position 4 (1491 to 1620)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="1">CIRCLE</value>
<value code="2">STABILIZE</value>
<value code="3">TRAINING</value>
<value code="5">FBWA</value>
<value code="6">FBWB</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="12">Loiter</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="FlightMode5" name="ArduPlane:FLTMODE5" documentation="Flight mode for switch position 5 (1621 to 1749)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="1">CIRCLE</value>
<value code="2">STABILIZE</value>
<value code="3">TRAINING</value>
<value code="5">FBWA</value>
<value code="6">FBWB</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="12">Loiter</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="FlightMode6" name="ArduPlane:FLTMODE6" documentation="Flight mode for switch position 6 (1750 to 2049)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="1">CIRCLE</value>
<value code="2">STABILIZE</value>
<value code="3">TRAINING</value>
<value code="5">FBWA</value>
<value code="6">FBWB</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="12">Loiter</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Maximum Bank Angle" name="ArduPlane:LIM_ROLL_CD" documentation="The maximum commanded bank angle in either direction" user="Standard">
<field name="Range">0 9000</field>
<field name="Increment">1</field>
<field name="Units">centi-Degrees</field>
</param>
<param humanName="Maximum Pitch Angle" name="ArduPlane:LIM_PITCH_MAX" documentation="The maximum commanded pitch up angle" user="Standard">
<field name="Range">0 9000</field>
<field name="Increment">1</field>
<field name="Units">centi-Degrees</field>
</param>
<param humanName="Minimum Pitch Angle" name="ArduPlane:LIM_PITCH_MIN" documentation="The minimum commanded pitch down angle" user="Standard">
<field name="Range">-9000 0</field>
<field name="Increment">1</field>
<field name="Units">centi-Degrees</field>
</param>
<param humanName="Auto trim" name="ArduPlane:AUTO_TRIM" documentation="Set RC trim PWM levels to current levels when switching away from manual mode" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Elevon mixing" name="ArduPlane:ELEVON_MIXING" documentation="Enable elevon mixing  on both input and output. To enable just output mixing see the ELEVON_OUTPUT option." user="User">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Elevon reverse" name="ArduPlane:ELEVON_REVERSE" documentation="Reverse elevon mixing" user="User">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Elevon reverse" name="ArduPlane:ELEVON_CH1_REV" documentation="Reverse elevon channel 1" user="User">
<values>
<value code="-1">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Elevon reverse" name="ArduPlane:ELEVON_CH2_REV" documentation="Reverse elevon channel 2" user="User">
<values>
<value code="-1">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="VTail output" name="ArduPlane:VTAIL_OUTPUT" documentation="Enable VTail output in software. If enabled then the APM will provide software VTail mixing on the elevator and rudder channels. There are 4 different mixing modes available, which refer to the 4 ways the elevator can be mapped to the two VTail servos. Note that you must not use VTail output mixing with hardware pass-through of RC values, such as with channel 8 manual control on an APM1. So if you use an APM1 then set FLTMODE_CH to something other than 8 before you enable VTAIL_OUTPUT." user="User">
<values>
<value code="0">Disabled</value>
<value code="1">UpUp</value>
<value code="2">UpDown</value>
<value code="3">DownUp</value>
<value code="4">DownDown</value>
</values>
</param>
<param humanName="Elevon output" name="ArduPlane:ELEVON_OUTPUT" documentation="Enable software elevon output mixer. If enabled then the APM will provide software elevon mixing on the aileron and elevator channels. There are 4 different mixing modes available, which refer to the 4 ways the elevator can be mapped to the two elevon servos. Note that you must not use elevon output mixing with hardware pass-through of RC values, such as with channel 8 manual control on an APM1. So if you use an APM1 then set FLTMODE_CH to something other than 8 before you enable ELEVON_OUTPUT." user="User">
<values>
<value code="0">Disabled</value>
<value code="1">UpUp</value>
<value code="2">UpDown</value>
<value code="3">DownUp</value>
<value code="4">DownDown</value>
</values>
</param>
<param humanName="Num Resets" name="ArduPlane:SYS_NUM_RESETS" documentation="Number of APM board resets" user="Advanced">
</param>
<param humanName="Log bitmask" name="ArduPlane:LOG_BITMASK" documentation="Two byte bitmap of log types to enable in dataflash" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1902">Default</value>
<value code="2030">Default+IMU</value>
</values>
</param>
<param humanName="Reset Switch Channel" name="ArduPlane:RST_SWITCH_CH" documentation="RC channel to use to reset to last flight mode&#9;after geofence takeover." user="Advanced">
</param>
<param humanName="Reset Mission Channel" name="ArduPlane:RST_MISSION_CH" documentation="RC channel to use to reset the mission to the first waypoint. When this channel goes above 1750 the mission is reset. Set RST_MISSION_CH to 0 to disable." user="Advanced">
</param>
<param humanName="Target airspeed" name="ArduPlane:TRIM_ARSPD_CM" documentation="Airspeed in cm/s to aim for when airspeed is enabled in auto mode" user="User">
<field name="Units">cm/s</field>
</param>
<param humanName="speed used for speed scaling calculations" name="ArduPlane:SCALING_SPEED" documentation="Airspeed in m/s to use when calculating surface speed scaling. Note that changing this value will affect all PID values" user="Advanced">
<field name="Units">m/s</field>
</param>
<param humanName="Minimum ground speed" name="ArduPlane:MIN_GNDSPD_CM" documentation="Minimum ground speed in cm/s when under airspeed control" user="Advanced">
<field name="Units">cm/s</field>
</param>
<param humanName="Pitch angle offset" name="ArduPlane:TRIM_PITCH_CD" documentation="offset to add to pitch - used for in-flight pitch trimming. It is recommended that instead of using this parameter you level your plane correctly on the ground for good flight attitude." user="Advanced">
<field name="Units">centi-Degrees</field>
</param>
<param humanName="RTL altitude" name="ArduPlane:ALT_HOLD_RTL" documentation="Return to launch target altitude" user="User">
<field name="Units">centimeters</field>
</param>
<param humanName="Minimum altitude for FBWB mode" name="ArduPlane:ALT_HOLD_FBWCM" documentation="This is the minimum altitude in centimeters that FBWB will allow. If you attempt to descend below this altitude then the plane will level off. A value of zero means no limit." user="User">
<field name="Units">centimeters</field>
</param>
<param humanName="Enable Compass" name="ArduPlane:MAG_ENABLE" documentation="Setting this to Enabled(1) will enable the compass. Setting this to Disabled(0) will disable the compass. Note that this is separate from COMPASS_USE. This will enable the low level senor, and will enable logging of magnetometer data. To use the compass for navigation you must also set COMPASS_USE to 1." user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Apms per volt" name="ArduPlane:APM_PER_VOLT" documentation="Number of amps that a 1V reading on the current sensor corresponds to" user="Standard">
<field name="Units">A/V</field>
</param>
<param humanName="AMP offset" name="ArduPlane:AMP_OFFSET" documentation="Voltage offset at zero current on current sensor" user="Standard">
<field name="Units">Volts</field>
</param>
<param humanName="Battery capacity" name="ArduPlane:BATT_CAPACITY" documentation="Capacity of the battery in mAh when full" user="Standard">
<field name="Units">mAh</field>
</param>
<param humanName="Battery Voltage sensing pin" name="ArduPlane:BATT_VOLT_PIN" documentation="Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13." user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 0">A0</value>
<value code=" 1">A1</value>
<value code=" 13">A13</value>
</values>
</param>
<param humanName="Battery Current sensing pin" name="ArduPlane:BATT_CURR_PIN" documentation="Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13." user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 1">A1</value>
<value code=" 2">A2</value>
<value code=" 12">A12</value>
</values>
</param>
<param humanName="Receiver RSSI sensing pin" name="ArduPlane:RSSI_PIN" documentation="This selects an analog pin for the receiver RSSI voltage. It assumes the voltage is 5V for max rssi, 0V for minimum" user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 0">A0</value>
<value code=" 1">A1</value>
<value code=" 13">A13</value>
</values>
</param>
<param humanName="Inverted flight channel" name="ArduPlane:INVERTEDFLT_CH" documentation="A RC input channel number to enable inverted flight. If this is non-zero then the APM will monitor the correcponding RC input channel and will enable inverted flight when the channel goes above 1750." user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Channel1</value>
<value code="2">Channel2</value>
<value code="3">Channel3</value>
<value code="4">Channel4</value>
<value code="5">Channel5</value>
<value code="6">Channel6</value>
<value code="7">Channel7</value>
<value code="8">Channel8</value>
</values>
</param>
<param humanName="HIL Servos enable" name="ArduPlane:HIL_SERVOS" documentation="This controls whether real servo controls are used in HIL mode. If you enable this then the APM will control the real servos in HIL mode. If disabled it will report servo values, but will not output to the real servos. Be careful that your motor and propeller are not connected if you enable this option." user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
</parameters>
<parameters name="ArduCopter">
<param humanName="Eeprom format version number" name="ArduCopter:SYSID_SW_MREV" documentation="This value is incremented when changes are made to the eeprom format" user="Advanced">
</param>
<param humanName="Software Type" name="ArduCopter:SYSID_SW_TYPE" documentation="This is used by the ground station to recognise the software type (eg ArduPlane vs ArduCopter)" user="Advanced">
</param>
<param humanName="Mavlink version" name="ArduCopter:SYSID_THISMAV" documentation="Allows reconising the mavlink version" user="Advanced">
</param>
<param humanName="My ground station number" name="ArduCopter:SYSID_MYGCS" documentation="Allows restricting radio overrides to only come from my ground station" user="Advanced">
</param>
<param humanName="Telemetry Baud Rate" name="ArduCopter:SERIAL3_BAUD" documentation="The baud rate used on the telemetry port" user="Standard">
<values>
<value code="1">1200</value>
<value code="2">2400</value>
<value code="4">4800</value>
<value code="9">9600</value>
<value code="19">19200</value>
<value code="38">38400</value>
<value code="57">57600</value>
<value code="111">111100</value>
<value code="115">115200</value>
</values>
</param>
<param humanName="Telemetry startup delay" name="ArduCopter:TELEM_DELAY" documentation="The amount of time (in seconds) to delay radio telemetry to prevent an Xbee bricking on power up" user="Standard">
<field name="Range">0 10</field>
<field name="Increment">1</field>
<field name="Units">seconds</field>
</param>
<param humanName="RTL Altitude" name="ArduCopter:RTL_ALT" documentation="The minimum altitude the model will move to before Returning to Launch.  Set to zero to return at current altitude." user="Standard">
<field name="Range">0 8000</field>
<field name="Increment">1</field>
<field name="Units">Centimeters</field>
</param>
<param humanName="Enable Sonar" name="ArduCopter:SONAR_ENABLE" documentation="Setting this to Enabled(1) will enable the sonar. Setting this to Disabled(0) will disable the sonar" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Sonar type" name="ArduCopter:SONAR_TYPE" documentation="Used to adjust scaling to match the sonar used (only Maxbotix sonars are supported at this time)" user="Standard">
<values>
<value code="0">XL-EZ0 / XL-EZ4</value>
<value code="1">LV-EZ0</value>
<value code="2">XLL-EZ0</value>
<value code="3">HRLV</value>
</values>
</param>
<param humanName="Sonar gain" name="ArduCopter:SONAR_GAIN" documentation="Used to adjust the speed with which the target altitude is changed when objects are sensed below the copter" user="Standard">
<field name="Range">0.01 0.5</field>
<field name="Increment">0.01</field>
</param>
<param humanName="Battery monitoring" name="ArduCopter:BATT_MONITOR" documentation="Controls enabling monitoring of the battery's voltage and current" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="3">Voltage Only</value>
<value code="4">Voltage and Current</value>
</values>
</param>
<param humanName="Battery Failsafe Enable" name="ArduCopter:FS_BATT_ENABLE" documentation="Controls whether failsafe will be invoked when battery voltage or current runs low" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="GPS Failsafe Enable" name="ArduCopter:FS_GPS_ENABLE" documentation="Controls whether failsafe will be invoked when gps signal is lost" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Ground Station Failsafe Enable" name="ArduCopter:FS_GCS_ENABLE" documentation="Controls whether failsafe will be invoked (and what action to take) when connection with Ground station is lost for at least 5 seconds" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled always RTL</value>
<value code="2">Enabled Continue with Mission in Auto Mode</value>
</values>
</param>
<param humanName="Voltage Divider" name="ArduCopter:VOLT_DIVIDER" documentation="Used to convert the voltage of the voltage sensing pin (BATT_VOLT_PIN) to the actual battery's voltage (pin voltage * INPUT_VOLTS/1024 * VOLT_DIVIDER)" user="Advanced">
</param>
<param humanName="Current Amps per volt" name="ArduCopter:AMP_PER_VOLT" documentation="Used to convert the voltage on the current sensing pin (BATT_CURR_PIN) to the actual current being consumed in amps (curr pin voltage * INPUT_VOLTS/1024 * AMP_PER_VOLT )" user="Advanced">
</param>
<param humanName="Battery Capacity" name="ArduCopter:BATT_CAPACITY" documentation="Battery capacity in milliamp-hours (mAh)" user="Standard">
<field name="Units">mAh</field>
</param>
<param humanName="Enable Compass" name="ArduCopter:MAG_ENABLE" documentation="Setting this to Enabled(1) will enable the compass. Setting this to Disabled(0) will disable the compass" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Enable Optical Flow" name="ArduCopter:FLOW_ENABLE" documentation="Setting this to Enabled(1) will enable optical flow. Setting this to Disabled(0) will disable optical flow" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Low Voltage" name="ArduCopter:LOW_VOLT" documentation="Set this to the voltage you want to represent low voltage" user="Standard">
<field name="Range">0 20</field>
<field name="Increment">0.1</field>
</param>
<param humanName="Enable Super Simple Mode" name="ArduCopter:SUPER_SIMPLE" documentation="Setting this to Enabled(1) will enable Super Simple Mode. Setting this to Disabled(0) will disable Super Simple Mode" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="RTL Final Altitude" name="ArduCopter:RTL_ALT_FINAL" documentation="This is the altitude the vehicle will move to as the final stage of Returning to Launch or after completing a mission.  Set to zero to land." user="Standard">
<field name="Range">-1 1000</field>
<field name="Increment">1</field>
<field name="Units">Centimeters</field>
</param>
<param humanName="Battery Voltage sensing pin" name="ArduCopter:BATT_VOLT_PIN" documentation="Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13." user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 0">A0</value>
<value code=" 1">A1</value>
<value code=" 13">A13</value>
</values>
</param>
<param humanName="Battery Current sensing pin" name="ArduCopter:BATT_CURR_PIN" documentation="Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13." user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 1">A1</value>
<value code=" 2">A2</value>
<value code=" 12">A12</value>
</values>
</param>
<param humanName="Receiver RSSI sensing pin" name="ArduCopter:RSSI_PIN" documentation="This selects an analog pin for the receiver RSSI voltage. It assumes the voltage is 5V for max rssi, 0V for minimum" user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 0">A0</value>
<value code=" 1">A1</value>
<value code=" 2">A2</value>
<value code=" 13">A13</value>
</values>
</param>
<param humanName="Enable Accel based throttle controller" name="ArduCopter:THR_ACC_ENABLE" documentation="This allows enabling and disabling the accelerometer based throttle controller.  If disabled a velocity based controller is used." user="Standard">
<values>
<value code="0">Disabled</value>
<value code=" 1">Enabled</value>
</values>
</param>
<param humanName="Yaw behaviour during missions" name="ArduCopter:WP_YAW_BEHAVIOR" documentation="Determines how the autopilot controls the yaw during missions and RTL" user="Advanced">
<values>
<value code="0">Never change yaw</value>
<value code=" 1">Face next waypoint</value>
<value code=" 2">Face next waypoint except RTL</value>
</values>
</param>
<param humanName="Waypoint Total" name="ArduCopter:WP_TOTAL" documentation="Total number of commands in the mission stored in the eeprom.  Do not update this parameter directly!" user="Advanced">
</param>
<param humanName="Waypoint Index" name="ArduCopter:WP_INDEX" documentation="The index number of the command that is currently being executed.  Do not update this parameter directly!" user="Advanced">
</param>
<param humanName="Circle radius" name="ArduCopter:CIRCLE_RADIUS" documentation="Defines the radius of the circle the vehicle will fly when in Circle flight mode" user="Standard">
<field name="Range">1 127</field>
<field name="Increment">1</field>
<field name="Units">Meters</field>
</param>
<param humanName="Circle rate" name="ArduCopter:CIRCLE_RATE" documentation="Circle mode's turn rate in degrees / second.  Positive to turn clockwise, negative for counter clockwise" user="Standard">
<field name="Range">-90 90</field>
<field name="Increment">1</field>
<field name="Units">Degrees / second</field>
</param>
<param humanName="RTL loiter time" name="ArduCopter:RTL_LOIT_TIME" documentation="Time (in milliseconds) to loiter above home before begining final descent" user="Standard">
<field name="Range">0 60000</field>
<field name="Increment">1000</field>
<field name="Units">ms</field>
</param>
<param humanName="Land speed" name="ArduCopter:LAND_SPEED" documentation="The descent speed for the final stage of landing in cm/s" user="Standard">
<field name="Range">20 200</field>
<field name="Increment">10</field>
<field name="Units">Centimeters/Second</field>
</param>
<param humanName="Pilot maximum vertical speed" name="ArduCopter:PILOT_VELZ_MAX" documentation="The maximum vertical velocity the pilot may request in cm/s" user="Standard">
<field name="Range">10 500</field>
<field name="Increment">10</field>
<field name="Units">Centimeters/Second</field>
</param>
<param humanName="Minimum Throttle" name="ArduCopter:THR_MIN" documentation="The minimum throttle that will be sent to the motors to keep them spinning" user="Standard">
<field name="Range">0 1000</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="Maximum Throttle" name="ArduCopter:THR_MAX" documentation="The maximum throttle that will be sent to the motors" user="Standard">
<field name="Range">0 1000</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="Throttle Failsafe Enable" name="ArduCopter:FS_THR_ENABLE" documentation="The throttle failsafe allows you to configure a software failsafe activated by a setting on the throttle input channel" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled always RTL</value>
<value code="2">Enabled Continue with Mission in Auto Mode</value>
</values>
</param>
<param humanName="Throttle Failsafe Value" name="ArduCopter:FS_THR_VALUE" documentation="The PWM level on channel 3 below which throttle sailsafe triggers" user="Standard">
</param>
<param humanName="Throttle Trim" name="ArduCopter:TRIM_THROTTLE" documentation="The autopilot's estimate of the throttle required to maintain a level hover.  Calculated automatically from the pilot's throttle input while in stabilize mode" user="Standard">
<field name="Range">0 1000</field>
<field name="Units">PWM</field>
</param>
<param humanName="Throttle Mid Position" name="ArduCopter:THR_MID" documentation="The throttle output (0 ~ 1000) when throttle stick is in mid position.  Used to scale the manual throttle so that the mid throttle stick position is close to the throttle required to hover" user="Standard">
<field name="Range">300 700</field>
<field name="Increment">1</field>
</param>
<param humanName="Flight Mode 1" name="ArduCopter:FLTMODE1" documentation="Flight mode when Channel 5 pwm is &lt;= 1230" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="8">Position</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">ToyA</value>
<value code="12">ToyM</value>
</values>
</param>
<param humanName="Flight Mode 2" name="ArduCopter:FLTMODE2" documentation="Flight mode when Channel 5 pwm is &gt;1230, &lt;= 1360" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="8">Position</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">ToyA</value>
<value code="12">ToyM</value>
</values>
</param>
<param humanName="Flight Mode 3" name="ArduCopter:FLTMODE3" documentation="Flight mode when Channel 5 pwm is &gt;1360, &lt;= 1490" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="8">Position</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">ToyA</value>
<value code="12">ToyM</value>
</values>
</param>
<param humanName="Flight Mode 4" name="ArduCopter:FLTMODE4" documentation="Flight mode when Channel 5 pwm is &gt;1490, &lt;= 1620" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="8">Position</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">ToyA</value>
<value code="12">ToyM</value>
</values>
</param>
<param humanName="Flight Mode 5" name="ArduCopter:FLTMODE5" documentation="Flight mode when Channel 5 pwm is &gt;1620, &lt;= 1749" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="8">Position</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">ToyA</value>
<value code="12">ToyM</value>
</values>
</param>
<param humanName="Flight Mode 6" name="ArduCopter:FLTMODE6" documentation="Flight mode when Channel 5 pwm is &gt;=1750" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="8">Position</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">ToyA</value>
<value code="12">ToyM</value>
</values>
</param>
<param humanName="Simple mode bitmask" name="ArduCopter:SIMPLE" documentation="Bitmask which holds which flight modes use simple heading mode (eg bit 0 = 1 means Flight Mode 0 uses simple mode)" user="Advanced">
</param>
<param humanName="Log bitmask" name="ArduCopter:LOG_BITMASK" documentation="2 byte bitmap of log types to enable" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="830">Default</value>
<value code="958">Default+IMU</value>
<value code="1854">Default+Motors</value>
<value code="17214">Default+INav</value>
</values>
</param>
<param humanName="Toy Yaw Rate" name="ArduCopter:TOY_RATE" documentation="Controls yaw rate in Toy mode.  Higher values will cause a slower yaw rate.  Do not set to zero!" user="Advanced">
<field name="Range">1 10</field>
</param>
<param humanName="ESC Calibration" name="ArduCopter:ESC" documentation="Controls whether ArduCopter will enter ESC calibration on the next restart.  Do not adjust this parameter manually." user="Advanced">
<values>
<value code="0">Normal Start-up</value>
<value code="1">Start-up in ESC Calibration mode</value>
</values>
</param>
<param humanName="Channel 6 Tuning" name="ArduCopter:TUNE" documentation="Controls which parameters (normally PID gains) are being tuned with transmitter's channel 6 knob" user="Standard">
<values>
<value code="0">CH6_NONE</value>
<value code="1">CH6_STABILIZE_KP</value>
<value code="2">CH6_STABILIZE_KI</value>
<value code="3">CH6_YAW_KP</value>
<value code="4">CH6_RATE_KP</value>
<value code="5">CH6_RATE_KI</value>
<value code="6">CH6_YAW_RATE_KP</value>
<value code="7">CH6_THROTTLE_KP</value>
<value code="9">CH6_RELAY</value>
<value code="10">CH6_WP_SPEED</value>
<value code="12">CH6_LOITER_KP</value>
<value code="13">CH6_HELI_EXTERNAL_GYRO</value>
<value code="14">CH6_THR_HOLD_KP</value>
<value code="17">CH6_OPTFLOW_KP</value>
<value code="18">CH6_OPTFLOW_KI</value>
<value code="19">CH6_OPTFLOW_KD</value>
<value code="21">CH6_RATE_KD</value>
<value code="22">CH6_LOITER_RATE_KP</value>
<value code="23">CH6_LOITER_RATE_KD</value>
<value code="24">CH6_YAW_KI</value>
<value code="25">CH6_ACRO_KP</value>
<value code="26">CH6_YAW_RATE_KD</value>
<value code="27">CH6_LOITER_KI</value>
<value code="28">CH6_LOITER_RATE_KI</value>
<value code="29">CH6_STABILIZE_KD</value>
<value code="30">CH6_AHRS_YAW_KP</value>
<value code="31">CH6_AHRS_KP</value>
<value code="32">CH6_INAV_TC</value>
<value code="33">CH6_THROTTLE_KI</value>
<value code="34">CH6_THR_ACCEL_KP</value>
<value code="35">CH6_THR_ACCEL_KI</value>
<value code="36">CH6_THR_ACCEL_KD</value>
<value code="38">CH6_DECLINATION</value>
<value code="39">CH6_CIRCLE_RATE</value>
</values>
</param>
<param humanName="Tuning minimum" name="ArduCopter:TUNE_LOW" documentation="The minimum value that will be applied to the parameter currently being tuned with the transmitter's channel 6 knob" user="Standard">
<field name="Range">0 32767</field>
</param>
<param humanName="Tuning maximum" name="ArduCopter:TUNE_HIGH" documentation="The maximum value that will be applied to the parameter currently being tuned with the transmitter's channel 6 knob" user="Standard">
<field name="Range">0 32767</field>
</param>
<param humanName="Frame Orientation (+, X or V)" name="ArduCopter:FRAME" documentation="Controls motor mixing for multicopters.  Not used for Tri or Traditional Helicopters." user="Standard">
<values>
<value code="0">Plus</value>
<value code=" 1">X</value>
<value code=" 2">V</value>
<value code=" 3">H</value>
</values>
</param>
<param humanName="Channel 7 option" name="ArduCopter:CH7_OPT" documentation="Select which function if performed when CH7 is above 1800 pwm" user="Standard">
<values>
<value code="0">Do Nothing</value>
<value code=" 2">Flip</value>
<value code=" 3">Simple Mode</value>
<value code=" 4">RTL</value>
<value code=" 5">Save Trim</value>
<value code=" 7">Save WP</value>
<value code=" 8">Multi Mode</value>
<value code=" 9">Camera Trigger</value>
<value code=" 10">Sonar</value>
<value code=" 11">Fence</value>
<value code=" 12">ResetToArmedYaw</value>
</values>
</param>
<param humanName="Channel 8 option" name="ArduCopter:CH8_OPT" documentation="Select which function if performed when CH8 is above 1800 pwm" user="Standard">
<values>
<value code="0">Do Nothing</value>
<value code=" 2">Flip</value>
<value code=" 3">Simple Mode</value>
<value code=" 4">RTL</value>
<value code=" 5">Save Trim</value>
<value code=" 7">Save WP</value>
<value code=" 8">Multi Mode</value>
<value code=" 9">Camera Trigger</value>
<value code=" 10">Sonar</value>
<value code=" 11">Fence</value>
<value code=" 12">ResetToArmedYaw</value>
</values>
</param>
<param humanName="Arming check" name="ArduCopter:ARMING_CHECK" documentation="Allows enabling or disabling of pre-arming checks of receiver, accelerometer, barometer and compass" user="Standard">
<values>
<value code="0">Disabled</value>
<value code=" 1">Enabled</value>
</values>
</param>
<param humanName="Rate Pitch Feed Forward" name="ArduCopter:RATE_PIT_FF" documentation="Rate Pitch Feed Forward (for TradHeli Only)" user="Standard">
<field name="Range">0 10</field>
</param>
<param humanName="Rate Roll Feed Forward" name="ArduCopter:RATE_RLL_FF" documentation="Rate Roll Feed Forward (for TradHeli Only)" user="Standard">
<field name="Range">0 10</field>
</param>
<param humanName="Rate Yaw Feed Forward" name="ArduCopter:RATE_YAW_FF" documentation="Rate Yaw Feed Forward (for TradHeli Only)" user="Standard">
<field name="Range">0 10</field>
</param>
<param humanName="ESC Update Speed" name="ArduCopter:RC_SPEED" documentation="This is the speed in Hertz that your ESCs will receive updates" user="Advanced">
<field name="Range">50 490</field>
<field name="Increment">1</field>
<field name="Units">Hz</field>
</param>
<param humanName="Acro P gain" name="ArduCopter:ACRO_P" documentation="Used to convert pilot roll, pitch and yaw input into a dssired rate of rotation in ACRO mode.  Higher values mean faster rate of rotation." user="Standard">
<field name="Range">1 10</field>
</param>
<param humanName="Acro Axis" name="ArduCopter:AXIS_ENABLE" documentation="Used to control whether acro mode actively maintains the current angle when control sticks are released (Enabled = maintains current angle)" user="Standard">
<values>
<value code="0">Disabled</value>
<value code=" 1">Enabled</value>
</values>
</param>
<param humanName="Acro Balance Roll" name="ArduCopter:ACRO_BAL_ROLL" documentation="rate at which roll angle returns to level in acro mode" user="Advanced">
<field name="Range">0 300</field>
<field name="Increment">1</field>
</param>
<param humanName="Acro Balance Pitch" name="ArduCopter:ACRO_BAL_PITCH" documentation="rate at which pitch angle returns to level in acro mode" user="Advanced">
<field name="Range">0 300</field>
<field name="Increment">1</field>
</param>
<param humanName="Acro Trainer Enabled" name="ArduCopter:ACRO_TRAINER" documentation="Set to 1 (Enabled) to make roll return to within 45 degrees of level automatically" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Copter LED Mode" name="ArduCopter:LED_MODE" documentation="bitmap to control the copter led mode" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enable</value>
<value code="2">GPS On</value>
<value code="4">Aux</value>
<value code="8">Buzzer</value>
<value code="16">Oscillate</value>
<value code="32">Nav Blink</value>
<value code="64">GPS Nav Blink</value>
</values>
</param>
<param humanName="Roll axis rate controller P gain" name="ArduCopter:RATE_RLL_P" documentation="Roll axis rate controller P gain.  Converts the difference between desired roll rate and actual roll rate into a motor speed output" user="Standard">
<field name="Range">0.08 0.20</field>
</param>
<param humanName="Roll axis rate controller I gain" name="ArduCopter:RATE_RLL_I" documentation="Roll axis rate controller I gain.  Corrects long-term difference in desired roll rate vs actual roll rate" user="Standard">
<field name="Range">0.01 0.5</field>
</param>
<param humanName="Roll axis rate controller I gain maximum" name="ArduCopter:RATE_RLL_IMAX" documentation="Roll axis rate controller I gain maximum.  Constrains the maximum motor output that the I gain will output" user="Standard">
<field name="Range">0 500</field>
<field name="Units">PWM</field>
</param>
<param humanName="Roll axis rate controller D gain" name="ArduCopter:RATE_RLL_D" documentation="Roll axis rate controller D gain.  Compensates for short-term change in desired roll rate vs actual roll rate" user="Standard">
<field name="Range">0.001 0.008</field>
</param>
<param humanName="Pitch axis rate controller P gain" name="ArduCopter:RATE_PIT_P" documentation="Pitch axis rate controller P gain.  Converts the difference between desired pitch rate and actual pitch rate into a motor speed output" user="Standard">
<field name="Range">0.08 0.20</field>
</param>
<param humanName="Pitch axis rate controller I gain" name="ArduCopter:RATE_PIT_I" documentation="Pitch axis rate controller I gain.  Corrects long-term difference in desired pitch rate vs actual pitch rate" user="Standard">
<field name="Range">0.01 0.5</field>
</param>
<param humanName="Pitch axis rate controller I gain maximum" name="ArduCopter:RATE_PIT_IMAX" documentation="Pitch axis rate controller I gain maximum.  Constrains the maximum motor output that the I gain will output" user="Standard">
<field name="Range">0 500</field>
<field name="Units">PWM</field>
</param>
<param humanName="Pitch axis rate controller D gain" name="ArduCopter:RATE_PIT_D" documentation="Pitch axis rate controller D gain.  Compensates for short-term change in desired pitch rate vs actual pitch rate" user="Standard">
<field name="Range">0.001 0.008</field>
</param>
<param humanName="Yaw axis rate controller P gain" name="ArduCopter:RATE_YAW_P" documentation="Yaw axis rate controller P gain.  Converts the difference between desired yaw rate and actual yaw rate into a motor speed output" user="Standard">
<field name="Range">0.150 0.250</field>
</param>
<param humanName="Yaw axis rate controller I gain" name="ArduCopter:RATE_YAW_I" documentation="Yaw axis rate controller I gain.  Corrects long-term difference in desired yaw rate vs actual yaw rate" user="Standard">
<field name="Range">0.010 0.020</field>
</param>
<param humanName="Yaw axis rate controller I gain maximum" name="ArduCopter:RATE_YAW_IMAX" documentation="Yaw axis rate controller I gain maximum.  Constrains the maximum motor output that the I gain will output" user="Standard">
<field name="Range">0 500</field>
<field name="Units">PWM</field>
</param>
<param humanName="Yaw axis rate controller D gain" name="ArduCopter:RATE_YAW_D" documentation="Yaw axis rate controller D gain.  Compensates for short-term change in desired yaw rate vs actual yaw rate" user="Standard">
<field name="Range">0.000 0.001</field>
</param>
<param humanName="Loiter latitude rate controller P gain" name="ArduCopter:LOITER_LAT_P" documentation="Loiter latitude rate controller P gain.  Converts the difference between desired speed and actual speed into a lean angle in the latitude direction" user="Standard">
<field name="Range">2.000 6.000</field>
</param>
<param humanName="Loiter latitude rate controller I gain" name="ArduCopter:LOITER_LAT_I" documentation="Loiter latitude rate controller I gain.  Corrects long-term difference in desired speed and actual speed in the latitude direction" user="Standard">
<field name="Range">0.020 0.060</field>
</param>
<param humanName="Loiter rate controller I gain maximum" name="ArduCopter:LOITER_LAT_IMAX" documentation="Loiter rate controller I gain maximum.  Constrains the lean angle that the I gain will output" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Loiter latitude rate controller D gain" name="ArduCopter:LOITER_LAT_D" documentation="Loiter latitude rate controller D gain.  Compensates for short-term change in desired speed vs actual speed" user="Standard">
<field name="Range">0.200 0.600</field>
</param>
<param humanName="Loiter longitude rate controller P gain" name="ArduCopter:LOITER_LON_P" documentation="Loiter longitude rate controller P gain.  Converts the difference between desired speed and actual speed into a lean angle in the longitude direction" user="Standard">
<field name="Range">2.000 6.000</field>
</param>
<param humanName="Loiter longitude rate controller I gain" name="ArduCopter:LOITER_LON_I" documentation="Loiter longitude rate controller I gain.  Corrects long-term difference in desired speed and actual speed in the longitude direction" user="Standard">
<field name="Range">0.020 0.060</field>
</param>
<param humanName="Loiter longitude rate controller I gain maximum" name="ArduCopter:LOITER_LON_IMAX" documentation="Loiter longitude rate controller I gain maximum.  Constrains the lean angle that the I gain will output" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Loiter longituderate controller D gain" name="ArduCopter:LOITER_LON_D" documentation="Loiter longitude rate controller D gain.  Compensates for short-term change in desired speed vs actual speed" user="Standard">
<field name="Range">0.200 0.600</field>
</param>
<param humanName="Throttle rate controller P gain" name="ArduCopter:THR_RATE_P" documentation="Throttle rate controller P gain.  Converts the difference between desired vertical speed and actual speed into a desired acceleration that is passed to the throttle acceleration controller" user="Standard">
<field name="Range">1.000 8.000</field>
</param>
<param humanName="Throttle rate controller I gain" name="ArduCopter:THR_RATE_I" documentation="Throttle rate controller I gain.  Corrects long-term difference in desired vertical speed and actual speed" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Throttle rate controller I gain maximum" name="ArduCopter:THR_RATE_IMAX" documentation="Throttle rate controller I gain maximum.  Constrains the desired acceleration that the I gain will generate" user="Standard">
<field name="Range">0 500</field>
<field name="Units">cm/s/s</field>
</param>
<param humanName="Throttle rate controller D gain" name="ArduCopter:THR_RATE_D" documentation="Throttle rate controller D gain.  Compensates for short-term change in desired vertical speed vs actual speed" user="Standard">
<field name="Range">0.000 0.400</field>
</param>
<param humanName="Throttle acceleration controller P gain" name="ArduCopter:THR_ACCEL_P" documentation="Throttle acceleration controller P gain.  Converts the difference between desired vertical acceleration and actual acceleration into a motor output" user="Standard">
<field name="Range">0.500 1.500</field>
</param>
<param humanName="Throttle acceleration controller I gain" name="ArduCopter:THR_ACCEL_I" documentation="Throttle acceleration controller I gain.  Corrects long-term difference in desired vertical acceleration and actual acceleration" user="Standard">
<field name="Range">0.000 3.000</field>
</param>
<param humanName="Throttle acceleration controller I gain maximum" name="ArduCopter:THR_ACCEL_IMAX" documentation="Throttle acceleration controller I gain maximum.  Constrains the maximum pwm that the I term will generate" user="Standard">
<field name="Range">0 500</field>
<field name="Units">PWM</field>
</param>
<param humanName="Throttle acceleration controller D gain" name="ArduCopter:THR_ACCEL_D" documentation="Throttle acceleration controller D gain.  Compensates for short-term change in desired vertical acceleration vs actual acceleration" user="Standard">
<field name="Range">0.000 0.400</field>
</param>
<param humanName="Optical Flow based loiter controller roll axis P gain" name="ArduCopter:OF_RLL_P" documentation="Optical Flow based loiter controller roll axis P gain.  Converts the position error from the target point to a roll angle" user="Standard">
<field name="Range">2.000 3.000</field>
</param>
<param humanName="Optical Flow based loiter controller roll axis I gain" name="ArduCopter:OF_RLL_I" documentation="Optical Flow based loiter controller roll axis I gain.  Corrects long-term position error by more persistently rolling left or right" user="Standard">
<field name="Range">0.250 0.750</field>
</param>
<param humanName="Optical Flow based loiter controller roll axis I gain maximum" name="ArduCopter:OF_RLL_IMAX" documentation="Optical Flow based loiter controller roll axis I gain maximum.  Constrains the maximum roll angle that the I term will generate" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Optical Flow based loiter controller roll axis D gain" name="ArduCopter:OF_RLL_D" documentation="Optical Flow based loiter controller roll axis D gain.  Compensates for short-term change in speed in the roll direction" user="Standard">
<field name="Range">0.100 0.140</field>
</param>
<param humanName="Optical Flow based loiter controller pitch axis P gain" name="ArduCopter:OF_PIT_P" documentation="Optical Flow based loiter controller pitch axis P gain.  Converts the position error from the target point to a pitch angle" user="Standard">
<field name="Range">2.000 3.000</field>
</param>
<param humanName="Optical Flow based loiter controller pitch axis I gain" name="ArduCopter:OF_PIT_I" documentation="Optical Flow based loiter controller pitch axis I gain.  Corrects long-term position error by more persistently pitching left or right" user="Standard">
<field name="Range">0.250 0.750</field>
</param>
<param humanName="Optical Flow based loiter controller pitch axis I gain maximum" name="ArduCopter:OF_PIT_IMAX" documentation="Optical Flow based loiter controller pitch axis I gain maximum.  Constrains the maximum pitch angle that the I term will generate" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Optical Flow based loiter controller pitch axis D gain" name="ArduCopter:OF_PIT_D" documentation="Optical Flow based loiter controller pitch axis D gain.  Compensates for short-term change in speed in the pitch direction" user="Standard">
<field name="Range">0.100 0.140</field>
</param>
<param humanName="Roll axis stabilize controller P gain" name="ArduCopter:STB_RLL_P" documentation="Roll axis stabilize (i.e. angle) controller P gain.  Converts the error between the desired roll angle and actual angle to a desired roll rate" user="Standard">
<field name="Range">3.000 6.000</field>
</param>
<param humanName="Roll axis stabilize controller I gain" name="ArduCopter:STB_RLL_I" documentation="Roll axis stabilize (i.e. angle) controller I gain.  Corrects for longer-term difference in desired roll angle and actual angle" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Roll axis stabilize controller I gain maximum" name="ArduCopter:STB_RLL_IMAX" documentation="Roll axis stabilize (i.e. angle) controller I gain maximum.  Constrains the maximum roll rate that the I term will generate" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees/Sec</field>
</param>
<param humanName="Pitch axis stabilize controller P gain" name="ArduCopter:STB_PIT_P" documentation="Pitch axis stabilize (i.e. angle) controller P gain.  Converts the error between the desired pitch angle and actual angle to a desired pitch rate" user="Standard">
<field name="Range">3.000 6.000</field>
</param>
<param humanName="Pitch axis stabilize controller I gain" name="ArduCopter:STB_PIT_I" documentation="Pitch axis stabilize (i.e. angle) controller I gain.  Corrects for longer-term difference in desired pitch angle and actual angle" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Pitch axis stabilize controller I gain maximum" name="ArduCopter:STB_PIT_IMAX" documentation="Pitch axis stabilize (i.e. angle) controller I gain maximum.  Constrains the maximum pitch rate that the I term will generate" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees/Sec</field>
</param>
<param humanName="Yaw axis stabilize controller P gain" name="ArduCopter:STB_YAW_P" documentation="Yaw axis stabilize (i.e. angle) controller P gain.  Converts the error between the desired yaw angle and actual angle to a desired yaw rate" user="Standard">
<field name="Range">3.000 6.000</field>
</param>
<param humanName="Yaw axis stabilize controller I gain" name="ArduCopter:STB_YAW_I" documentation="Yaw axis stabilize (i.e. angle) controller I gain.  Corrects for longer-term difference in desired yaw angle and actual angle" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Yaw axis stabilize controller I gain maximum" name="ArduCopter:STB_YAW_IMAX" documentation="Yaw axis stabilize (i.e. angle) controller I gain maximum.  Constrains the maximum yaw rate that the I term will generate" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees/Sec</field>
</param>
<param humanName="Altitude controller P gain" name="ArduCopter:THR_ALT_P" documentation="Altitude controller P gain.  Converts the difference between the desired altitude and actual altitude into a climb or descent rate which is passed to the throttle rate controller" user="Standard">
<field name="Range">1.000 3.000</field>
</param>
<param humanName="Altitude controller I gain" name="ArduCopter:THR_ALT_I" documentation="Altitude controller I gain.  Corrects for longer-term difference in desired altitude and actual altitude" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Altitude controller I gain maximum" name="ArduCopter:THR_ALT_IMAX" documentation="Altitude controller I gain maximum.  Constrains the maximum climb rate rate that the I term will generate" user="Standard">
<field name="Range">0 500</field>
<field name="Units">cm/s</field>
</param>
<param humanName="Loiter latitude position controller P gain" name="ArduCopter:HLD_LAT_P" documentation="Loiter latitude position controller P gain.  Converts the distance (in the latitude direction) to the target location into a desired speed which is then passed to the loiter latitude rate controller" user="Standard">
<field name="Range">0.100 0.300</field>
</param>
<param humanName="Loiter latitude position controller I gain" name="ArduCopter:HLD_LAT_I" documentation="Loiter latitude position controller I gain.  Corrects for longer-term distance (in latitude) to the target location" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Loiter latitude position controller I gain maximum" name="ArduCopter:HLD_LAT_IMAX" documentation="Loiter latitude position controller I gain maximum.  Constrains the maximum desired speed that the I term will generate" user="Standard">
<field name="Range">0 3000</field>
<field name="Units">cm/s</field>
</param>
<param humanName="Loiter longitude position controller P gain" name="ArduCopter:HLD_LON_P" documentation="Loiter longitude position controller P gain.  Converts the distance (in the longitude direction) to the target location into a desired speed which is then passed to the loiter longitude rate controller" user="Standard">
<field name="Range">0.100 0.300</field>
</param>
<param humanName="Loiter longitude position controller I gain" name="ArduCopter:HLD_LON_I" documentation="Loiter longitude position controller I gain.  Corrects for longer-term distance (in longitude direction) to the target location" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Loiter longitudeposition controller I gain maximum" name="ArduCopter:HLD_LON_IMAX" documentation="Loiter  longitudeposition controller I gain maximum.  Constrains the maximum desired speed that the I term will generate" user="Standard">
<field name="Range">0 3000</field>
<field name="Units">cm/s</field>
</param>
</parameters>
<parameters name="APMrover2">
<param humanName="Log bitmask" name="APMrover2:LOG_BITMASK" documentation="Two byte bitmap of log types to enable in dataflash" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="3950">Default</value>
<value code="4078">Default+IMU</value>
</values>
</param>
<param humanName="Initial driving mode" name="APMrover2:INITIAL_MODE" documentation="This selects the mode to start in on boot. This is useful for when you want to start in AUTO mode on boot without a receiver. Usuallly used in combination with when AUTO_TRIGGER_PIN or AUTO_KICKSTART." user="Advanced">
<values>
<value code="0">MANUAL</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">AUTO</value>
<value code="11">RTL</value>
<value code="15">GUIDED</value>
</values>
</param>
<param humanName="Receiver RSSI sensing pin" name="APMrover2:RSSI_PIN" documentation="This selects an analog pin for the receiver RSSI voltage. It assumes the voltage is 5V for max rssi, 0V for minimum" user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 0">A0</value>
<value code=" 1">A1</value>
<value code=" 13">A13</value>
</values>
</param>
<param humanName="Battery Voltage sensing pin" name="APMrover2:BATT_VOLT_PIN" documentation="Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13." user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 0">A0</value>
<value code=" 1">A1</value>
<value code=" 13">A13</value>
</values>
</param>
<param humanName="Battery Current sensing pin" name="APMrover2:BATT_CURR_PIN" documentation="Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13." user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 1">A1</value>
<value code=" 2">A2</value>
<value code=" 12">A12</value>
</values>
</param>
<param humanName="MAVLink system ID" name="APMrover2:SYSID_THIS_MAV" documentation="ID used in MAVLink protocol to identify this vehicle" user="Advanced">
</param>
<param humanName="MAVLink ground station ID" name="APMrover2:SYSID_MYGCS" documentation="ID used in MAVLink protocol to identify the controlling ground station" user="Advanced">
</param>
<param humanName="USB Console Baud Rate" name="APMrover2:SERIAL0_BAUD" documentation="The baud rate used on the first serial port" user="Standard">
<values>
<value code="1">1200</value>
<value code="2">2400</value>
<value code="4">4800</value>
<value code="9">9600</value>
<value code="19">19200</value>
<value code="38">38400</value>
<value code="57">57600</value>
<value code="111">111100</value>
<value code="115">115200</value>
</values>
</param>
<param humanName="Telemetry Baud Rate" name="APMrover2:SERIAL3_BAUD" documentation="The baud rate used on the telemetry port" user="Standard">
<values>
<value code="1">1200</value>
<value code="2">2400</value>
<value code="4">4800</value>
<value code="9">9600</value>
<value code="19">19200</value>
<value code="38">38400</value>
<value code="57">57600</value>
<value code="111">111100</value>
<value code="115">115200</value>
</values>
</param>
<param humanName="Telemetry startup delay " name="APMrover2:TELEM_DELAY" documentation="The amount of time (in seconds) to delay radio telemetry to prevent an Xbee bricking on power up" user="Standard">
<field name="Range">0 10</field>
<field name="Increment">1</field>
<field name="Units">seconds</field>
</param>
<param humanName="Magnetometer (compass) enabled" name="APMrover2:MAG_ENABLED" documentation="This should be set to 1 if a compass is installed" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Battery monitoring" name="APMrover2:BATT_MONITOR" documentation="Controls enabling monitoring of the battery's voltage and current" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="3">Voltage Only</value>
<value code="4">Voltage and Current</value>
</values>
</param>
<param humanName="Voltage Divider" name="APMrover2:VOLT_DIVIDER" documentation="Used to convert the voltage of the voltage sensing pin (BATT_VOLT_PIN) to the actual battery's voltage (pin voltage * INPUT_VOLTS/1024 * VOLT_DIVIDER)" user="Advanced">
</param>
<param humanName="Current Amps per volt" name="APMrover2:AMP_PER_VOLT" documentation="Used to convert the voltage on the current sensing pin (BATT_CURR_PIN) to the actual current being consumed in amps (curr pin voltage * INPUT_VOLTS/1024 * AMP_PER_VOLT )" user="Advanced">
</param>
<param humanName="Battery Capacity" name="APMrover2:BATT_CAPACITY" documentation="Battery capacity in milliamp-hours (mAh)" user="Standard">
<field name="Units">mAh</field>
</param>
<param humanName="Crosstrack Gain" name="APMrover2:XTRK_GAIN_SC" documentation="This controls how hard the Rover tries to follow the lines between waypoints, as opposed to driving directly to the next waypoint. The value is the scale between distance off the line and angle to meet the line (in Degrees * 100)" user="Standard">
<field name="Range">0 2000</field>
<field name="Increment">1</field>
</param>
<param humanName="Crosstrack Entry Angle" name="APMrover2:XTRK_ANGLE_CD" documentation="Maximum angle used to correct for track following." user="Standard">
<field name="Range">0 9000</field>
<field name="Increment">1</field>
<field name="Units">centi-Degrees</field>
</param>
<param humanName="Auto mode trigger pin" name="APMrover2:AUTO_TRIGGER_PIN" documentation="pin number to use to trigger start of auto mode. If set to -1 then don't use a trigger, otherwise this is a pin number which if held low in auto mode will start the motor, and otherwise will force the throttle off. This can be used in combination with INITIAL_MODE to give a 'press button to start' rover with no receiver." user="standard">
<values>
<value code="-1">Disabled</value>
<value code="0-9">TiggerPin</value>
</values>
</param>
<param humanName="Auto mode trigger kickstart acceleration" name="APMrover2:AUTO_KICKSTART" documentation="X acceleration in meters/second/second to use to trigger the motor start in auto mode. If set to zero then auto throttle starts immediately when the mode switch happens, otherwise the rover waits for the X acceleration to go above this value before it will start the motor" user="standard">
<field name="Range">0 20</field>
<field name="Increment">0.1</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Target cruise speed in auto modes" name="APMrover2:CRUISE_SPEED" documentation="The target speed in auto missions." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">0.1</field>
<field name="Units">m/s</field>
</param>
<param humanName="Target speed reduction while turning" name="APMrover2:SPEED_TURN_GAIN" documentation="The percentage to reduce the throttle while turning. If this is 100% then the target speed is not reduced while turning. If this is 50% then the target speed is reduced in proportion to the turn rate, with a reduction of 50% when the steering is maximally deflected." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">percent</field>
</param>
<param humanName="Distance to turn to start reducing speed" name="APMrover2:SPEED_TURN_DIST" documentation="The distance to the next turn at which the rover reduces its target speed by the SPEED_TURN_GAIN" user="Standard">
<field name="Range">0 100</field>
<field name="Increment">0.1</field>
<field name="Units">meters</field>
</param>
<param humanName="Channel 7 option" name="APMrover2:CH7_OPTION" documentation="What to do use channel 7 for" user="Standard">
<values>
<value code="0">Nothing</value>
<value code="1">LearnWaypoint</value>
</values>
</param>
<param humanName="Minimum Throttle" name="APMrover2:THR_MIN" documentation="The minimum throttle setting to which the autopilot will apply. This is mostly useful for rovers with internal combustion motors, to prevent the motor from cutting out in auto mode." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Maximum Throttle" name="APMrover2:THR_MAX" documentation="The maximum throttle setting to which the autopilot will apply. This can be used to prevent overheating a ESC or motor on an electric rover." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Base throttle percentage in auto" name="APMrover2:CRUISE_THROTTLE" documentation="The base throttle percentage to use in auto mode. The CRUISE_SPEED parameter controls the target speed, but the rover starts with the CRUISE_THROTTLE setting as the initial estimate for how much throttle is needed to achieve that speed. It then adjusts the throttle based on how fast the rover is actually going." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Throttle slew rate" name="APMrover2:THR_SLEWRATE" documentation="maximum percentage change in throttle per second. A setting of 10 means to not change the throttle by more than 10% of the full throttle range in one second. A value of zero means no limit." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Skid steering output" name="APMrover2:SKID_STEER_OUT" documentation="Set this to 1 for skid steering controlled rovers (tank track style). When enabled, servo1 is used for the left track control, servo3 is used for right track control" user="Standard">
<values>
<value code="0">Disabled</value>
<value code=" 1">SkidSteeringOutput</value>
</values>
</param>
<param humanName="Skid steering input" name="APMrover2:SKID_STEER_IN" documentation="Set this to 1 for skid steering input rovers (tank track style in RC controller). When enabled, servo1 is used for the left track control, servo3 is used for right track control" user="Standard">
<values>
<value code="0">Disabled</value>
<value code=" 1">SkidSteeringInput</value>
</values>
</param>
<param humanName="Failsafe Action" name="APMrover2:FS_ACTION" documentation="What to do on a failsafe event" user="Standard">
<values>
<value code="0">Nothing</value>
<value code="1">RTL</value>
<value code="2">HOLD</value>
</values>
</param>
<param humanName="Failsafe timeout" name="APMrover2:FS_TIMEOUT" documentation="How long a failsafe event need to happen for before we trigger the failsafe action" user="Standard">
<field name="Units">seconds</field>
</param>
<param humanName="Throttle Failsafe Enable" name="APMrover2:FS_THR_ENABLE" documentation="The throttle failsafe allows you to configure a software failsafe activated by a setting on the throttle input channel to a low value. This can be used to detect the RC transmitter going out of range. Failsafe will be triggered when the throttle channel goes below the FS_THR_VALUE for FS_TIMEOUT seconds." user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Throttle Failsafe Value" name="APMrover2:FS_THR_VALUE" documentation="The PWM level on channel 3 below which throttle sailsafe triggers." user="Standard">
</param>
<param humanName="GCS failsafe enable" name="APMrover2:FS_GCS_ENABLE" documentation="Enable ground control station telemetry failsafe. When enabled the Rover will execute the FS_ACTION when it fails to receive MAVLink heartbeat packets for FS_TIMEOUT seconds." user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Sonar trigger distance" name="APMrover2:SONAR_TRIGGER_CM" documentation="The distance from an obstacle in centimeters at which the sonar triggers a turn to avoid the obstacle" user="Standard">
<field name="Range">0 1000</field>
<field name="Increment">1</field>
<field name="Units">centimeters</field>
</param>
<param humanName="Sonar trigger angle" name="APMrover2:SONAR_TURN_ANGLE" documentation="The course deviation in degrees to apply while avoiding an obstacle detected with the sonar. A positive number means to turn right, and a negative angle means to turn left." user="Standard">
<field name="Range">-45 45</field>
<field name="Increment">1</field>
<field name="Units">centimeters</field>
</param>
<param humanName="Sonar turn time" name="APMrover2:SONAR_TURN_TIME" documentation="The amount of time in seconds to apply the SONAR_TURN_ANGLE after detecting an obstacle." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">0.1</field>
<field name="Units">seconds</field>
</param>
<param humanName="Sonar debounce count" name="APMrover2:SONAR_DEBOUNCE" documentation="The number of 50Hz sonar hits needed to trigger an obstacle avoidance event. If you get a lot of false sonar events then raise this number, but if you make it too large then it will cause lag in detecting obstacles, which could cause you go hit the obstacle." user="Standard">
<field name="Range">1 100</field>
<field name="Increment">1</field>
</param>
<param humanName="Mode channel" name="APMrover2:MODE_CH" documentation="RC Channel to use for driving mode control" user="Advanced">
</param>
<param humanName="Mode1" name="APMrover2:MODE1" documentation="Driving mode for switch position 1 (910 to 1230 and above 2049)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Mode2" name="APMrover2:MODE2" documentation="Driving mode for switch position 2 (1231 to 1360)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Mode3" name="APMrover2:MODE3" documentation="Driving mode for switch position 3 (1361 to 1490)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Mode4" name="APMrover2:MODE4" documentation="Driving mode for switch position 4 (1491 to 1620)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Mode5" name="APMrover2:MODE5" documentation="Driving mode for switch position 5 (1621 to 1749)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Mode6" name="APMrover2:MODE6" documentation="Driving mode for switch position 6 (1750 to 2049)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Waypoint radius" name="APMrover2:WP_RADIUS" documentation="The distance in meters from a waypoint when we consider the waypoint has been reached. This determines when the rover will turn along the next waypoint path." user="Standard">
<field name="Range">0 1000</field>
<field name="Increment">0.1</field>
<field name="Units">meters</field>
</param>
</parameters>
</vehicles><libraries><parameters name="GND_">
<param humanName="Absolute Pressure" name="GND_ABS_PRESS" documentation="calibrated ground pressure">
<field name="Increment">1</field>
</param>
<param humanName="ground temperature" name="GND_ABS_PRESS" documentation="calibrated ground temperature">
<field name="Increment">1</field>
</param>
</parameters>
<parameters name="CAM_">
<param humanName="Camera shutter (trigger) type" name="CAM_TRIGG_TYPE" documentation="how to trigger the camera to take a picture" user="Standard">
<values>
<value code="0">Servo</value>
<value code="1">Relay</value>
<value code="2">Servo and turn off throttle</value>
<value code="3">Servo when 3m from waypoint</value>
<value code="4">transistor</value>
</values>
</param>
<param humanName="Duration that shutter is held open" name="CAM_DURATION" documentation="How long the shutter will be held open in 10ths of a second (i.e. enter 10 for 1second, 50 for 5seconds)" user="Standard">
<field name="Range">0 50</field>
</param>
<param humanName="Servo ON PWM value" name="CAM_SERVO_ON" documentation="PWM value to move servo to when shutter is activated" user="Standard">
<field name="Range">1000 2000</field>
</param>
<param humanName="Servo OFF PWM value" name="CAM_SERVO_OFF" documentation="PWM value to move servo to when shutter is deactivated" user="Standard">
<field name="Range">1000 2000</field>
</param>
</parameters>
<parameters name="RC1_">
<param humanName="RC min PWM" name="RC1_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC1_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC1_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC1_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC1_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="RC2_">
<param humanName="RC min PWM" name="RC2_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC2_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC2_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC2_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC2_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="RC3_">
<param humanName="RC min PWM" name="RC3_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC3_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC3_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC3_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC3_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="RC4_">
<param humanName="RC min PWM" name="RC4_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC4_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC4_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC4_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC4_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="RC5_">
<param humanName="Servo out function" name="RC5_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
<param humanName="Servo out function" name="RC5_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC6_">
<param humanName="Servo out function" name="RC6_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
<param humanName="Servo out function" name="RC6_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC7_">
<param humanName="Servo out function" name="RC7_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
<param humanName="Servo out function" name="RC7_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC8_">
<param humanName="Servo out function" name="RC8_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
<param humanName="Servo out function" name="RC8_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC9_">
<param humanName="Servo out function" name="RC9_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
<param humanName="Servo out function" name="RC9_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC10_">
<param humanName="Servo out function" name="RC10_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
<param humanName="Servo out function" name="RC10_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC11_">
<param humanName="Servo out function" name="RC11_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
<param humanName="Servo out function" name="RC11_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC12_">
<param humanName="Servo out function" name="RC12_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
<param humanName="Servo out function" name="RC12_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="CTL_RLL_">
<param humanName="Roll rate gain" name="CTL_RLL_OMEGA" documentation="This is the gain from pitch angle error to demanded pitch rate. It controls the time constant from demanded to achieved pitch angle. For example if a time constant from demanded to achieved pitch of 0.5 sec was required, this gain would be set to 1/0.5 = 2.0. A value of 1.0 is a good default and will work with nearly all models. Advanced users may want to increase this to obtain a faster response." user="Advanced">
<field name="Range">0.8 2.5</field>
<field name="Increment">0.1</field>
</param>
<param humanName="Roll demand gain" name="CTL_RLL_K_P" documentation="This is the gain from demanded roll rate to demanded aileron. Provided CTL_RLL_OMEGA is set to 1.0, then this gain works the same way as the P term in the old PID (RLL2SRV_P) and can be set to the same value." user="User">
<field name="Range">0.1 2</field>
<field name="Increment">0.1</field>
</param>
<param humanName="Roll derivative gain" name="CTL_RLL_K_D" documentation="This is the gain from pitch rate error to demanded elevator. This adjusts the damping of the roll control loop. It has the same effect as the D term in the old PID (RLL2SRV_D) but without the large spikes in servo demands. This will be set to 0 as a default. This should be increased in 0.01 increments as too high a value can lead to high frequency roll oscillation." user="User">
<field name="Range">0 0.1</field>
<field name="Increment">0.01</field>
</param>
<param humanName="Roll integration gain" name="CTL_RLL_K_I" documentation="This is the gain for integration of the roll rate error. It has essentially the same effect as the I term in the old PID (RLL2SRV_I). This can be set to 0 as a default, however users can increment this to enable the controller trim out any roll trim offset." user="User">
<field name="Range">0 0.2</field>
<field name="Increment">0.01</field>
</param>
<param humanName="Roll max rate" name="CTL_RLL_RMAX" documentation="This sets the maximum roll rate that the controller will demand (degrees/sec). Setting it to zero disables the limit. If this value is set too low, then the roll can't keep up with the navigation demands and the plane will start weaving. If it is set too high (or disabled by setting to zero) then ailerons will get large inputs at the start of turns. A limit of 60 degrees/sec is a good default." user="User">
<field name="Range">0 180</field>
<field name="Increment">1</field>
<field name="Units">degrees/second</field>
</param>
</parameters>
<parameters name="CTL_PTCH_">
<param humanName="Pitch to rate gain" name="CTL_PTCH_OMEGA" documentation="This is the gain from pitch angle error to demanded pitch rate. It controls the time constant from demanded to achieved pitch angle. For example if a time constant from demanded to achieved pitch of 0.5 sec was required, this gain would be set to 1/0.5 = 2.0. A value of 1.0 is a good default and will work with nearly all models. Advanced users may want to increase this to obtain a faster response." user="Advanced">
<field name="Range">0.8 2.5</field>
<field name="Increment">0.1</field>
</param>
<param humanName="Pitch to elevator gain" name="CTL_PTCH_K_P" documentation="This is the gain from demanded pitch rate to demanded elevator. Provided CTL_PTCH_OMEGA is set to 1.0, then this gain works the same way as the P term in the old PID (PTCH2SRV_P) and can be set to the same value." user="User">
<field name="Range">0.1 2</field>
<field name="Increment">0.1</field>
</param>
<param humanName="Pitch damping gain" name="CTL_PTCH_K_D" documentation="This is the gain from pitch rate error to demanded elevator. This adjusts the damping of the pitch control loop. It has the same effect as the D term in the old PID (PTCH2SRV_D) but without the large spikes in servo demands. This will be set to 0 as a default. Some airframes such as flying wings that have poor pitch damping can benefit from a small value of up to 0.1 on this gain term. This should be increased in 0.01 increments as to high a value can lead to a high frequency pitch oscillation that could overstress the airframe." user="User">
<field name="Range">0 0.1</field>
<field name="Increment">0.01</field>
</param>
<param humanName="Pitch integrator gain" name="CTL_PTCH_K_I" documentation="This is the gain for integration of the pitch rate error. It has essentially the same effect as the I term in the old PID (PTCH2SRV_I). This can be set to 0 as a default, however users can increment this to make the pitch angle tracking more accurate." user="User">
<field name="Range">0 0.3</field>
<field name="Increment">0.01</field>
</param>
<param humanName="Pitch up max rate" name="CTL_PTCH_RMAX_U" documentation="This sets the maximum nose up pitch rate that the controller will demand (degrees/sec). Setting it to zero disables the limit." user="User">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">degrees/second</field>
</param>
<param humanName="Pitch down max rate" name="CTL_PTCH_RMAX_D" documentation="This sets the maximum nose down pitch rate that the controller will demand (degrees/sec). Setting it to zero disables the limit." user="User">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">degrees/second</field>
</param>
<param humanName="Roll compensation" name="CTL_PTCH_K_RLL" documentation="This is the gain term that is applied to the pitch rate offset calculated as required to keep the nose level during turns. The default value is 1 which will work for all models. Advanced users can use it to correct for height variation in turns. If height is lost initially in turns this can be increased in small increments of 0.05 to compensate. If height is gained initially in turns then it can be decreased." user="User">
<field name="Range">0.7 1.5</field>
<field name="Increment">0.05</field>
</param>
</parameters>
<parameters name="CTL_YAW_">
<param humanName="Sideslip control gain" name="CTL_YAW_K_A" documentation="This is the gain from measured lateral acceleration to demanded yaw rate. It should be set to zero unless active control of sideslip is desired. This will only work effectively if there is enough fuselage side area to generate a measureable lateral acceleration when the model sideslips. Flying wings and most gliders cannot use this term. This term should only be adjusted after the basic yaw damper gain K_D is tuned and the K_I integrator gain has been set. Set this gain to zero if only yaw damping is required.">
<field name="Range">0 4</field>
<field name="Increment">0.25</field>
</param>
<param humanName="Sidelsip control integrator" name="CTL_YAW_K_I" documentation="This is the integral gain from lateral acceleration error. This gain should only be non-zero if active control over sideslip is desired. If active control over sideslip is required then this can be set to 1.0 as a first try.">
<field name="Range">0 2</field>
<field name="Increment">0.25</field>
</param>
<param humanName="Yaw damping" name="CTL_YAW_K_D" documentation="This is the gain from yaw rate to rudder. It acts as a damper on yaw motion. If a basic yaw damper is required, this gain term can be incremented, whilst leaving the K_A and K_I gains at zero.">
<field name="Range">0 2</field>
<field name="Increment">0.25</field>
</param>
<param humanName="Yaw coordination gain" name="CTL_YAW_K_RLL" documentation="This is the gain term that is applied to the yaw rate offset calculated as required to keep the yaw rate consistent with the turn rate for a coordinated turn. The default value is 1 which will work for all models. Advanced users can use it to correct for any tendency to yaw away from or into the turn once the turn is established. Increase to make the model yaw more initially and decrease to make the model yaw less initially. If values greater than 1.1 or less than 0.9 are required then it normally indicates a problem with the airspeed calibration.">
<field name="Range">0.8 1.2</field>
<field name="Increment">0.05</field>
</param>
</parameters>
<parameters name="COMPASS_">
<param humanName="Compass offsets on the X axis" name="COMPASS_OFS_X" documentation="Offset to be added to the compass x-axis values to compensate for metal in the frame">
<field name="Range">-400 400</field>
<field name="Increment">1</field>
</param>
<param humanName="Compass offsets on the Y axis" name="COMPASS_OFS_Y" documentation="Offset to be added to the compass y-axis values to compensate for metal in the frame">
<field name="Range">-400 400</field>
<field name="Increment">1</field>
</param>
<param humanName="Compass offsets on the Z axis" name="COMPASS_OFS_Z" documentation="Offset to be added to the compass z-axis values to compensate for metal in the frame">
<field name="Range">-400 400</field>
<field name="Increment">1</field>
</param>
<param humanName="Compass declination" name="COMPASS_DEC" documentation="An angle to compensate between the true north and magnetic north" user="Standard">
<field name="Range">-3.142 3.142</field>
<field name="Increment">0.01</field>
<field name="Units">Radians</field>
</param>
<param humanName="Learn compass offsets automatically" name="COMPASS_LEARN" documentation="Enable or disable the automatic learning of compass offsets" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Use compass for yaw" name="COMPASS_USE" documentation="Enable or disable the use of the compass (instead of the GPS) for determining heading" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Auto Declination" name="COMPASS_AUTODEC" documentation="Enable or disable the automatic calculation of the declination based on gps location" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Motor interference compensation type" name="COMPASS_MOTCT" documentation="Set motor interference compensation type to disabled, throttle or current.  Do not change manually.">
<values>
<value code="0">Disabled</value>
<value code="1">Use Throttle</value>
<value code="2">Use Current</value>
</values>
<field name="Increment">1</field>
</param>
<param humanName="Motor interference compensation for body frame X axis" name="COMPASS_MOT_X" documentation="Multiplied by the current throttle and added to the compass's x-axis values to compensate for motor interference">
<field name="Range">-1000 1000</field>
<field name="Increment">1</field>
<field name="Units">Offset per Amp or at Full Throttle</field>
</param>
<param humanName="Motor interference compensation for body frame Y axis" name="COMPASS_MOT_Y" documentation="Multiplied by the current throttle and added to the compass's y-axis values to compensate for motor interference">
<field name="Range">-1000 1000</field>
<field name="Increment">1</field>
<field name="Units">Offset per Amp or at Full Throttle</field>
</param>
<param humanName="Motor interference compensation for body frame Z axis" name="COMPASS_MOT_Z" documentation="Multiplied by the current throttle and added to the compass's z-axis values to compensate for motor interference">
<field name="Range">-1000 1000</field>
<field name="Increment">1</field>
<field name="Units">Offset per Amp or at Full Throttle</field>
</param>
<param humanName="Compass orientation" name="COMPASS_ORIENT" documentation="The orientation of the compass relative to the autopilot board. This will default to the right value for each board type, but can be changed if you have an external compass. See the documentation for your external compass for the right value. The correct orientation should give the X axis forward, the Y axis to the right and the Z axis down. So if your aircraft is pointing west it should show a position value for the Y axis, and a value close to zero for the X axis. NOTE: This orientation is combined with any AHRS_ORIENTATION setting. ">
<values>
<value code="0">None</value>
<value code="1">Yaw45</value>
<value code="2">Yaw90</value>
<value code="3">Yaw135</value>
<value code="4">Yaw180</value>
<value code="5">Yaw225</value>
<value code="6">Yaw270</value>
<value code="7">Yaw315</value>
<value code="8">Roll180</value>
<value code="9">Roll180Yaw45</value>
<value code="10">Roll180Yaw90</value>
<value code="11">Roll180Yaw135</value>
<value code="12">Pitch180</value>
<value code="13">Roll180Yaw225</value>
<value code="14">Roll180Yaw270</value>
<value code="15">Roll180Yaw315</value>
<value code="16">Roll90</value>
<value code="17">Roll90Yaw45</value>
<value code="18">Roll90Yaw135</value>
<value code="19">Roll270</value>
<value code="20">Roll270Yaw45</value>
<value code="21">Roll270Yaw90</value>
<value code="22">Roll270Yaw136</value>
<value code="23">Pitch90</value>
<value code="24">Pitch270</value>
</values>
</param>
</parameters>
<parameters name="INS_">
<param humanName="IMU Product ID" name="INS_PRODUCT_ID" documentation="Which type of IMU is installed (read-only)" user="Standard">
</param>
<param humanName="Accelerometer scaling of X axis" name="INS_ACCSCAL_X" documentation="Accelerometer scaling of X axis.  Calculated during acceleration calibration routine" user="Advanced">
<field name="Range">0.8 1.2</field>
</param>
<param humanName="Accelerometer scaling of Y axis" name="INS_ACCSCAL_Y" documentation="Accelerometer scaling of Y axis  Calculated during acceleration calibration routine" user="Advanced">
<field name="Range">0.8 1.2</field>
</param>
<param humanName="Accelerometer scaling of Z axis" name="INS_ACCSCAL_Z" documentation="Accelerometer scaling of Z axis  Calculated during acceleration calibration routine" user="Advanced">
<field name="Range">0.8 1.2</field>
</param>
<param humanName="Accelerometer offsets of X axis" name="INS_ACCOFFS_X" documentation="Accelerometer offsets of X axis. This is setup using the acceleration calibration or level operations" user="Advanced">
<field name="Range">-300 300</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Accelerometer offsets of Y axis" name="INS_ACCOFFS_Y" documentation="Accelerometer offsets of Y axis. This is setup using the acceleration calibration or level operations" user="Advanced">
<field name="Range">-300 300</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Accelerometer offsets of Z axis" name="INS_ACCOFFS_Z" documentation="Accelerometer offsets of Z axis. This is setup using the acceleration calibration or level operations" user="Advanced">
<field name="Range">-300 300</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Gyro offsets of X axis" name="INS_GYROFFS_X" documentation="Gyro sensor offsets of X axis. This is setup on each boot during gyro calibrations" user="Advanced">
<field name="Units">rad/s</field>
</param>
<param humanName="Gyro offsets of Y axis" name="INS_GYROFFS_Y" documentation="Gyro sensor offsets of Y axis. This is setup on each boot during gyro calibrations" user="Advanced">
<field name="Units">rad/s</field>
</param>
<param humanName="Gyro offsets of Z axis" name="INS_GYROFFS_Z" documentation="Gyro sensor offsets of Z axis. This is setup on each boot during gyro calibrations" user="Advanced">
<field name="Units">rad/s</field>
</param>
<param humanName="MPU6000 filter frequency" name="INS_MPU6K_FILTER" documentation="Filter frequency to ask the MPU6000 to apply to samples. This can be set to a lower value to try to cope with very high vibration levels in aircraft. The default value on ArduPlane, APMrover2 and ArduCopter is 20Hz. This option takes effect on the next reboot or gyro initialisation" user="Advanced">
<values>
<value code="0">Default</value>
<value code="5">5Hz</value>
<value code="10">10Hz</value>
<value code="20">20Hz</value>
<value code="42">42Hz</value>
<value code="98">98Hz</value>
</values>
<field name="Units">Hz</field>
</param>
</parameters>
<parameters name="AHRS_">
<param humanName="AHRS GPS gain" name="AHRS_GPS_GAIN" documentation="This controls how how much to use the GPS to correct the attitude. This should never be set to zero for a plane as it would result in the plane losing control in turns. For a plane please use the default value of 1.0.">
<field name="Range">0.0 1.0</field>
<field name="Increment">.01</field>
</param>
<param humanName="AHRS use GPS for navigation" name="AHRS_GPS_USE" documentation="This controls whether to use dead-reckoning or GPS based navigation. If set to 0 then the GPS won't be used for navigation, and only dead reckoning will be used. A value of zero should never be used for normal flight." user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Yaw P" name="AHRS_YAW_P" documentation="This controls the weight the compass or GPS has on the heading. A higher value means the heading will track the yaw source (GPS or compass) more rapidly.">
<field name="Range">0.1 0.4</field>
<field name="Increment">.01</field>
</param>
<param humanName="AHRS RP_P" name="AHRS_RP_P" documentation="This controls how fast the accelerometers correct the attitude">
<field name="Range">0.1 0.4</field>
<field name="Increment">.01</field>
</param>
<param humanName="Maximum wind" name="AHRS_WIND_MAX" documentation="This sets the maximum allowable difference between ground speed and airspeed. This allows the plane to cope with a failing airspeed sensor. A value of zero means to use the airspeed as is.">
<field name="Range">0 127</field>
<field name="Increment">1</field>
<field name="Units">m/s</field>
</param>
<param humanName="AHRS Trim Roll" name="AHRS_TRIM_X" documentation="Compensates for the roll angle difference between the control board and the frame" user="Advanced">
<field name="Range">-10 10</field>
<field name="Units">Radians</field>
</param>
<param humanName="AHRS Trim Pitch" name="AHRS_TRIM_Y" documentation="Compensates for the pitch angle difference between the control board and the frame" user="Advanced">
<field name="Range">-10 10</field>
<field name="Units">Radians</field>
</param>
<param humanName="AHRS Trim Yaw" name="AHRS_TRIM_Z" documentation="Not Used" user="Advanced">
<field name="Range">-10 10</field>
<field name="Units">Radians</field>
</param>
<param humanName="Board Orientation" name="AHRS_ORIENTATION" documentation="Overall board orientation relative to the standard orientation for the board type. This rotates the IMU and compass readings to allow the board to be oriented in your vehicle at any 90 or 45 degree angle. This option takes affect on next boot. After changing you will need to re-level your vehicle." user="Advanced">
<values>
<value code="0">None</value>
<value code="1">Yaw45</value>
<value code="2">Yaw90</value>
<value code="3">Yaw135</value>
<value code="4">Yaw180</value>
<value code="5">Yaw225</value>
<value code="6">Yaw270</value>
<value code="7">Yaw315</value>
<value code="8">Roll180</value>
<value code="9">Roll180Yaw45</value>
<value code="10">Roll180Yaw90</value>
<value code="11">Roll180Yaw135</value>
<value code="12">Pitch180</value>
<value code="13">Roll180Yaw225</value>
<value code="14">Roll180Yaw270</value>
<value code="15">Roll180Yaw315</value>
<value code="16">Roll90</value>
<value code="17">Roll90Yaw45</value>
<value code="18">Roll90Yaw135</value>
<value code="19">Roll270</value>
<value code="20">Roll270Yaw45</value>
<value code="21">Roll270Yaw90</value>
<value code="22">Roll270Yaw136</value>
<value code="23">Pitch90</value>
<value code="24">Pitch270</value>
</values>
</param>
<param humanName="AHRS Velocity Complmentary Filter Beta Coefficient" name="AHRS_COMP_BETA" documentation="This controls the time constant for the cross-over frequency used to fuse AHRS (airspeed and heading) and GPS data to estimate ground velocity. Time constant is 0.1/beta. A larger time constant will use GPS data less and a small time constant will use air data less." user="Advanced">
<field name="Range">0.001 0.5</field>
<field name="Increment">.01</field>
</param>
<param humanName="AHRS GPS Minimum satellites" name="AHRS_GPS_MINSATS" documentation="Minimum number of satellites visible to use GPS for velocity based corrections attitude correction. This defaults to 6, which is about the point at which the velocity numbers from a GPS become too unreliable for accurate correction of the accelerometers." user="Advanced">
<field name="Range">0 10</field>
<field name="Increment">1</field>
</param>
</parameters>
<parameters name="ARSPD_">
<param humanName="Airspeed enable" name="ARSPD_ENABLE" documentation="enable airspeed sensor">
<values>
<value code="0">Disable</value>
<value code="1">Enable</value>
</values>
</param>
<param humanName="Airspeed use" name="ARSPD_USE" documentation="use airspeed for flight control">
<values>
<value code="1">Use</value>
<value code="0">Don't Use</value>
</values>
</param>
<param humanName="Airspeed offset" name="ARSPD_OFFSET" documentation="Airspeed calibration offset">
<field name="Increment">0.1</field>
</param>
<param humanName="Airspeed ratio" name="ARSPD_RATIO" documentation="Airspeed calibration ratio">
<field name="Increment">0.1</field>
</param>
</parameters>
<parameters name="NAVL1_">
<param humanName="L1 control period" name="NAVL1_PERIOD" documentation="Period in seconds of L1 tracking loop. This needs to be larger for less responsive airframes. The default of 30 is very conservative, and for most RC aircraft will lead to slow and lazy turns. For smaller more agile aircraft a value closer to 20 is appropriate. When tuning, change this value in small increments, as a value that is much too small (say 5 or 10 below the right value) can lead to very radical turns, and a risk of stalling.">
<field name="Range">1-60</field>
<field name="Increment">1</field>
<field name="Units">seconds</field>
</param>
<param humanName="L1 control damping ratio" name="NAVL1_DAMPING" documentation="Damping ratio for L1 control. Increase this in increments of 0.05 if you are getting overshoot in path tracking. You should not need a value below 0.7 or above 0.85.">
<field name="Range">0.6-1.0</field>
<field name="Increment">0.05</field>
</param>
</parameters>
<parameters name="MNT_">
<param humanName="Mount operation mode" name="MNT_MODE" documentation="Camera or antenna mount operation mode" user="Standard">
<values>
<value code="0">retract</value>
<value code="1">neutral</value>
<value code="2">MavLink_targeting</value>
<value code="3">RC_targeting</value>
<value code="4">GPS_point</value>
</values>
</param>
<param humanName="Mount roll angle when in retracted position" name="MNT_RETRACT_X" documentation="Mount roll angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle when in retracted position" name="MNT_RETRACT_Y" documentation="Mount tilt/pitch angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount yaw/pan angle when in retracted position" name="MNT_RETRACT_Z" documentation="Mount yaw/pan angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount roll angle when in neutral position" name="MNT_NEUTRAL_X" documentation="Mount roll angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle when in neutral position" name="MNT_NEUTRAL_Y" documentation="Mount tilt/pitch angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount pan/yaw angle when in neutral position" name="MNT_NEUTRAL_Z" documentation="Mount pan/yaw angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount roll angle command from groundstation" name="MNT_CONTROL_X" documentation="Mount roll angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle command from groundstation" name="MNT_CONTROL_Y" documentation="Mount tilt/pitch angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount pan/yaw angle command from groundstation" name="MNT_CONTROL_Z" documentation="Mount pan/yaw angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Stabilize mount's pitch/tilt angle" name="MNT_STAB_TILT" documentation="enable tilt/pitch stabilisation relative to Earth" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Stabilize mount pan/yaw angle" name="MNT_STAB_PAN" documentation="enable pan/yaw stabilisation relative to Earth" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="roll RC input channel" name="MNT_RC_IN_ROLL" documentation="0 for none, any other for the RC channel to be used to control roll movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum roll angle" name="MNT_ANGMIN_ROL" documentation="Minimum physical roll angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum roll angle" name="MNT_ANGMAX_ROL" documentation="Maximum physical roll angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="tilt (pitch) RC input channel" name="MNT_RC_IN_TILT" documentation="0 for none, any other for the RC channel to be used to control tilt (pitch) movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum tilt angle" name="MNT_ANGMIN_TIL" documentation="Minimum physical tilt (pitch) angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum tilt angle" name="MNT_ANGMAX_TIL" documentation="Maximum physical tilt (pitch) angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="pan (yaw) RC input channel" name="MNT_RC_IN_PAN" documentation="0 for none, any other for the RC channel to be used to control pan (yaw) movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum pan angle" name="MNT_ANGMIN_PAN" documentation="Minimum physical pan (yaw) angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum pan angle" name="MNT_ANGMAX_PAN" documentation="Maximum physical pan (yaw) angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="mount joystick speed" name="MNT_JSTICK_SPD" documentation="0 for position control, small for low speeds, 100 for max speed. A good general value is 10 which gives a movement speed of 3 degrees per second." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
</param>
</parameters>
<parameters name="MNT2_">
<param humanName="Mount operation mode" name="MNT2_MODE" documentation="Camera or antenna mount operation mode" user="Standard">
<values>
<value code="0">retract</value>
<value code="1">neutral</value>
<value code="2">MavLink_targeting</value>
<value code="3">RC_targeting</value>
<value code="4">GPS_point</value>
</values>
</param>
<param humanName="Mount roll angle when in retracted position" name="MNT2_RETRACT_X" documentation="Mount roll angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle when in retracted position" name="MNT2_RETRACT_Y" documentation="Mount tilt/pitch angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount yaw/pan angle when in retracted position" name="MNT2_RETRACT_Z" documentation="Mount yaw/pan angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount roll angle when in neutral position" name="MNT2_NEUTRAL_X" documentation="Mount roll angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle when in neutral position" name="MNT2_NEUTRAL_Y" documentation="Mount tilt/pitch angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount pan/yaw angle when in neutral position" name="MNT2_NEUTRAL_Z" documentation="Mount pan/yaw angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount roll angle command from groundstation" name="MNT2_CONTROL_X" documentation="Mount roll angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle command from groundstation" name="MNT2_CONTROL_Y" documentation="Mount tilt/pitch angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount pan/yaw angle command from groundstation" name="MNT2_CONTROL_Z" documentation="Mount pan/yaw angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Stabilize mount's pitch/tilt angle" name="MNT2_STAB_TILT" documentation="enable tilt/pitch stabilisation relative to Earth" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Stabilize mount pan/yaw angle" name="MNT2_STAB_PAN" documentation="enable pan/yaw stabilisation relative to Earth" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="roll RC input channel" name="MNT2_RC_IN_ROLL" documentation="0 for none, any other for the RC channel to be used to control roll movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum roll angle" name="MNT2_ANGMIN_ROL" documentation="Minimum physical roll angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum roll angle" name="MNT2_ANGMAX_ROL" documentation="Maximum physical roll angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="tilt (pitch) RC input channel" name="MNT2_RC_IN_TILT" documentation="0 for none, any other for the RC channel to be used to control tilt (pitch) movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum tilt angle" name="MNT2_ANGMIN_TIL" documentation="Minimum physical tilt (pitch) angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum tilt angle" name="MNT2_ANGMAX_TIL" documentation="Maximum physical tilt (pitch) angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="pan (yaw) RC input channel" name="MNT2_RC_IN_PAN" documentation="0 for none, any other for the RC channel to be used to control pan (yaw) movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum pan angle" name="MNT2_ANGMIN_PAN" documentation="Minimum physical pan (yaw) angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum pan angle" name="MNT2_ANGMAX_PAN" documentation="Maximum physical pan (yaw) angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="mount joystick speed" name="MNT2_JSTICK_SPD" documentation="0 for position control, small for low speeds, 100 for max speed. A good general value is 10 which gives a movement speed of 3 degrees per second." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
</param>
</parameters>
<parameters name="HS1_">
<param humanName="RC min PWM" name="HS1_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="HS1_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="HS1_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="HS1_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="HS1_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="HS2_">
<param humanName="RC min PWM" name="HS2_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="HS2_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="HS2_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="HS2_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="HS2_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="HS3_">
<param humanName="RC min PWM" name="HS3_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="HS3_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="HS3_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="HS3_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="HS3_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="HS4_">
<param humanName="RC min PWM" name="HS4_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="HS4_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="HS4_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="HS4_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="HS4_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="RC1_">
<param humanName="RC min PWM" name="RC1_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC1_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC1_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC1_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC1_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="RC2_">
<param humanName="RC min PWM" name="RC2_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC2_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC2_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC2_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC2_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="RC3_">
<param humanName="RC min PWM" name="RC3_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC3_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC3_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC3_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC3_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="RC4_">
<param humanName="RC min PWM" name="RC4_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC4_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC4_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC4_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC4_DZ" documentation="dead zone around trim." user="Advanced">
</param>
</parameters>
<parameters name="RC5_">
<param humanName="RC min PWM" name="RC5_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC5_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC5_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC5_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC5_DZ" documentation="dead zone around trim." user="Advanced">
</param>
<param humanName="Servo out function" name="RC5_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC6_">
<param humanName="RC min PWM" name="RC6_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC6_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC6_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC6_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC6_DZ" documentation="dead zone around trim." user="Advanced">
</param>
<param humanName="Servo out function" name="RC6_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC7_">
<param humanName="RC min PWM" name="RC7_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC7_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC7_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC7_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC7_DZ" documentation="dead zone around trim." user="Advanced">
</param>
<param humanName="Servo out function" name="RC7_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC8_">
<param humanName="RC min PWM" name="RC8_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC8_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC8_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC8_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC8_DZ" documentation="dead zone around trim." user="Advanced">
</param>
<param humanName="Servo out function" name="RC8_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC10_">
<param humanName="RC min PWM" name="RC10_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC10_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC10_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC10_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC10_DZ" documentation="dead zone around trim." user="Advanced">
</param>
<param humanName="Servo out function" name="RC10_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC11_">
<param humanName="RC min PWM" name="RC11_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC11_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC11_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC11_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC11_DZ" documentation="dead zone around trim." user="Advanced">
</param>
<param humanName="Servo out function" name="RC11_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC9_">
<param humanName="RC min PWM" name="RC9_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC9_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC9_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC9_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC9_DZ" documentation="dead zone around trim." user="Advanced">
</param>
<param humanName="Servo out function" name="RC9_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="RC12_">
<param humanName="RC min PWM" name="RC12_MIN" documentation="RC minimum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC trim PWM" name="RC12_TRIM" documentation="RC trim (neutral) PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC max PWM" name="RC12_MAX" documentation="RC maximum PWM pulse width. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit." user="Advanced">
<field name="Range">800 2200</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="RC reverse" name="RC12_REV" documentation="Reverse servo operation. Ignored on APM1 unless dip-switches are disabled." user="Advanced">
<values>
<value code="-1">Reversed</value>
<value code="1">Normal</value>
</values>
</param>
<param humanName="RC dead-zone" name="RC12_DZ" documentation="dead zone around trim." user="Advanced">
</param>
<param humanName="Servo out function" name="RC12_FUNCTION" documentation="Setting this to Disabled(0) will disable this output, any other value will enable the corresponding function" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Manual</value>
<value code="2">Flap</value>
<value code="3">Flap_auto</value>
<value code="4">Aileron</value>
<value code="5">flaperon</value>
<value code="6">mount_pan</value>
<value code="7">mount_tilt</value>
<value code="8">mount_roll</value>
<value code="9">mount_open</value>
<value code="10">camera_trigger</value>
<value code="11">release</value>
<value code="12">mount2_pan</value>
<value code="13">mount2_tilt</value>
<value code="14">mount2_roll</value>
<value code="15">mount2_open</value>
<value code="16">DifferentialSpoiler1</value>
<value code="17">DifferentialSpoiler2</value>
<value code="18">AileronWithInput</value>
<value code="19">Elevator</value>
<value code="20">ElevatorWithInput</value>
</values>
</param>
</parameters>
<parameters name="CAM_">
<param humanName="Camera shutter (trigger) type" name="CAM_TRIGG_TYPE" documentation="how to trigger the camera to take a picture" user="Standard">
<values>
<value code="0">Servo</value>
<value code="1">Relay</value>
<value code="2">Servo and turn off throttle</value>
<value code="3">Servo when 3m from waypoint</value>
<value code="4">transistor</value>
</values>
</param>
<param humanName="Duration that shutter is held open" name="CAM_DURATION" documentation="How long the shutter will be held open in 10ths of a second (i.e. enter 10 for 1second, 50 for 5seconds)" user="Standard">
<field name="Range">0 50</field>
</param>
<param humanName="Servo ON PWM value" name="CAM_SERVO_ON" documentation="PWM value to move servo to when shutter is activated" user="Standard">
<field name="Range">1000 2000</field>
</param>
<param humanName="Servo OFF PWM value" name="CAM_SERVO_OFF" documentation="PWM value to move servo to when shutter is deactivated" user="Standard">
<field name="Range">1000 2000</field>
</param>
</parameters>
<parameters name="COMPASS_">
<param humanName="Compass offsets on the X axis" name="COMPASS_OFS_X" documentation="Offset to be added to the compass x-axis values to compensate for metal in the frame">
<field name="Range">-400 400</field>
<field name="Increment">1</field>
</param>
<param humanName="Compass offsets on the Y axis" name="COMPASS_OFS_Y" documentation="Offset to be added to the compass y-axis values to compensate for metal in the frame">
<field name="Range">-400 400</field>
<field name="Increment">1</field>
</param>
<param humanName="Compass offsets on the Z axis" name="COMPASS_OFS_Z" documentation="Offset to be added to the compass z-axis values to compensate for metal in the frame">
<field name="Range">-400 400</field>
<field name="Increment">1</field>
</param>
<param humanName="Compass declination" name="COMPASS_DEC" documentation="An angle to compensate between the true north and magnetic north" user="Standard">
<field name="Range">-3.142 3.142</field>
<field name="Increment">0.01</field>
<field name="Units">Radians</field>
</param>
<param humanName="Learn compass offsets automatically" name="COMPASS_LEARN" documentation="Enable or disable the automatic learning of compass offsets" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Use compass for yaw" name="COMPASS_USE" documentation="Enable or disable the use of the compass (instead of the GPS) for determining heading" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Auto Declination" name="COMPASS_AUTODEC" documentation="Enable or disable the automatic calculation of the declination based on gps location" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Motor interference compensation type" name="COMPASS_MOTCT" documentation="Set motor interference compensation type to disabled, throttle or current.  Do not change manually.">
<values>
<value code="0">Disabled</value>
<value code="1">Use Throttle</value>
<value code="2">Use Current</value>
</values>
<field name="Increment">1</field>
</param>
<param humanName="Motor interference compensation for body frame X axis" name="COMPASS_MOT_X" documentation="Multiplied by the current throttle and added to the compass's x-axis values to compensate for motor interference">
<field name="Range">-1000 1000</field>
<field name="Increment">1</field>
<field name="Units">Offset per Amp or at Full Throttle</field>
</param>
<param humanName="Motor interference compensation for body frame Y axis" name="COMPASS_MOT_Y" documentation="Multiplied by the current throttle and added to the compass's y-axis values to compensate for motor interference">
<field name="Range">-1000 1000</field>
<field name="Increment">1</field>
<field name="Units">Offset per Amp or at Full Throttle</field>
</param>
<param humanName="Motor interference compensation for body frame Z axis" name="COMPASS_MOT_Z" documentation="Multiplied by the current throttle and added to the compass's z-axis values to compensate for motor interference">
<field name="Range">-1000 1000</field>
<field name="Increment">1</field>
<field name="Units">Offset per Amp or at Full Throttle</field>
</param>
<param humanName="Compass orientation" name="COMPASS_ORIENT" documentation="The orientation of the compass relative to the autopilot board. This will default to the right value for each board type, but can be changed if you have an external compass. See the documentation for your external compass for the right value. The correct orientation should give the X axis forward, the Y axis to the right and the Z axis down. So if your aircraft is pointing west it should show a position value for the Y axis, and a value close to zero for the X axis. NOTE: This orientation is combined with any AHRS_ORIENTATION setting. ">
<values>
<value code="0">None</value>
<value code="1">Yaw45</value>
<value code="2">Yaw90</value>
<value code="3">Yaw135</value>
<value code="4">Yaw180</value>
<value code="5">Yaw225</value>
<value code="6">Yaw270</value>
<value code="7">Yaw315</value>
<value code="8">Roll180</value>
<value code="9">Roll180Yaw45</value>
<value code="10">Roll180Yaw90</value>
<value code="11">Roll180Yaw135</value>
<value code="12">Pitch180</value>
<value code="13">Roll180Yaw225</value>
<value code="14">Roll180Yaw270</value>
<value code="15">Roll180Yaw315</value>
<value code="16">Roll90</value>
<value code="17">Roll90Yaw45</value>
<value code="18">Roll90Yaw135</value>
<value code="19">Roll270</value>
<value code="20">Roll270Yaw45</value>
<value code="21">Roll270Yaw90</value>
<value code="22">Roll270Yaw136</value>
<value code="23">Pitch90</value>
<value code="24">Pitch270</value>
</values>
</param>
</parameters>
<parameters name="INS_">
<param humanName="IMU Product ID" name="INS_PRODUCT_ID" documentation="Which type of IMU is installed (read-only)" user="Standard">
</param>
<param humanName="Accelerometer scaling of X axis" name="INS_ACCSCAL_X" documentation="Accelerometer scaling of X axis.  Calculated during acceleration calibration routine" user="Advanced">
<field name="Range">0.8 1.2</field>
</param>
<param humanName="Accelerometer scaling of Y axis" name="INS_ACCSCAL_Y" documentation="Accelerometer scaling of Y axis  Calculated during acceleration calibration routine" user="Advanced">
<field name="Range">0.8 1.2</field>
</param>
<param humanName="Accelerometer scaling of Z axis" name="INS_ACCSCAL_Z" documentation="Accelerometer scaling of Z axis  Calculated during acceleration calibration routine" user="Advanced">
<field name="Range">0.8 1.2</field>
</param>
<param humanName="Accelerometer offsets of X axis" name="INS_ACCOFFS_X" documentation="Accelerometer offsets of X axis. This is setup using the acceleration calibration or level operations" user="Advanced">
<field name="Range">-300 300</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Accelerometer offsets of Y axis" name="INS_ACCOFFS_Y" documentation="Accelerometer offsets of Y axis. This is setup using the acceleration calibration or level operations" user="Advanced">
<field name="Range">-300 300</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Accelerometer offsets of Z axis" name="INS_ACCOFFS_Z" documentation="Accelerometer offsets of Z axis. This is setup using the acceleration calibration or level operations" user="Advanced">
<field name="Range">-300 300</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Gyro offsets of X axis" name="INS_GYROFFS_X" documentation="Gyro sensor offsets of X axis. This is setup on each boot during gyro calibrations" user="Advanced">
<field name="Units">rad/s</field>
</param>
<param humanName="Gyro offsets of Y axis" name="INS_GYROFFS_Y" documentation="Gyro sensor offsets of Y axis. This is setup on each boot during gyro calibrations" user="Advanced">
<field name="Units">rad/s</field>
</param>
<param humanName="Gyro offsets of Z axis" name="INS_GYROFFS_Z" documentation="Gyro sensor offsets of Z axis. This is setup on each boot during gyro calibrations" user="Advanced">
<field name="Units">rad/s</field>
</param>
<param humanName="MPU6000 filter frequency" name="INS_MPU6K_FILTER" documentation="Filter frequency to ask the MPU6000 to apply to samples. This can be set to a lower value to try to cope with very high vibration levels in aircraft. The default value on ArduPlane, APMrover2 and ArduCopter is 20Hz. This option takes effect on the next reboot or gyro initialisation" user="Advanced">
<values>
<value code="0">Default</value>
<value code="5">5Hz</value>
<value code="10">10Hz</value>
<value code="20">20Hz</value>
<value code="42">42Hz</value>
<value code="98">98Hz</value>
</values>
<field name="Units">Hz</field>
</param>
</parameters>
<parameters name="INAV_">
<param humanName="Horizontal Time Constant" name="INAV_TC_XY" documentation="Time constant for GPS and accel mixing. Higher TC decreases GPS impact on position estimate">
<field name="Range">0 10</field>
<field name="Increment">0.1</field>
</param>
<param humanName="Vertical Time Constant" name="INAV_TC_Z" documentation="Time constant for baro and accel mixing. Higher TC decreases barometers impact on altitude estimate">
<field name="Range">0 10</field>
<field name="Increment">0.1</field>
</param>
</parameters>
<parameters name="SR0_">
<param humanName="Horizontal Time Constant" name="SR0_TC_XY" documentation="Time constant for GPS and accel mixing. Higher TC decreases GPS impact on position estimate">
<field name="Range">0 10</field>
<field name="Increment">0.1</field>
</param>
<param humanName="Vertical Time Constant" name="SR0_TC_Z" documentation="Time constant for baro and accel mixing. Higher TC decreases barometers impact on altitude estimate">
<field name="Range">0 10</field>
<field name="Increment">0.1</field>
</param>
</parameters>
<parameters name="SR3_">
<param humanName="Horizontal Time Constant" name="SR3_TC_XY" documentation="Time constant for GPS and accel mixing. Higher TC decreases GPS impact on position estimate">
<field name="Range">0 10</field>
<field name="Increment">0.1</field>
</param>
<param humanName="Vertical Time Constant" name="SR3_TC_Z" documentation="Time constant for baro and accel mixing. Higher TC decreases barometers impact on altitude estimate">
<field name="Range">0 10</field>
<field name="Increment">0.1</field>
</param>
</parameters>
<parameters name="AHRS_">
<param humanName="AHRS GPS gain" name="AHRS_GPS_GAIN" documentation="This controls how how much to use the GPS to correct the attitude. This should never be set to zero for a plane as it would result in the plane losing control in turns. For a plane please use the default value of 1.0.">
<field name="Range">0.0 1.0</field>
<field name="Increment">.01</field>
</param>
<param humanName="AHRS use GPS for navigation" name="AHRS_GPS_USE" documentation="This controls whether to use dead-reckoning or GPS based navigation. If set to 0 then the GPS won't be used for navigation, and only dead reckoning will be used. A value of zero should never be used for normal flight." user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Yaw P" name="AHRS_YAW_P" documentation="This controls the weight the compass or GPS has on the heading. A higher value means the heading will track the yaw source (GPS or compass) more rapidly.">
<field name="Range">0.1 0.4</field>
<field name="Increment">.01</field>
</param>
<param humanName="AHRS RP_P" name="AHRS_RP_P" documentation="This controls how fast the accelerometers correct the attitude">
<field name="Range">0.1 0.4</field>
<field name="Increment">.01</field>
</param>
<param humanName="Maximum wind" name="AHRS_WIND_MAX" documentation="This sets the maximum allowable difference between ground speed and airspeed. This allows the plane to cope with a failing airspeed sensor. A value of zero means to use the airspeed as is.">
<field name="Range">0 127</field>
<field name="Increment">1</field>
<field name="Units">m/s</field>
</param>
<param humanName="AHRS Trim Roll" name="AHRS_TRIM_X" documentation="Compensates for the roll angle difference between the control board and the frame" user="Advanced">
<field name="Range">-10 10</field>
<field name="Units">Radians</field>
</param>
<param humanName="AHRS Trim Pitch" name="AHRS_TRIM_Y" documentation="Compensates for the pitch angle difference between the control board and the frame" user="Advanced">
<field name="Range">-10 10</field>
<field name="Units">Radians</field>
</param>
<param humanName="AHRS Trim Yaw" name="AHRS_TRIM_Z" documentation="Not Used" user="Advanced">
<field name="Range">-10 10</field>
<field name="Units">Radians</field>
</param>
<param humanName="Board Orientation" name="AHRS_ORIENTATION" documentation="Overall board orientation relative to the standard orientation for the board type. This rotates the IMU and compass readings to allow the board to be oriented in your vehicle at any 90 or 45 degree angle. This option takes affect on next boot. After changing you will need to re-level your vehicle." user="Advanced">
<values>
<value code="0">None</value>
<value code="1">Yaw45</value>
<value code="2">Yaw90</value>
<value code="3">Yaw135</value>
<value code="4">Yaw180</value>
<value code="5">Yaw225</value>
<value code="6">Yaw270</value>
<value code="7">Yaw315</value>
<value code="8">Roll180</value>
<value code="9">Roll180Yaw45</value>
<value code="10">Roll180Yaw90</value>
<value code="11">Roll180Yaw135</value>
<value code="12">Pitch180</value>
<value code="13">Roll180Yaw225</value>
<value code="14">Roll180Yaw270</value>
<value code="15">Roll180Yaw315</value>
<value code="16">Roll90</value>
<value code="17">Roll90Yaw45</value>
<value code="18">Roll90Yaw135</value>
<value code="19">Roll270</value>
<value code="20">Roll270Yaw45</value>
<value code="21">Roll270Yaw90</value>
<value code="22">Roll270Yaw136</value>
<value code="23">Pitch90</value>
<value code="24">Pitch270</value>
</values>
</param>
<param humanName="AHRS Velocity Complmentary Filter Beta Coefficient" name="AHRS_COMP_BETA" documentation="This controls the time constant for the cross-over frequency used to fuse AHRS (airspeed and heading) and GPS data to estimate ground velocity. Time constant is 0.1/beta. A larger time constant will use GPS data less and a small time constant will use air data less." user="Advanced">
<field name="Range">0.001 0.5</field>
<field name="Increment">.01</field>
</param>
<param humanName="AHRS GPS Minimum satellites" name="AHRS_GPS_MINSATS" documentation="Minimum number of satellites visible to use GPS for velocity based corrections attitude correction. This defaults to 6, which is about the point at which the velocity numbers from a GPS become too unreliable for accurate correction of the accelerometers." user="Advanced">
<field name="Range">0 10</field>
<field name="Increment">1</field>
</param>
</parameters>
<parameters name="MNT_">
<param humanName="Mount operation mode" name="MNT_MODE" documentation="Camera or antenna mount operation mode" user="Standard">
<values>
<value code="0">retract</value>
<value code="1">neutral</value>
<value code="2">MavLink_targeting</value>
<value code="3">RC_targeting</value>
<value code="4">GPS_point</value>
</values>
</param>
<param humanName="Mount roll angle when in retracted position" name="MNT_RETRACT_X" documentation="Mount roll angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle when in retracted position" name="MNT_RETRACT_Y" documentation="Mount tilt/pitch angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount yaw/pan angle when in retracted position" name="MNT_RETRACT_Z" documentation="Mount yaw/pan angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount roll angle when in neutral position" name="MNT_NEUTRAL_X" documentation="Mount roll angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle when in neutral position" name="MNT_NEUTRAL_Y" documentation="Mount tilt/pitch angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount pan/yaw angle when in neutral position" name="MNT_NEUTRAL_Z" documentation="Mount pan/yaw angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount roll angle command from groundstation" name="MNT_CONTROL_X" documentation="Mount roll angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle command from groundstation" name="MNT_CONTROL_Y" documentation="Mount tilt/pitch angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount pan/yaw angle command from groundstation" name="MNT_CONTROL_Z" documentation="Mount pan/yaw angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Stabilize mount's pitch/tilt angle" name="MNT_STAB_TILT" documentation="enable tilt/pitch stabilisation relative to Earth" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Stabilize mount pan/yaw angle" name="MNT_STAB_PAN" documentation="enable pan/yaw stabilisation relative to Earth" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="roll RC input channel" name="MNT_RC_IN_ROLL" documentation="0 for none, any other for the RC channel to be used to control roll movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum roll angle" name="MNT_ANGMIN_ROL" documentation="Minimum physical roll angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum roll angle" name="MNT_ANGMAX_ROL" documentation="Maximum physical roll angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="tilt (pitch) RC input channel" name="MNT_RC_IN_TILT" documentation="0 for none, any other for the RC channel to be used to control tilt (pitch) movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum tilt angle" name="MNT_ANGMIN_TIL" documentation="Minimum physical tilt (pitch) angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum tilt angle" name="MNT_ANGMAX_TIL" documentation="Maximum physical tilt (pitch) angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="pan (yaw) RC input channel" name="MNT_RC_IN_PAN" documentation="0 for none, any other for the RC channel to be used to control pan (yaw) movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum pan angle" name="MNT_ANGMIN_PAN" documentation="Minimum physical pan (yaw) angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum pan angle" name="MNT_ANGMAX_PAN" documentation="Maximum physical pan (yaw) angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="mount joystick speed" name="MNT_JSTICK_SPD" documentation="0 for position control, small for low speeds, 100 for max speed. A good general value is 10 which gives a movement speed of 3 degrees per second." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
</param>
</parameters>
<parameters name="MNT2_">
<param humanName="Mount operation mode" name="MNT2_MODE" documentation="Camera or antenna mount operation mode" user="Standard">
<values>
<value code="0">retract</value>
<value code="1">neutral</value>
<value code="2">MavLink_targeting</value>
<value code="3">RC_targeting</value>
<value code="4">GPS_point</value>
</values>
</param>
<param humanName="Mount roll angle when in retracted position" name="MNT2_RETRACT_X" documentation="Mount roll angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle when in retracted position" name="MNT2_RETRACT_Y" documentation="Mount tilt/pitch angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount yaw/pan angle when in retracted position" name="MNT2_RETRACT_Z" documentation="Mount yaw/pan angle when in retracted position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount roll angle when in neutral position" name="MNT2_NEUTRAL_X" documentation="Mount roll angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle when in neutral position" name="MNT2_NEUTRAL_Y" documentation="Mount tilt/pitch angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount pan/yaw angle when in neutral position" name="MNT2_NEUTRAL_Z" documentation="Mount pan/yaw angle when in neutral position" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount roll angle command from groundstation" name="MNT2_CONTROL_X" documentation="Mount roll angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount tilt/pitch angle command from groundstation" name="MNT2_CONTROL_Y" documentation="Mount tilt/pitch angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Mount pan/yaw angle command from groundstation" name="MNT2_CONTROL_Z" documentation="Mount pan/yaw angle when in MavLink or RC control operation mode">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Stabilize mount's pitch/tilt angle" name="MNT2_STAB_TILT" documentation="enable tilt/pitch stabilisation relative to Earth" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Stabilize mount pan/yaw angle" name="MNT2_STAB_PAN" documentation="enable pan/yaw stabilisation relative to Earth" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="roll RC input channel" name="MNT2_RC_IN_ROLL" documentation="0 for none, any other for the RC channel to be used to control roll movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum roll angle" name="MNT2_ANGMIN_ROL" documentation="Minimum physical roll angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum roll angle" name="MNT2_ANGMAX_ROL" documentation="Maximum physical roll angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="tilt (pitch) RC input channel" name="MNT2_RC_IN_TILT" documentation="0 for none, any other for the RC channel to be used to control tilt (pitch) movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum tilt angle" name="MNT2_ANGMIN_TIL" documentation="Minimum physical tilt (pitch) angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum tilt angle" name="MNT2_ANGMAX_TIL" documentation="Maximum physical tilt (pitch) angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="pan (yaw) RC input channel" name="MNT2_RC_IN_PAN" documentation="0 for none, any other for the RC channel to be used to control pan (yaw) movements" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="5">RC5</value>
<value code="6">RC6</value>
<value code="7">RC7</value>
<value code="8">RC8</value>
</values>
</param>
<param humanName="Minimum pan angle" name="MNT2_ANGMIN_PAN" documentation="Minimum physical pan (yaw) angular position of mount." user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Maximum pan angle" name="MNT2_ANGMAX_PAN" documentation="Maximum physical pan (yaw) angular position of the mount" user="Standard">
<field name="Range">-18000 17999</field>
<field name="Increment">1</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="mount joystick speed" name="MNT2_JSTICK_SPD" documentation="0 for position control, small for low speeds, 100 for max speed. A good general value is 10 which gives a movement speed of 3 degrees per second." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
</param>
</parameters>
<parameters name="GND_">
<param humanName="Absolute Pressure" name="GND_ABS_PRESS" documentation="calibrated ground pressure">
<field name="Increment">1</field>
</param>
<param humanName="ground temperature" name="GND_ABS_PRESS" documentation="calibrated ground temperature">
<field name="Increment">1</field>
</param>
</parameters>
<parameters name="SCHED_">
<param humanName="Scheduler debug level" name="SCHED_DEBUG" documentation="Set to non-zero to enable scheduler debug messages" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">ShowSlipe</value>
<value code="2">ShowOverruns</value>
</values>
</param>
</parameters>
<parameters name="H_">
<param humanName="Servo 1 Position" name="H_SV1_POS" documentation="This is the angular location of swash servo #1." user="Standard">
<field name="Range">-180 180</field>
<field name="Increment">1</field>
<field name="Units">Degrees</field>
</param>
<param humanName="Servo 2 Position" name="H_SV2_POS" documentation="This is the angular location of swash servo #2." user="Standard">
<field name="Range">-180 180</field>
<field name="Increment">1</field>
<field name="Units">Degrees</field>
</param>
<param humanName="Servo 3 Position" name="H_SV3_POS" documentation="This is the angular location of swash servo #3." user="Standard">
<field name="Range">-180 180</field>
<field name="Increment">1</field>
<field name="Units">Degrees</field>
</param>
<param humanName="Maximum Roll Angle" name="H_ROL_MAX" documentation="This is the maximum allowable roll of the swash plate." user="Advanced">
<field name="Range">0 18000</field>
<field name="Increment">1</field>
<field name="Units">Degrees</field>
</param>
<param humanName="Maximum Pitch Angle" name="H_PIT_MAX" documentation="This is the maximum allowable pitch of the swash plate." user="Advanced">
<field name="Range">0 18000</field>
<field name="Increment">1</field>
<field name="Units">Degrees</field>
</param>
<param humanName="Collective Pitch Minimum" name="H_COL_MIN" documentation="This controls the lowest possible servo position for the swashplate." user="Standard">
<field name="Range">1000 2000</field>
<field name="Increment">1</field>
<field name="Units">PWM</field>
</param>
<param humanName="Collective Pitch Maximum" name="H_COL_MAX" documentation="This controls the highest possible servo position for the swashplate." user="Standard">
<field name="Range">1000 2000</field>
<field name="Increment">1</field>
<field name="Units">PWM</field>
</param>
<param humanName="Collective Pitch Mid-Point" name="H_COL_MID" documentation="This is the swash servo position corresponding to zero collective pitch (or zero lift for Assymetrical blades)." user="Standard">
<field name="Range">1000 2000</field>
<field name="Increment">1</field>
<field name="Units">PWM</field>
</param>
<param humanName="External Gyro Enabled" name="H_GYR_ENABLE" documentation="Setting this to Enabled(1) will enable an external rudder gyro control which means outputting a gain on channel 7 and using a simpler heading control algorithm. Setting this to Disabled(0) will disable the external gyro gain on channel 7 and revert to a more complex yaw control algorithm." user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Swash Plate Type" name="H_SWASH_TYPE" documentation='Setting this to 0 will configure for a 3-servo CCPM. Setting this to 1 will configure for mechanically mixed "H1".' user="Standard">
</param>
<param humanName="External Gyro Gain" name="H_GYR_GAIN" documentation="This is the PWM which is passed to the external gyro when external gyro is enabled." user="Standard">
<field name="Range">1000 2000</field>
<field name="Increment">1</field>
<field name="Units">PWM</field>
</param>
<param humanName="Manual Servo Mode" name="H_SV_MAN" documentation="Setting this to Enabled(1) will pass radio inputs directly to servos. Setting this to Disabled(0) will enable Arducopter control of servos.  This is only meant to be used by the Mission Planner using swash plate set-up." user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Swashplate Phase Angle Compensation" name="H_PHANG" documentation="This corrects for phase angle errors of the helicopter main rotor head.  For example if pitching the swash forward also induces a roll, that effect can be offset with this parameter." user="Advanced">
<field name="Range">-90 90</field>
<field name="Increment">1</field>
<field name="Units">Degrees</field>
</param>
<param humanName="Collective-Yaw Mixing" name="H_COLYAW" documentation="This is a feed-forward compensation to automatically add rudder input when collective pitch is increased.">
<field name="Range">0 5</field>
</param>
<param humanName="External Motor Governor Setpoint" name="H_GOV_SETPOINT" documentation="This is the PWM which is passed to the external motor governor when external governor is enabled." user="Standard">
<field name="Range">1000 2000</field>
<field name="Increment">10</field>
<field name="Units">PWM</field>
</param>
<param humanName="Rotor Speed Control Mode" name="H_RSC_MODE" documentation="This sets which ESC control mode is active." user="Standard">
<field name="Range">1 3</field>
</param>
<param humanName="RSC Ramp Rate" name="H_RSC_RATE" documentation="This sets the time the RSC takes to ramp up to full speed (Soft Start)." user="Standard">
<field name="Range">0 6000</field>
<field name="Units">Seconds</field>
</param>
<param humanName="Flybar Mode Selector" name="H_FLYBAR_MODE" documentation="This sets which acro mode is active. (0) is Flybarless (1) is Mechanical Flybar" user="Standard">
<field name="Range">0 1</field>
</param>
<param humanName="Stabilize Throttle Minimum" name="H_STAB_COL_MIN" documentation="This is the minimum collective setpoint in Stabilize Mode" user="Standard">
<field name="Range">0 50</field>
<field name="Increment">1</field>
<field name="Units">1%</field>
</param>
<param humanName="Stabilize Throttle Maximum" name="H_STAB_COL_MAX" documentation="This is the maximum collective setpoint in Stabilize Mode" user="Standard">
<field name="Range">50 100</field>
<field name="Increment">1</field>
<field name="Units">1%</field>
</param>
</parameters>
<parameters name="MOT_">
<param humanName="Thrust Curve Enable" name="MOT_TCRV_ENABLE" documentation="Controls whether a curve is used to linearize the thrust produced by the motors">
<values>
<value code="0">Disabled</value>
<value code="1">Enable</value>
</values>
</param>
<param humanName="Thrust Curve mid-point percentage" name="MOT_TCRV_MIDPCT" documentation="Set the pwm position that produces half the maximum thrust of the motors">
<field name="Range">20 80</field>
</param>
<param humanName="Thrust Curve max thrust percentage" name="MOT_TCRV_MAXPCT" documentation="Set to the lowest pwm position that produces the maximum thrust of the motors.  Most motors produce maximum thrust below the maximum pwm value that they accept.">
<field name="Range">20 80</field>
</param>
</parameters>
<parameters name="SONAR_">
<param humanName="Sonar pin" name="SONAR_PIN" documentation="Analog pin that sonar is connected to. ">
</param>
<param humanName="Sonar scaling" name="SONAR_SCALING" documentation="Scaling factor between sonar reading and distance. For the linear and inverted functions this is in meters per volt. For the hyperbolic function the units are meterVolts.">
<field name="Units">meters/Volt</field>
<field name="Increment">0.001</field>
</param>
<param humanName="Sonar offset" name="SONAR_OFFSET" documentation="Offset in volts for zero distance">
<field name="Units">Volts</field>
<field name="Increment">0.001</field>
</param>
<param humanName="Sonar function" name="SONAR_FUNCTION" documentation="Control over what function is used to calculate distance. For a linear function, the distance is (voltage-offset)*scaling. For a inverted function the distance is (offset-voltage)*scaling. For a hyperbolic function the distance is scaling/(voltage-offset). The functions return the distance in meters.">
<values>
<value code="0">Linear</value>
<value code="1">Inverted</value>
<value code="2">Hyperbolic</value>
</values>
</param>
<param humanName="Sonar minimum distance" name="SONAR_MIN_CM" documentation="minimum distance in centimeters that sonar can reliably read">
<field name="Units">centimeters</field>
<field name="Increment">1</field>
</param>
<param humanName="Sonar maximum distance" name="SONAR_MAX_CM" documentation="maximum distance in centimeters that sonar can reliably read">
<field name="Units">centimeters</field>
<field name="Increment">1</field>
</param>
<param humanName="Sonar enabled" name="SONAR_ENABLE" documentation="set to 1 to enable this sonar">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Sonar stop pin" name="SONAR_STOP_PIN" documentation="Digital pin that enables/disables sonar measurement. A value of -1 means no pin. If this is set, then the pin is set to 1 to enable the sonar and set to 0 to disable it. This can be used to ensure that multiple sonars don't interfere with each other.">
</param>
<param humanName="Sonar settle time" name="SONAR_SETTLE_MS" documentation="The time in milliseconds that the sonar reading takes to settle. This is only used when a STOP_PIN is specified. It determines how long we have to wait for the sonar to give a reading after we set the STOP_PIN high. For a sonar with a range of around 7m this would need to be around 50 milliseconds to allow for the sonar pulse to travel to the target and back again.">
<field name="Units">milliseconds</field>
<field name="Increment">1</field>
</param>
</parameters>
<parameters name="SONAR2_">
<param humanName="Sonar pin" name="SONAR2_PIN" documentation="Analog pin that sonar is connected to. ">
</param>
<param humanName="Sonar scaling" name="SONAR2_SCALING" documentation="Scaling factor between sonar reading and distance. For the linear and inverted functions this is in meters per volt. For the hyperbolic function the units are meterVolts.">
<field name="Units">meters/Volt</field>
<field name="Increment">0.001</field>
</param>
<param humanName="Sonar offset" name="SONAR2_OFFSET" documentation="Offset in volts for zero distance">
<field name="Units">Volts</field>
<field name="Increment">0.001</field>
</param>
<param humanName="Sonar function" name="SONAR2_FUNCTION" documentation="Control over what function is used to calculate distance. For a linear function, the distance is (voltage-offset)*scaling. For a inverted function the distance is (offset-voltage)*scaling. For a hyperbolic function the distance is scaling/(voltage-offset). The functions return the distance in meters.">
<values>
<value code="0">Linear</value>
<value code="1">Inverted</value>
<value code="2">Hyperbolic</value>
</values>
</param>
<param humanName="Sonar minimum distance" name="SONAR2_MIN_CM" documentation="minimum distance in centimeters that sonar can reliably read">
<field name="Units">centimeters</field>
<field name="Increment">1</field>
</param>
<param humanName="Sonar maximum distance" name="SONAR2_MAX_CM" documentation="maximum distance in centimeters that sonar can reliably read">
<field name="Units">centimeters</field>
<field name="Increment">1</field>
</param>
<param humanName="Sonar enabled" name="SONAR2_ENABLE" documentation="set to 1 to enable this sonar">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Sonar stop pin" name="SONAR2_STOP_PIN" documentation="Digital pin that enables/disables sonar measurement. A value of -1 means no pin. If this is set, then the pin is set to 1 to enable the sonar and set to 0 to disable it. This can be used to ensure that multiple sonars don't interfere with each other.">
</param>
<param humanName="Sonar settle time" name="SONAR2_SETTLE_MS" documentation="The time in milliseconds that the sonar reading takes to settle. This is only used when a STOP_PIN is specified. It determines how long we have to wait for the sonar to give a reading after we set the STOP_PIN high. For a sonar with a range of around 7m this would need to be around 50 milliseconds to allow for the sonar pulse to travel to the target and back again.">
<field name="Units">milliseconds</field>
<field name="Increment">1</field>
</param>
</parameters>
<parameters name="INS_">
<param humanName="IMU Product ID" name="INS_PRODUCT_ID" documentation="Which type of IMU is installed (read-only)" user="Standard">
</param>
<param humanName="Accelerometer scaling of X axis" name="INS_ACCSCAL_X" documentation="Accelerometer scaling of X axis.  Calculated during acceleration calibration routine" user="Advanced">
<field name="Range">0.8 1.2</field>
</param>
<param humanName="Accelerometer scaling of Y axis" name="INS_ACCSCAL_Y" documentation="Accelerometer scaling of Y axis  Calculated during acceleration calibration routine" user="Advanced">
<field name="Range">0.8 1.2</field>
</param>
<param humanName="Accelerometer scaling of Z axis" name="INS_ACCSCAL_Z" documentation="Accelerometer scaling of Z axis  Calculated during acceleration calibration routine" user="Advanced">
<field name="Range">0.8 1.2</field>
</param>
<param humanName="Accelerometer offsets of X axis" name="INS_ACCOFFS_X" documentation="Accelerometer offsets of X axis. This is setup using the acceleration calibration or level operations" user="Advanced">
<field name="Range">-300 300</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Accelerometer offsets of Y axis" name="INS_ACCOFFS_Y" documentation="Accelerometer offsets of Y axis. This is setup using the acceleration calibration or level operations" user="Advanced">
<field name="Range">-300 300</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Accelerometer offsets of Z axis" name="INS_ACCOFFS_Z" documentation="Accelerometer offsets of Z axis. This is setup using the acceleration calibration or level operations" user="Advanced">
<field name="Range">-300 300</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Gyro offsets of X axis" name="INS_GYROFFS_X" documentation="Gyro sensor offsets of X axis. This is setup on each boot during gyro calibrations" user="Advanced">
<field name="Units">rad/s</field>
</param>
<param humanName="Gyro offsets of Y axis" name="INS_GYROFFS_Y" documentation="Gyro sensor offsets of Y axis. This is setup on each boot during gyro calibrations" user="Advanced">
<field name="Units">rad/s</field>
</param>
<param humanName="Gyro offsets of Z axis" name="INS_GYROFFS_Z" documentation="Gyro sensor offsets of Z axis. This is setup on each boot during gyro calibrations" user="Advanced">
<field name="Units">rad/s</field>
</param>
<param humanName="MPU6000 filter frequency" name="INS_MPU6K_FILTER" documentation="Filter frequency to ask the MPU6000 to apply to samples. This can be set to a lower value to try to cope with very high vibration levels in aircraft. The default value on ArduPlane, APMrover2 and ArduCopter is 20Hz. This option takes effect on the next reboot or gyro initialisation" user="Advanced">
<values>
<value code="0">Default</value>
<value code="5">5Hz</value>
<value code="10">10Hz</value>
<value code="20">20Hz</value>
<value code="42">42Hz</value>
<value code="98">98Hz</value>
</values>
<field name="Units">Hz</field>
</param>
</parameters>
<parameters name="AHRS_">
<param humanName="AHRS GPS gain" name="AHRS_GPS_GAIN" documentation="This controls how how much to use the GPS to correct the attitude. This should never be set to zero for a plane as it would result in the plane losing control in turns. For a plane please use the default value of 1.0.">
<field name="Range">0.0 1.0</field>
<field name="Increment">.01</field>
</param>
<param humanName="AHRS use GPS for navigation" name="AHRS_GPS_USE" documentation="This controls whether to use dead-reckoning or GPS based navigation. If set to 0 then the GPS won't be used for navigation, and only dead reckoning will be used. A value of zero should never be used for normal flight." user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Yaw P" name="AHRS_YAW_P" documentation="This controls the weight the compass or GPS has on the heading. A higher value means the heading will track the yaw source (GPS or compass) more rapidly.">
<field name="Range">0.1 0.4</field>
<field name="Increment">.01</field>
</param>
<param humanName="AHRS RP_P" name="AHRS_RP_P" documentation="This controls how fast the accelerometers correct the attitude">
<field name="Range">0.1 0.4</field>
<field name="Increment">.01</field>
</param>
<param humanName="Maximum wind" name="AHRS_WIND_MAX" documentation="This sets the maximum allowable difference between ground speed and airspeed. This allows the plane to cope with a failing airspeed sensor. A value of zero means to use the airspeed as is.">
<field name="Range">0 127</field>
<field name="Increment">1</field>
<field name="Units">m/s</field>
</param>
<param humanName="AHRS Trim Roll" name="AHRS_TRIM_X" documentation="Compensates for the roll angle difference between the control board and the frame" user="Advanced">
<field name="Range">-10 10</field>
<field name="Units">Radians</field>
</param>
<param humanName="AHRS Trim Pitch" name="AHRS_TRIM_Y" documentation="Compensates for the pitch angle difference between the control board and the frame" user="Advanced">
<field name="Range">-10 10</field>
<field name="Units">Radians</field>
</param>
<param humanName="AHRS Trim Yaw" name="AHRS_TRIM_Z" documentation="Not Used" user="Advanced">
<field name="Range">-10 10</field>
<field name="Units">Radians</field>
</param>
<param humanName="Board Orientation" name="AHRS_ORIENTATION" documentation="Overall board orientation relative to the standard orientation for the board type. This rotates the IMU and compass readings to allow the board to be oriented in your vehicle at any 90 or 45 degree angle. This option takes affect on next boot. After changing you will need to re-level your vehicle." user="Advanced">
<values>
<value code="0">None</value>
<value code="1">Yaw45</value>
<value code="2">Yaw90</value>
<value code="3">Yaw135</value>
<value code="4">Yaw180</value>
<value code="5">Yaw225</value>
<value code="6">Yaw270</value>
<value code="7">Yaw315</value>
<value code="8">Roll180</value>
<value code="9">Roll180Yaw45</value>
<value code="10">Roll180Yaw90</value>
<value code="11">Roll180Yaw135</value>
<value code="12">Pitch180</value>
<value code="13">Roll180Yaw225</value>
<value code="14">Roll180Yaw270</value>
<value code="15">Roll180Yaw315</value>
<value code="16">Roll90</value>
<value code="17">Roll90Yaw45</value>
<value code="18">Roll90Yaw135</value>
<value code="19">Roll270</value>
<value code="20">Roll270Yaw45</value>
<value code="21">Roll270Yaw90</value>
<value code="22">Roll270Yaw136</value>
<value code="23">Pitch90</value>
<value code="24">Pitch270</value>
</values>
</param>
<param humanName="AHRS Velocity Complmentary Filter Beta Coefficient" name="AHRS_COMP_BETA" documentation="This controls the time constant for the cross-over frequency used to fuse AHRS (airspeed and heading) and GPS data to estimate ground velocity. Time constant is 0.1/beta. A larger time constant will use GPS data less and a small time constant will use air data less." user="Advanced">
<field name="Range">0.001 0.5</field>
<field name="Increment">.01</field>
</param>
<param humanName="AHRS GPS Minimum satellites" name="AHRS_GPS_MINSATS" documentation="Minimum number of satellites visible to use GPS for velocity based corrections attitude correction. This defaults to 6, which is about the point at which the velocity numbers from a GPS become too unreliable for accurate correction of the accelerometers." user="Advanced">
<field name="Range">0 10</field>
<field name="Increment">1</field>
</param>
</parameters>
</libraries></paramfile>
