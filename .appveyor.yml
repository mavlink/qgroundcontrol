version: '{branch}-{build}'

build:
  verbosity: minimal

environment:
  matrix:
#  - BUILD: 'Debug'
#    CONFIG: debug
#    SHADOW_BUILD_DIR: $(APPVEYOR_BUILD_FOLDER)\build_windows_debug
  - BUILD: 'Release'
    CONFIG: installer
    SHADOW_BUILD_DIR: $(APPVEYOR_BUILD_FOLDER)\build_windows_install

install:
  - git submodule update --init --recursive
  - call "%ProgramFiles(x86)%\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86
  - set PATH=C:\Qt\Tools\QtCreator\bin;C:\Qt\5.5\msvc2013\bin;%PATH%
  - mkdir %LOCALAPPDATA%\QtProject && copy test\qtlogging.ini %LOCALAPPDATA%\QtProject\
  - if "%CONFIG%" EQU "installer" ( cinst nsis -y -installArgs /D="%programfiles(x86)%\NSIS" )

build_script:
  - mkdir %SHADOW_BUILD_DIR% && cd %SHADOW_BUILD_DIR% && C:\Qt\5.5\msvc2013\bin\qmake -r CONFIG-=debug_and_release CONFIG+=%CONFIG% CONFIG+=WarningsAsErrorsOn %APPVEYOR_BUILD_FOLDER%\qgroundcontrol.pro
  - cd %SHADOW_BUILD_DIR% && jom

test_script:
  - if "%CONFIG%" EQU "debug" ( %SHADOW_BUILD_DIR%\debug\qgroundcontrol --unittest )

artifacts:
  - path: '%SHADOW_BUILD_DIR%\release\qgroundcontrol-installer.exe'
    name: s3

deploy:
  - provider: S3
    access_key_id:
      secure: IGAojLMqokL+76DbdulmWDA3MTsxEBBi3ReVVSqTy9c=
    secret_access_key:
      secure: RiYqaR+3T2PMNz2j5ur8LCA6H/Zfd4jTX33CZE5iBxm+zaz4QLs25p0B7prpaoNN
    bucket: qgroundcontrol
    set_public: true
    folder: $(APPVEYOR_REPO_BRANCH)
    artifact: '$(SHADOW_BUILD_DIR)\release\qgroundcontrol-installer.exe'
    on:
      CONFIG: installer
  - provider: GitHub
    artifact: '$(SHADOW_BUILD_DIR)\release\qgroundcontrol-installer.exe'
    draft: false
    prerelease: false
    on:
      CONFIG: installer
      appveyor_repo_tag: true
