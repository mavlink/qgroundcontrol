# if you update this file, please consider updating Vagrantfile too

language: cpp

env:
  global:
    - CCACHE_CPP2=1
    - CCACHE_DISABLE=1
    - JOBS=4
    - QT_FATAL_WARNINGS=1
    - SHADOW_BUILD_DIR=/tmp/shadow_build_dir
    # ANDROID_STOREPASS
    - secure: RGovyUnMw3fp/bHZi058JvANT1rYmNqrsuSYew0cIgirO6YbMHr/rsjwCm1FTYpBl8s1zgr+u2b8ftYnfnCz2YT+Aip4NWrVYpVU0FEmfytGILrnUS0pjlt8m7fU9AKR1ElOSll7yw7e1kftynN39Q321etvwbLZcXon6zz0suE=

matrix:
    fast_finish: true
    include:
        - os: linux
          dist: trusty
          env: SPEC=linux-g++-64 CONFIG=installer
          sudo: required
        - os: linux
          dist: trusty
          env: SPEC=linux-g++-64 CONFIG=debug
          sudo: required
        - os: android
          language: android
          env: SPEC=android-g++ CONFIG=installer
          sudo: false
        - os: osx
          osx_image: xcode8.3
          env: SPEC=macx-clang CONFIG=installer
          sudo: required
# OSX builds pared back to installer only since travis sucks so bad we can't afford more than one'
#        - os: osx
#          osx_image: xcode8
#          env: SPEC=macx-clang CONFIG=debug
#          sudo: required
#        - os: osx
#          osx_image: xcode8
#          env: SPEC=macx-ios-clang CONFIG=release
#          sudo: false

android:
  components:
    - android-21
    - build-tools-21.1.1
    - platform-tools

addons:
  apt:
    packages:
    - ccache
    - espeak
    - libespeak-dev
    - libgstreamer-plugins-base1.0-dev
    - libgstreamer1.0-0:amd64
    - libgstreamer1.0-dev
    - libsdl2-dev
    - libudev-dev
    - wget

cache:
  directories:
    - $HOME/.ccache

before_install:
  # fetch entire git repo to properly determine the version
  - if [ "${CONFIG}" = "installer" ]; then
        cd ${TRAVIS_BUILD_DIR} && git fetch --unshallow && git fetch --all --tags;
    fi

  # install ccache for osx/ios
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
        wget --quiet https://s3.amazonaws.com/px4-travis/toolchain/macos/ccache &&
        chmod +x ccache && sudo mv ccache /usr/local/bin;
    fi

  # setup ccache
  #- ccache -M 500MB && ccache -z

  # compile threads
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        export JOBS=$((`cat /proc/cpuinfo | grep -c ^processor`+1));
    elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
        export JOBS=$((`sysctl -n hw.ncpu`+1));
    fi

install:
  # linux dependencies: qt
  - if [ "${SPEC}" = "linux-g++-64" ]; then
        wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/Qt5.7.1-linux-min.tar.bz2 &&
        tar jxf Qt5.7.1-linux-min.tar.bz2 -C /tmp &&
        export PATH=/tmp/Qt5.7-linux/5.7/gcc_64/bin:$PATH &&
        export DISPLAY=:99.0 &&
        sh -e /etc/init.d/xvfb start
        ;
    fi

  # android dependencies: qt, gstreamer, android-ndk
  - if [ "${SPEC}" = "android-g++" ]; then
        wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/Qt5.7.1-android-min.tar.bz2 &&
        tar jxf Qt5.7.1-android-min.tar.bz2 -C /tmp &&
        wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/gstreamer-1.0-android-armv7-1.5.2.tar.bz2 &&
        mkdir -p ${TRAVIS_BUILD_DIR}/gstreamer-1.0-android-armv7-1.5.2 &&
        tar jxf gstreamer-1.0-android-armv7-1.5.2.tar.bz2 -C ${TRAVIS_BUILD_DIR}/gstreamer-1.0-android-armv7-1.5.2 &&
        wget --quiet http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin &&
        chmod +x android-ndk-r10e-linux-x86_64.bin &&
        ./android-ndk-r10e-linux-x86_64.bin > /dev/null &&
        export ANDROID_NDK_ROOT=`pwd`/android-ndk-r10e &&
        export ANDROID_SDK_ROOT=/usr/local/android-sdk &&
        export PATH=/tmp/Qt5.7-android/5.7/android_armv7/bin:`pwd`/android-ndk-r10e:$PATH && echo $PATH
        ;
    fi

  # osx dependencies: qt, gstreamer, gstreamer-devel
  - if [ "${SPEC}" = "macx-clang" ]; then
        wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/Qt5.7.1-mac-clang-min.tar.bz2 &&
        tar jxf Qt5.7.1-mac-clang-min.tar.bz2 -C /tmp &&
        wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/gstreamer-1.0-1.5.2-x86_64.pkg &&
        sudo installer -verboseR -pkg gstreamer-1.0-1.5.2-x86_64.pkg -target / &&
        wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/gstreamer-1.0-devel-1.5.2-x86_64.pkg &&
        sudo installer -verboseR -pkg gstreamer-1.0-devel-1.5.2-x86_64.pkg -target / &&
        wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/osx-gstreamer.tar.bz2 &&
        sudo tar jxf osx-gstreamer.tar.bz2 -C /Library/Frameworks &&
        export QT_DIR=Qt5.7-mac-clang/5.7/clang_64 &&
        export QT_QPA_PLATFORM_PLUGIN_PATH=/tmp/$QT_DIR/plugins &&
        export QML2_IMPORT_PATH=/tmp/$QT_DIR/qml &&
        export PATH=/tmp/$QT_DIR/bin:$PATH
        ;
    fi

  # ios dependencies: qt, TODO: add gstreamer
  - if [ "${SPEC}" = "macx-ios-clang" ]; then
        wget --quiet https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/Qt5.8.0-ios-min.tar.bz2 &&
        tar jxf Qt5.8.0-ios-min.tar.bz2 -C /tmp &&
        export IOS_CCACHE_CC=`/usr/bin/xcrun -sdk iphoneos -find clang` &&
        export IOS_CCACHE_CXX=`/usr/bin/xcrun -sdk iphoneos -find clang++` &&
        export PATH=/tmp/Qt5.8-ios/5.8/ios/bin:$PATH &&
        tools/patch_qt_for_xcode8.sh
        ;
    fi

before_script:
  - cd ${TRAVIS_BUILD_DIR}

  # grab latest PX4 parameter and airframe metadata
  - wget --quiet http://px4-travis.s3.amazonaws.com/Firmware/master/parameters.xml -O src/FirmwarePlugin/PX4/PX4ParameterFactMetaData.xml
  - wget --quiet http://px4-travis.s3.amazonaws.com/Firmware/master/airframes.xml -O src/AutoPilotPlugins/PX4/AirframeFactMetaData.xml

  # switch android config from installer to release if the android storepass isn't available
  - if [[ "${SPEC}" = "android-g++" && "${CONFIG}" = "installer" && -z ${ANDROID_STOREPASS} ]]; then
        export CONFIG=release;
    fi

  # insert QGC version in AndroidManifest.xml
  - if [ "${SPEC}" = "android-g++" ]; then
        git remote set-branches origin 'master' &&
        git fetch --tags origin master &&
        ./tools/update_android_version.sh;
    fi

script:
  # run qmake
  - mkdir ${SHADOW_BUILD_DIR} && cd ${SHADOW_BUILD_DIR}
  - qmake -r ${TRAVIS_BUILD_DIR}/qgroundcontrol.pro CONFIG+=${CONFIG} CONFIG+=WarningsAsErrorsOn -spec ${SPEC}

  # compile
  - if [ "${SPEC}" != "macx-ios-clang" ]; then
        make -j$JOBS;
    else
        xcodebuild -IDEBuildOperationMaxNumberOfConcurrentCompileTasks=$JOBS -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO | xcpretty -c && $(exit ${PIPESTATUS[0]});
    fi
  #- ccache -s

  # unit tests linux
  - if [[ "${SPEC}" = "linux-g++-64" && "${CONFIG}" = "debug" ]]; then
    	mkdir -p ~/.config/QtProject/ && cp ${TRAVIS_BUILD_DIR}/test/qtlogging.ini ~/.config/QtProject/ &&
            ./debug/qgroundcontrol-start.sh --unittest;
    fi

after_success:
  - cd ${TRAVIS_BUILD_DIR}

  # master development builds to beta track
  - GOOGLE_PLAY_PKG=org.mavlink.qgroundcontrolbeta
  - if [ "${TRAVIS_TAG}" ]; then
        GOOGLE_PLAY_PKG=org.mavlink.qgroundcontrol;
    elif [ "${TRAVIS_BRANCH}" = "master" ]; then
        GOOGLE_PLAY_PKG=org.mavlink.qgroundcontrolbeta;
    else
        GOOGLE_PLAY_PKG=none;
    fi
  - if [[ "${SPEC}" = "android-g++" && "${TRAVIS_PULL_REQUEST}" = "false" && "${GOOGLE_PLAY_PKG}" != "none" ]]; then
        pip install --user google-api-python-client PyOpenSSL &&
        openssl aes-256-cbc -K $encrypted_25db6eb7c3fd_key -iv $encrypted_25db6eb7c3fd_iv -in android/Google_Play_Android_Developer-4432a3c4f5d1.json.enc -out android/Google_Play_Android_Developer-4432a3c4f5d1.json -d &&
        ./tools/google_play_upload.py production ${GOOGLE_PLAY_PKG} ${SHADOW_BUILD_DIR}/release/package/QGroundControl.apk;
    fi

before_deploy:
  # create linux appimage
  - cd ${TRAVIS_BUILD_DIR}
  - if [[ "${SPEC}" = "linux-g++-64" && "${CONFIG}" = "installer" ]]; then
        ./deploy/create_linux_appimage.sh ${TRAVIS_BUILD_DIR} ${SHADOW_BUILD_DIR}/release ${SHADOW_BUILD_DIR}/release/package;
    fi

deploy:
  # deploy installers to s3 builds/ if on a branch
  - provider: s3
    access_key_id: AKIAIVORNALE7NHD3T6Q
    secret_access_key:
      secure: BsLXeXUPsCJdX4tawrDnO8OFK5Hk4kzlDTiyH93En6TbjUargVAWDMcHVj7TUhr7+3Tao1W1zb0G4SJe9kHv+jrky0yE72KvoG3YAON0VXWKizxBAKkgHE2RxSTNAwDeKbi2G6YJfNDescBBfX7zEohShdXglQu7CGaUQKRaiI4=
    bucket: qgroundcontrol
    local_dir: ${SHADOW_BUILD_DIR}/release/package
    upload-dir: builds/${TRAVIS_BRANCH}
    acl: public_read
    region: us-west-2
    skip_cleanup: true
    on:
      all_branches: true
      condition: $CONFIG = installer

  # deploy tagged installers to s3 latest/
  - provider: s3
    access_key_id: AKIAIVORNALE7NHD3T6Q
    secret_access_key:
      secure: BsLXeXUPsCJdX4tawrDnO8OFK5Hk4kzlDTiyH93En6TbjUargVAWDMcHVj7TUhr7+3Tao1W1zb0G4SJe9kHv+jrky0yE72KvoG3YAON0VXWKizxBAKkgHE2RxSTNAwDeKbi2G6YJfNDescBBfX7zEohShdXglQu7CGaUQKRaiI4=
    bucket: qgroundcontrol
    local_dir: ${SHADOW_BUILD_DIR}/release/package
    upload-dir: latest
    acl: public_read
    region: us-west-2
    skip_cleanup: true
    on:
      tags: true
      condition: $CONFIG = installer

  # deploy tagged installers to s3 version folder
  - provider: s3
    access_key_id: AKIAIVORNALE7NHD3T6Q
    secret_access_key:
      secure: BsLXeXUPsCJdX4tawrDnO8OFK5Hk4kzlDTiyH93En6TbjUargVAWDMcHVj7TUhr7+3Tao1W1zb0G4SJe9kHv+jrky0yE72KvoG3YAON0VXWKizxBAKkgHE2RxSTNAwDeKbi2G6YJfNDescBBfX7zEohShdXglQu7CGaUQKRaiI4=
    bucket: qgroundcontrol
    local_dir: ${SHADOW_BUILD_DIR}/release/package
    upload-dir: ${TRAVIS_BRANCH}
    acl: public_read
    region: us-west-2
    skip_cleanup: true
    on:
      tags: true
      condition: $CONFIG = installer

  # deploy installers to Github releases if on a tag
  - provider: releases
    api-key:
      secure: K/Zqr/FCC7QvzFxYvBtCinPkacQq2ubJ2qm982+38Zf/KjibVOF1dEbVdrGZmII6Tg5DaQzNXGYkg5PvYmJgT9xRsqeQjeYIUYqYZpAt+HYWA38AVfMU8jip/1P1wmwqD469nzJOBBa8yfsMs6Ca7tBaNl/zTxCRGnAgEzqtkdQ=
    file_glob: true
    file:
      - ${SHADOW_BUILD_DIR}/release/package/qgroundcontrol.*
      - ${SHADOW_BUILD_DIR}/release/package/QGroundControl.*
    skip_cleanup: true
    on:
      tags: true
      condition: $CONFIG = installer

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/60b033428ae9dc715662
    on_success: change
    on_failure: always
    on_start: never
